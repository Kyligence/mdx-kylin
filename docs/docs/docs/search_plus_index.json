{"./":{"url":"./","title":"Introduction","keywords":"","body":"MDX for Kylin Overview MDX for Kylin is an analytical data engine. MDX for Kylin offers data governance capabilities, including efficient dataset development, security management. MDX for Kylin has the following key strengths: Unified semantic layer Granular Data Access Control A Business-driven Semantic Layer and MDX interface MDX for Kylin automatically synchronizes models from Kylin and builds business semantics upon them. This transforms the technical concepts into business languages, unifying business definitions and meeting the demands of complex analytic scenarios (e.g. YTD, YOY, MOM). MDX for Kylin also offers an MDX interface, so users can connect directly to popular BI tools like Excel, Tableau, and more. Granular Data Access Control MDX for Kylin provides access control for all semantic information in the dataset to meet the needs of analytics platforms for data security management. Powered by Gitbook.            Last Modified： 2022-03-25 17:57:19 "},"installation/":{"url":"installation/","title":"Installation","keywords":"","body":"Installation In this chapter, we will introduce you the prerequisite of installing MDX for Kylin, the installation steps, and the uninstallation steps. Powered by Gitbook.            Last Modified： 2022-03-20 16:11:43 "},"installation/prerequisite.cn.html":{"url":"installation/prerequisite.cn.html","title":"安装前置条件","keywords":"","body":"安装前置条件 为了保障系统的性能与稳定性，我们建议您将 MDX for Kylin 单独运行在一个独立的 Linux 服务器上。 下面我们将为您介绍 MDX for Kylin 安装的前置条件。 Kylin 推荐的硬件配置 推荐的 Linux 版本 需要的依赖 推荐的元数据库版本 推荐的元数据库驱动版本 推荐的客户端配置 Kylin MDX for Kylin 需要对接一个 Kylin 实例或集群，现在 MDX for Kylin 能对接 Kylin 版本为 4.0.2 及以上 如果有需要低于 Kylin 4.x 版本，请参考链接 推荐的硬件配置 我们推荐您使用下述硬件配置安装 MDX for Kylin： 双路 Intel 至强处理器，6核（或8核）CPU，主频 2.3GHz 或以上 32GB ECC DDR3 以上 至少1个 1TB 的 SAS 硬盘（3.5寸），7200RPM，RAID1 至少两个 1GbE 的以太网电口 推荐的 Linux 版本 我们推荐您使用下述版本的 Linux 操作系统： Red Hat Enterprise 7.x CentOS 6.4+ 或 7.x Suse Linux 11 Ubuntu 16 需要的依赖 JAVA 环境：JDK8 或以上 推荐的元数据库版本 MySQL 5.7.x 及以上 推荐的元数据库驱动 jar 版本 mysql-connector-java-8.0.16, 请下载到 /semantic-mdx/lib/ 下或者替换所需的 mysql connector 版本到该路径下 推荐的客户端配置 CPU：2.5 GHz Intel Core i7 操作系统：macOS / windows 7 或 10 内存：8G 或以上 浏览器及版本： 谷歌Chrome 67.0.3396 及以上 Powered by Gitbook.            Last Modified： 2022-03-25 16:27:47 "},"installation/install_linux.cn.html":{"url":"installation/install_linux.cn.html","title":"在 Linux 环境安装","keywords":"","body":"在 Linux 环境安装 在本节中，我们将引导您在 Linux 操作系统环境中快速安装 MDX for Kylin。 请确保您的服务器满足 MDX for Kylin 的安装要求，MDX for Kylin 对服务器的要求请参阅安装前置条件。 下载安装包 创建数据库 解压安装包 加密元数据库访问密码 修改配置文件 启动 MDX for Kylin 注意事项 下载安装包 首先在 Kyligence 提供的下载地址 下载 MDX for Kylin 安装包 创建数据库 创建一个全新的数据库，并将 character_set_database 设定为 utf8mb4 或 utf8, 将 collation_server 设定为 utf8mb4_unicode_ci 或 utf8_unicode_ci， 注意： MySQL 5.7 中的样例创建数据库语句如下： mysql> create database `` default character set utf8mb4 collate utf8mb4_unicode_ci; PostgreSQL 10.1 中的样例创建数据库语句如下： postgresql> create database encoding='utf8'; 解压安装包 解压缩 MDX for Kylin 安装包 $ tar -xf [安装包文件名] 如: $ tar -xf mdx-for-kylin-1.0.0-beta.tar.gz 加密元数据库访问密码 读取解压后的文件；加密 MDX for Kylin 数据库密码，并记录返回的字符 $ cd [解压后文件] $ bin/mdx.sh encrypt '' 注意：如果输入的密码包含特殊字符, 需要用单引号包裹, 如果密码里面有单引号, 那么可以用双引号包裹. 修改配置文件 修改 conf 目录下的配置文件： 配置 insight.properties 参数。 $ vi conf/insight.properties 修改以下配置项： insight.kylin.host: 需要连接的 Kylin 服务器的 IP 地址或 Hostname insight.kylin.port: 需要连接的 Kylin 服务器的端口号 insight.kylin.ssl: 需要连接的 kylin 是否启用了 SSL，默认为 false insight.database.type: 需要连接的 MDX for Kylin 数据库的类型，默认为 mysql, 如果使用PostgreSQL作为元数据库，需要更改类型为postgresql insight.database.useSSL: 需要连接的 MDX for Kylin 数据库是否使用SSL连接，默认为 false insight.database.ip: 需要连接的 MDX for Kylin 数据库服务器的 IP 地址或 Hostname insight.database.port: 需要连接的 MDX for Kylin 数据库的端口号 insight.database.name: 需要连接的 MDX for Kylin 数据库的名称 insight.database.username: 需要连接 MDX for Kylin 数据库的连接用户名 insight.database.password: 需要填入通过第四步加密以后的 MDX for Kylin 数据库管理员密码 insight.semantic.port: MDX for Kylin Semantic 的端口，设置后，使用该端口登陆 MDX for Kylin insight.semantic.datasource-version: 需要指明连接的 MDX for Kylin 版本，仅支持 2, 表示对接 Kylin insight.mdx.cluster.nodes: 需要将集群中所有 MDX for Kylin 节点的 ip 和 port 信息加入配置文件中, 例如insight.mdx.cluster.nodes=ip1:port1,ip2:port2 注意：若不设置 insight.mdx.cluster.nodes ，会导致无法在 UI 中生成诊断包。 更多高级配置可参考基本配置参数文档。 如果您有集群部署的需求，还请先阅读手册诊断包章节 启动 MDX for Kylin 启动 MDX for Kylin，首次启动会需要几分钟的时间来更新元数据 $ bin/mdx.sh start 注意：在首次启动时，由于未并未填写与 Kylin 通信的账户信息，所以同步任务会失败。详情如下图，此时您可正常登陆 MDX for Kylin 并填写同步信息，填写后即可正常同步。 安装成功后，您可以通过 http://{host}:{insight.semantic.port}/login/ 登陆 MDX for Kylin 由于 MDX for Kylin 需要与 Kylin 进行通信，所以首次启动时，登陆系统后，系统会提示您填写连接使用的用户名和密码 停止 MDX for Kylin $ bin/mdx.sh stop Powered by Gitbook.            Last Modified： 2022-03-18 22:07:13 "},"installation/MDX_cluster_installation.cn.html":{"url":"installation/MDX_cluster_installation.cn.html","title":"MDX 集群部署","keywords":"","body":"MDX 集群部署 MDX 实例安装配置 Nginx 安装配置 MDX 集群访问方式 注意事项 MDX 实例安装配置 从 Kyligence 提供的下载地址 下载 MDX for Kylin 安装包后，按照手册说明安装必要的组件、修改必要的配置参数，详细请参考在 Linux 环境安装。 集群部署时，为保证能够正常使用生成诊断包功能，需要在每一个 MDX 节点的 ${MDX_HOME}/conf/insight.properties 文件中添加配置项 insight.mdx.cluster.nodes=:,:，将集群中所有 MDX for Kylin 节点的 ip 和 port 信息加入配置文件中。 Nginx 安装配置 Nginx 安装请参考 Nginx 官网安装文档。由于 MDX for Kylin 根据自定义 header：x-Host 和 x-Port 以将请求转发到指定的节点上，以确保可以在页面上通知多个节点生成诊断包并下载，您需要在 Nginx 配置文件中添加路由规则。例如针对 Nginx 1.13.7 ，对两台机器上的 A、B 两个 MDX for Kylin 节点，其 ip 和 port 分别为 : 和 :，则需要在 Nginx 的配置文件中添加如下配置： # can be customized name upstream { server :; server :; } server { listen ; server_name ; #charset utf-8;(Recommended Use) #Enable customized header underscores_in_headers on; location / { if ($http_x_host = '') { #Requests without customized headers can be sent to any node #Here, needs to be consistent with the name after \"upstream\" proxy_pass http://; break; } #For requests containing customized headers, forward them to the specified node proxy_pass http://$http_x_host:$http_x_port;break; } } MDX for Kylin 集群访问方式 完成上述配置后，可以根据 Nginx 配置的 server_name 和 listen ， 页面上通过 http://:/login 来对 MDX for Kylin 集群进行访问，Excel 等BI 工具通过 http://:/mdx/xmla/ 来对 MDX for Kylin 集群上的某个名为 项目进行访问。 注意事项 以上内容中 {} 或 <> 应当根据实际使用情形，连同 {} 或 <> 一同替换为实际值。 多节点部署配置示例中 Nginx 配置为示例配置，具体的路由方式和过滤范围可根据实际需要进行调整。 如果多个 MDX for Kylin 节点的版本不一致，Nginx 转发后对 js 和 css 文件的读取可能存在问题，所以您必须保证各个节点的 MDX for Kylin 版本一致。 由于请求诊断包时使用配置文件中给出的 IP 和 Port 信息，请不要使用 localhost，可能会导致 Nginx 转发失败导致请求无法成功。 在云上环境使用时，为了让 Nginx 能正常转发请求，请将所有 MDX 示例安装在同一虚拟子网内。 Powered by Gitbook.            Last Modified： 2022-03-25 11:15:48 "},"installation/uninstall.cn.html":{"url":"installation/uninstall.cn.html","title":"卸载","keywords":"","body":"卸载 在本节中，我们将为您介绍卸载 MDX for Kylin 的步骤。 在所有 MDX for Kylin 节点上运行下述命令以停止 MDX for Kylin 实例： bin/mdx.sh stop 在所有 MDX for Kylin 节点上运行下述命令以删除工作目录： rm -rf 至此，MDX for Kylin 卸载完成。 Powered by Gitbook.            Last Modified： 2022-03-16 17:11:25 "},"overview/":{"url":"overview/","title":"Overview","keywords":"","body":"Overview In the overview module, you can monitor the MDX for Kylin system and have a glance of the core metrics and system status of each project, including the users served by the project, the queries and the dataset usage, etc. In the upper right corner, you can change the time filtering (Last 7 days by default). The time filtering set here will affect all metrics in the current page. Query Statistics In the query statistics area, you can view the following information about the current project: MDX Queries: the total number of historical MDX queries; AVG. Queries per User: the average number of queries per user; MDX Failed Queries: the total number of historical MDX failed queries; AVG. Query Time: the average response time of queries; Active Users: the number of users who queried. You can click the button to jump to the query history module. Query Trend In the query trend area, you can view the following information about the current project: Queries: the trend of queries amount; Failed Queries: the trend of failed queries amount;; AVG. Query Time: the trend of the average response time of queries. Only five datasets are displayed in the chart by default. You can also specify other datasets by clicking the filter button in the upper right corner. Query Time In the query time area, the changing trend of queries of different response time is displayed. The query time is divided into different levels: 0~3 seconds, 3~10 seconds, 10~30 seconds, 30~60 seconds and > 60 seconds. Ranking In the ranking area, the most/least frequently used datasets are displayed according to the queries amount in descending order. The datasets that have not been queried are not displayed. Powered by Gitbook.            Last Modified： 2022-03-25 15:09:30 "},"dataset/":{"url":"dataset/","title":"Dataset","keywords":"","body":"Data Source In this chapter, we will introduce you how to create and edit dataset. Powered by Gitbook.            Last Modified： 2022-03-16 16:21:11 "},"dataset/design_dataset/":{"url":"dataset/design_dataset/","title":"Dataset Design","keywords":"","body":"Design dataset Welcome to the Design Dataset Tutorial. This tutorial shows how to design a dataset. Abstract This tutorial includes the following: Fill in the basic information Define a relationship Define semantics View and edit dimension table View and edit dimensions View and edit measure Add, View and edit Hierarchy Add, view and edit named sets Add, view and edit calculated measures Define translation Define dimension usage Save YTD, QTD, MTD Instructions Powered by Gitbook.            Last Modified： 2022-03-20 16:40:59 "},"dataset/design_dataset/s1_basic_info.cn.html":{"url":"dataset/design_dataset/s1_basic_info.cn.html","title":"填写基本信息","keywords":"","body":"填写基本信息 此处将以产品自带的样例数据为例，介绍数据集的创建过程。 打开产品的 Web UI，点击数据集菜单，即可打开数据集列表 点击 + 数据集 按钮，即可新增数据集。我们创建一个新的数据集，命名为 kylin_sales_dataset 。 接着，您将进入数据集设计向导。在设计界面的上方，您可以看到当前所在的步骤。 您可以在此处填写数据集的名称。 下一步 定义关系 Powered by Gitbook.            Last Modified： 2022-03-18 16:51:07 "},"dataset/design_dataset/s2_relationship.cn.html":{"url":"dataset/design_dataset/s2_relationship.cn.html","title":"定义关系","keywords":"","body":"定义关系 进入步骤 2 后，您可以根据分析需要，设计需要加入数据集的模型，及定义模型之间的关系。 提示：您必须至少添加一个模型。 在添加第一个模型后，您可以继续添加模型，并定义模型之间的关系 提示：模型必须至少存在一对公共维度表 下一步 定义语义 Powered by Gitbook.            Last Modified： 2022-03-16 16:21:14 "},"dataset/design_dataset/s3_semantic.cn.html":{"url":"dataset/design_dataset/s3_semantic.cn.html","title":"定义语义","keywords":"","body":"定义语义 点击下一步后，就进入了定义语义步骤，该页左侧显示了各个模型中的维度和度量 在该页面您可以完成如下操作： 查看及编辑维度表 查看及编辑维度 查看及编辑度量 新增、查看及编辑层级结构 新增、查看及编辑命名集 新增、查看及编辑计算度量 下一步 查看及编辑维度表 Powered by Gitbook.            Last Modified： 2022-03-16 16:21:14 "},"dataset/design_dataset/s3_1_dimension_table.cn.html":{"url":"dataset/design_dataset/s3_1_dimension_table.cn.html","title":"查看及编辑维度表","keywords":"","body":"查看及编辑维度表 点击 维度表名称 ，您可以查看维表的属性 点击 编辑 按钮后，即可进入编辑页面，在该页面您可以更改维度表的类型及名称 下一步 查看及编辑维度 Powered by Gitbook.            Last Modified： 2022-03-16 16:21:14 "},"dataset/design_dataset/s3_2_dimension.cn.html":{"url":"dataset/design_dataset/s3_2_dimension.cn.html","title":"查看及编辑维度","keywords":"","body":"查看及编辑维度 点击 维度名称 ，您可以查看维度的属性。 维度属性介绍 MDX 系统提供了一些维度的属性设置选项，用于控制这些维度的表现。下面的表格列出了每个属性的含义。 注意：为了确保查询性能，请在 Kylin 创建聚合组时，把作为维度属性的维度加入聚合组。例如 Name Column、属性等。 维度属性 描述 Key Column 此维度对应的列，不可更改。 维度名称 维度的显示名称。 数据类型 维度对应的数据类型，不可更改。 类型 维度的属性。将维度设置为对应的时间属性后，可以用于时间相关的计算。例如计算 YTD，YOY 等。 Name Column Name Column 指定了在分析时展示的值。设置 Name Column 能提高客户端中分析展示的友好性。举例，将维度 Datekey （20120101）的 Name Column 设置为维度 Date_name（2012 年 1 月 1 日）。在使用维度 Datekey 分析时，报表中展示的值为 2012 年 1 月 1 日。Name Column 中的值必须仅与一个 Key Column 中的值对应，否则会引起 MDX 计算错误。 Value Column 定义了 Value Column 后，可以在计算度量的表达式中使用 MemberValue 来返回指定的列。对于日期相关的维度，可以将 Value Column 设置为日期类型的字段，便可以在客户端利用日期筛选器进行过滤，例如筛选去年、上周等。注意：为了查询结果的准确性，Value Column 中的值必须与 Key Column 中的值为一对一或一对多映射关系。 属性 设置了一个或多个维度为属性后，可以在 MDX 表达式中引用显示属性关系。注意：为了查询结果的准确性，属性中的值必须与 Key Column 中的值为一对一或一对多映射关系。 所属文件夹 用于定义维度所属的文件夹。若您需要多级文件夹，请使用 \\ 符号分隔。例如，为一个维度的所属文件夹填写文件夹1\\文件夹2，则此维度将会放置在文件夹2中，而文件夹2嵌套在文件夹1中。 可见 关闭可见后，所有用户都无法使用这个维度。这个选项将会同步到权限列表中。 默认成员 使用表达式来指定此维度返回的默认单个成员。此功能尚属于 BETA 阶段。 编辑维度 点击 编辑 按钮后，即可进入编辑页面，在该页面您可以更改维度名称、属性、Name Column 和 Value Column。 注意：维度中使用 Key Column, Name Column 和 Value Column 中的列仅支持 String, Int, Long, Double, Timestamp, Date, Boolean 类型 您可以在此处设置 Name Column。 注意：在 Name Column 为 none 时，使用 Name Column 相关的表达式时，会按照 Key Column 的内容处理； 您可以在此处设置 Value Column。 注意：在 Value Column 为 none 时，使用 Value Column 相关的表达式时，会按照 Name Column 的内容处理； 您可以在此处设置 Properties。 您可以在此处设置该维度所属的文件夹，若您需要多级文件夹，请使用 \\ 分隔。 注意：多级文件夹仅在 Excel 中生效。 其次您也可以设置该度量的默认成员 注意：该功能现处于 BETA 阶段，现在仅能将默认成员设置该维度的一个成员，例如 [Dates].[Year].&[2019] 默认成员行为说明 当层级中某个维度设置了默认成员，那么将层级放入在筛选器或者切片器时，默认值不会是默认成员。另外，将层级放入行列中时，将会进行默认成员的筛选。 当没有勾选任何默认成员的维度时，其他维度的展示将会受默认成员的筛选。 已知限制: 将设置了默认成员的维度放入透视表的筛选器后，筛选器界面上筛选状态为单选默认成员，但是下拉列表中将展示为全选。 若设置的默认成员不存在，可以正常保存，最终在 Excel 中等同于未设置默认成员。 最后，您可以设置维度在客户端应用中是否可见。 下一步 查看及编辑度量 Powered by Gitbook.            Last Modified： 2022-03-25 12:10:20 "},"dataset/design_dataset/s3_3_measure.cn.html":{"url":"dataset/design_dataset/s3_3_measure.cn.html","title":"查看及编辑度量","keywords":"","body":"查看及编辑度量 点击 度量名称 ，您可以查看度量的属性。 点击 编辑 按钮后，即可进入编辑页面，在该页面您可以更改度量名称、度量格式、设置文件夹和全局是否可见。 注意： 现在 MDX 仅支持 Kylin 中的 SUM、MIN、MAX、COUNT、COUNT_DISTINCT 度量。 现在仅支持 Kylin 中度量的返回类型为 String, Int, Long, Double。 度量格式是为了提高度量值的可读性，您可以为任何度量指定需要的格式，系统支持选择和配置预定义格式，如：数值、货币、百分比，也支持利用格式字符配置自定义格式。查看预定义度量格式和度量格式字符。 您可以在此处设置度量的度量格式： 【打开度量设置页面】 【预定义格式 - 数值】 【自定义格式】 您可以在此处设置度量所属的文件夹，若您需要多级文件夹，请使用 \\ 分隔。 注意：多级文件夹仅在 Excel 中生效。 同时，您可以设置度量在客户端应用中是否可见。 下一步 新增、查看及编辑层级结构 Powered by Gitbook.            Last Modified： 2022-03-25 12:12:05 "},"dataset/design_dataset/s3_4_hierarchy.cn.html":{"url":"dataset/design_dataset/s3_4_hierarchy.cn.html","title":"新增、查看及编辑层级结构","keywords":"","body":"层级结构 你可以在 MDX for Kylin 中创建层级结构。层级结构是基于维度的级别集合，可用于提高数据分析人员的分析能力。 例如，你可以创建一个时间层级结构，包含了年、季、月、周和日级别。这样分析人员在客户端中可以先逐年分析销售额，在需要时可以分别展开“季度 > 月 > 周 > 日”来进行更细粒度的分析。 新增、查看及编辑层级结构 点击 +层级结构 按钮，即可进入新增层级结构页面。 提示： 不可创建跨维度表的层级结构 在层级结构中添加维度时，请按照从粗到细的颗粒度来进行选择 点击 层级结构名称 ，您可以查看层级结构的属性。 点击 编辑 按钮后，即可进入编辑页面，在该页面您可以编辑层级结构。 设置权重 根据不同的业务分析需求，用户可能需要在层级结构中设置自定义上卷，即指定汇总成员值的方式。 在层级结构中，您可以对指定的层级指定（权重）字段。每当计算父级成员的值时，该权重字段就会与子级成员相乘。 权重字段一般为包含 -1 到 1 的值，例如 -1，-0.25、0、0.25、0.5、0.75、1 等值。 正数表示将值累加到父级，负数表示减去相应值，0 表示此子级不应用到父级。 用户可以对几乎所有层级结构使用自定义上卷。 下面用一个药房的例子来介绍这个功能。假设有一个药房的交易数据模型如下： 事实表 F_TRANS TRANS_ID PRODUCT_NAME PRICE 001 polyenes 33 002 5-HTP 84 003 Evening Primrose Oil 53 ... ... ... 维度表 D_MEDICINE 包含以下维度： CATEGORY：类别 SUB_CATEGORY：子类别 SUB2_CATEGORY：次级类别 PRODUCT_NAME：药品名称 及以上维度对应的权重列，一共 4 个 配置要求： 请将配置 insight.kylin.only.normal.dim.enable 设置为 false。 步骤 1：新建 MDX 数据集，并在维度表中创建层级结构如下。 步骤 2：在编辑层级结构时，点击设置权重的按钮，进入权重设置的弹窗界面。 弹窗内容如下，用户可以对每一个层级设置权重列。设置结束后，点击确定提交。 步骤 3：保存此数据集的改动后，连接 Excel 进行分析。在透视表中放置层级结构和度量 SUM(PRICE)，并展开层级结构，即可根据权重字段的值来进行自定义上卷计算。 已知限制 仅支持聚合方式为 SUM 的度量与设置了权重字段的层级结构进行自定义的上卷计算。 若需要筛选设置了权重字段的层级结构，可以在行标签或者列标签上进行筛选。若将此层级结构放入筛选器中，筛选的结果可能会不准确。 对于时间类型的维度表，考虑到时间智能类的分析与自定义的上卷计算可能会冲突，用户暂时无法在时间类型的维度表定义的层级结构上设置权重字段。 若在模型中，设置了权重字段的层级结构所在的维度表通过多个主键与事实表多对多连接，分析结果可能不准确。 若在同一个维度表中，存在多个层级结构，且引用了相同的权重字段。在报表中添加了多个这样的层级结构时，查询结果可能不准确。 下一步 新增、查看及编辑命名集 Powered by Gitbook.            Last Modified： 2022-03-18 20:57:40 "},"dataset/design_dataset/s3_5_namedset.cn.html":{"url":"dataset/design_dataset/s3_5_namedset.cn.html","title":"新增、查看及编辑命名集","keywords":"","body":"新增、查看及编辑命名集 介绍 在 MDX for Kylin 的使用中，经常会出现需要重复使用一组成员的需求，这种需求可以通过定义命名集来满足。命名集（NamedSet） 是根据指定的表达式 计算得到的一个成员Set，即一组成员的集合，命名集可以直接置于轴上用于展示，也可以在计算度量或其他命名集的表达式中使用。 备注 目前命名集功能支持的 BI 工具包括 Excel 和 Tableau。 目前仅支持成员Set，即一组成员的集合，不支持 Tuple Set，即一组 Tuple 的集合（每个 Tuple 由若干属于不同维度的成员组成）。 命名集中的所有成员必须属于同一层级维度。 操作步骤 点击 +命名集 按钮，即可进入新增命名集页面。 点击 命名集名称 ，您可以查看命名集的相关设置。 点击 编辑 按钮后，即可进入编辑页面，在该页面您可以编辑命名集。命名集的表达式支持 MDX 语言；命名集的所属位置 指示该命名集在 Excel 中将会出现在\"数据透视表字段\"列表的何处；命名集的可见性开关控制该命名集在 BI 工具中是否可见。 示例 在一个数据集中新建命名集，其表达式与上述操作步骤中的\"销售收入前五城市\"命名集。 在 Excel 中将新建的命名集置于行轴上，展示效果如下： 在 Tableau 中将新建的命名集置于行轴上，展示效果如下： 下一步 新增、查看及编辑计算度量 Powered by Gitbook.            Last Modified： 2022-03-18 21:08:13 "},"dataset/design_dataset/s3_6_calculated_measure.cn.html":{"url":"dataset/design_dataset/s3_6_calculated_measure.cn.html","title":"新增、查看及编辑计算度量","keywords":"","body":"新增、查看及编辑计算度量 点击 +计算度量 按钮，即可进入新增计算度量页面。 提示： 在此页面你可以设置计算度量的格式，格式处的下拉框既可以下拉选择，也可以人工填写 表达式处需要填写 MDX 的查询语句 点击 计算度量名称 ，您可以查看计算度量的属性。 点击 编辑 按钮后，即可进入编辑页面，在该页面您可以编辑计算度量。 您可以在此处设置该计算度量所属的文件夹，若您需要多级文件夹，请使用 \\ 分隔。 注意：多级文件夹仅在 Excel 中生效。 同时，您可以设置计算度量在客户端应用中是否可见。 下一步 定义翻译 Powered by Gitbook.            Last Modified： 2022-03-25 12:45:13 "},"dataset/design_dataset/s3_6_s1_non_empty_behavior.cn.html":{"url":"dataset/design_dataset/s3_6_s1_non_empty_behavior.cn.html","title":"非空行为","keywords":"","body":"非空行为 非空行为是一组用于解析 MDX 中非空查询的基础度量的名称集合。当此选项为空时，必须对计算度量进行计算以确定度量值。但如果此属性包含一个或多个基础度量的名称，并且在某个单元格上所有指定的基础度量值均为空，那么该单元格的计算度量值将被直接视为空，跳过计算步骤。 为什么要设置非空行为？ 非空行为是一个由用户指定的优化行为，使用该功能可提高包含计算度量的 NON EMPTY 查询性能。 如何设置非空行为？ 给对应的计算度量设置非空行为，需要执行以下三步： 在定义语义界面中，先找到对应的计算度量，点击编辑。 然后在计算度量表单下面，找到非空行为选择框，选择可能为空的一个或多个基本度量。 点击确定，保存该计算度量，可以在阅览界面中看到非空行为中有了选择的基本度量，最后保存数据集。 设置须知 目前为使单元格计算取得最佳性能，应尽可能只选一个成员，推荐不超过五个。 当 Kylin 模型发生变更后，在数据集中非空行为引用的基础度量若被删除，该数据集依旧可以连接，但数据集的状态会变成错误状态。该计算度量依旧可以正常使用，但被删除的基础度量不会产生任何影响。(当前版本进入数据集后，暂不会显式提示变更基础度量的计算度量。未来版本中将会有报错提示。) Powered by Gitbook.            Last Modified： 2022-03-18 21:57:39 "},"dataset/design_dataset/s3_6_s2_template.cn.html":{"url":"dataset/design_dataset/s3_6_s2_template.cn.html","title":"使用模板","keywords":"","body":"使用模板 使用模板就是指在编辑计算度量的时候，用户可以套用计算度量的模板，来快速生成复杂难写的表达式。 MDX系统在出厂时预定义了一些模板，用户也可以自定义一些常用的模板。 使用模板的目的 降低编辑计算度量的复杂度：让不会编写计算度量表达式、不熟悉MDX查询语法的用户也能定义出想要的计算度量。 降低表达式的编写错误：由于MDX语言体系较为复杂，撰写表达式难免容易写错。所以套用预先定义好正确的表达式模板，会减少计算度量定义错误的发生概率。 提高编辑计算度量的效率：用户可以预先定义好模板，减少重复编写相似且复杂的表达式，方便用户快速创建更多的常用计算度量。 快速浏览常用的模板指标：每个计算度量模板的描述都可以用户定义，且支持自定义翻译。用户仅需在列表中点选查看，就能明白其含义。 使用模板的方法 打开计算度量编辑界面，点击表达式右边使用模板按钮。 出现计算度量模板弹框，选择一个想要的模板。 在参数标签页上，选取所有必填的指标参数。 [可选]点击表达式标签页，查看表达式最终结果。 点击确定按钮，自动填入表达式。 出厂预定义的模板 MDX系统在出厂时内置了一套模板。他们分别是： ├── 默认模板 │ │ ├── 数学运算 │ │ ├── 加法：计算两个值之和。 │ │ ├── 减法：计算两个值之间的差值。 │ │ ├── 乘法：计算两个值的乘积。 │ │ ├── 除法：计算一个值与另一个值的比率。 │ │ │ ├── 时间智能 │ │ ├── 本年至今总计：计算从今年开始的度量或计算度量的总和。 │ │ ├── 本月至今总计：计算从本月开始的度量或计算度量的总和。 │ │ ├── 年同期增长率：计算度量或计算度量的年同期增长率。 │ │ ├── 月同期增长率：计算度量或计算度量的月同期增长率。 添加自定义计算度量模板 MDX系统提供用户自定义计算度量模板，该功能需要通过修改软件包中的配置文件indicators.json来实现。 在insight.properties同级目录下的indicators.json文件中，定义了一个JSON结构，往配置文件的list属性末尾添加计算度量模板JSON结构即可。 快速上手自定义模板 如图是在indicators.json中，增加一个自定义加法模板的例子。 不需重启MDX，可以立即在弹框中看到定义后的模板 样例代码，点击此处展开 注: `template`中的`${0}`代表指标A，`${1}`是指标B。 { \"name\": \"自定义加法\", \"template\": \"${0} + ${1}\", \"folder\": \"数学计算\", \"category\": \"calculateMeasure\", \"buildin\": false, \"description\": \"两个度量相加。\", \"params\": [ { \"name\": \"指标A\", \"accept\": [ \"measure\", \"calculateMeasure\" ], \"placeholder\": \"${指标一}\" }, { \"name\": \"指标B\", \"accept\": [ \"measure\", \"calculateMeasure\" ], \"placeholder\": \"${指标二}\" } ] } 计算度量模板JSON详解 添加模板时，需要注意每个计算度量模板JSON都用逗号分割，最后一个JSON末尾不需要加逗号。 { \"pageNum\": 0, \"pageSize\": 0, \"total\": 0, \"list\": [ ... // 其他模板 { \"name\": \"Month-over-month Change\", // 最后一个模板 \"template\": \"模板表达式\", \"buildin\": true, \"params\": [...] }, // 1. 此处添加逗号分割 { \"name\": \"新模板的名称\", // 2. 在这里添加自定义模板 \"template\": \"新模板的表达式\", ... } // 3. 最后一个模板末尾不要留逗号 ] } 计算度量模板JSON是使用计算度量模板的基础，有了JSON才可以定义模板。模板具体的含义如下： 注：[翻译]代表此处可被translation字段翻译，如果没有定义translation，则不进行翻译。 { \"name\": \"模板的名称 [可翻译]\", \"template\": \"模板的表达式：\\n代表换行，${N}代表第N个参数\", \"folder\": \"模板所属文件夹：可用'\\\\'进行分割，生成多层文件夹 [可翻译]\", \"category\": \"calculateMeasure\", // 默认参数 \"buildin\": false, // 代表是否内建模板 \"description\": \"模板的描述 [可翻译]\", // 参数列表 \"params\": [ { \"name\": \"参数的名称\", \"accept\": [ // 参数可支持的参数类型，可任意组合 \"column\", \"namedSet\", \"measure\", \"calculateMeasure\" \"hierarchy\", \"hierarchyLevel\" ], \"placeholder\": \"参数在表达式中占位符\" } ], // 以上为[必填]数据，以下为[选填]数据 // 翻译列表 \"translation\": { // 中文翻译列表 \"zh\": { \"name\": \"模板的名称\", \"folder\": \"模板所属文件夹\", \"description\": \"模板的描述\", \"params.0.name\": \"参数的名称\", \"params.0.placeholder\": \"参数在表达式中占位符\" }, // 英文翻译列表 \"en\": { \"name\": \"Template's name\", \"folder\": \"Template's folder\", \"description\": \"Template's description\", \"params.0.name\": \"Parameter's name\", \"params.0.placeholder\": \"Parameter's placeholder\" } } } 未来拓展 在目前看来，用户添加自定义计算度量模板可能略微复杂和繁琐，需要一定的学习成本。不过这对MDX未来发展是友好的，因为系统可以直接集成各种多样化复杂场景、模板文案翻译等。未来还有可能支持计算度量模板UI界面，通过UI界面来设计计算度量模板等更具体验的功能。 Powered by Gitbook.            Last Modified： 2022-03-16 16:21:14 "},"dataset/design_dataset/s3_6_s3_semi_additive_measure.cn.html":{"url":"dataset/design_dataset/s3_6_s3_semi_additive_measure.cn.html","title":"半累加度量","keywords":"","body":"半累加度量 在很多的数据分析场景中，半累加度量是很常见的，它可以用于处理证券、账户余额、人力资源等业务领域。比如在银行在使用账户交易记录数据来统计储蓄账户余额时，对于非时间维度，使用正常的求和，而对于时间维度，则需要取最后一条记录的值。 点击 +计算度量 按钮，即可进入新增计算度量页面，您可以增加半累加度量。 Powered by Gitbook.            Last Modified： 2022-03-16 16:21:14 "},"dataset/design_dataset/s3_7_measure_group.cn.html":{"url":"dataset/design_dataset/s3_7_measure_group.cn.html","title":"查看及编辑度量组","keywords":"","body":"查看及编辑度量组 在数据集中，度量值按照 Kylin 中的 Cube 进行分组，度量组用于使维度和度量值相互关联。 提示： Kylin 中的 Cube 形成一个 MDX 中的度量组 对于计算度量是单独的度量组 支持将计算度量移动到不同的度量组中 您可以在此处编辑度量组的名称 Powered by Gitbook.            Last Modified： 2022-03-25 18:12:41 "},"dataset/design_dataset/s3_8_del_objects.cn.html":{"url":"dataset/design_dataset/s3_8_del_objects.cn.html","title":"批量删除命名集/层级结构/计算度量","keywords":"","body":"批量删除命名集/层级结构/计算度量 当发生数据集变更时，如：将某一个模型替换为另一个不同名称的新模型，此时如果数据集中的命名集/计算度量，有使用到被替换模型中的维度/度量/计算度量，则会造成数据集中出现失效的命名集/计算度量。又如：删除 Kylin 中模型的维度，则使用到该维度创建的层级结构都会失效。 在这种情况下，失效的命名集/层级结构/计算度量数量可能会非常多，可以使用批量删除操作来对失效内容进行删除。 下例会同时删除失效的命名集和计算度量 模型和数据集： 模型 InternetSales_clone_Test 和模型 ResellerSales_clone_Test ，组成数据集 MyTestDataset 。其中含计算度量 cm1，使用模型 InternetSales_clone_Test 的度量、计算度量 cm2，使用模型 ResellerSales_clone_Test 的度量、命名集 N1。 变更操作： 用模型 InternetSales_clone_Test_NEW 替换数据集中的模型 InternetSales_clone_Test 计算度量和命名集失效： 计算度量 cm1 和命名集 N1失效： 批量删除操作： 点击上方的点此处理，在窗口中选择想要删除的计算度量和命名集，点击确定 再次确认删除 删除成功 保存数据集 Powered by Gitbook.            Last Modified： 2022-03-25 12:51:41 "},"dataset/design_dataset/s4_translate.cn.html":{"url":"dataset/design_dataset/s4_translate.cn.html","title":"定义翻译","keywords":"","body":"定义翻译 介绍 在 MDX for Kylin 中，您可以嵌入一个基于区域设置标识符 （LCID）来设置指定地域的信息来获取对应区域的语言设置，并展示对应数据集各项实体的名称 这项功能有助于国际化的团队分析同一份数据集，从而节省重复定义数据集的工作，同时也保证不同的团队使用的数据口径是统一的。 备注 目前仅支持中国、美国、英国三种语言设置。 目前可设置的实体为维表、维度、度量、计算度量和层级。如果某维度定义了翻译，那么包含该维度的层级也会使用翻译的名称。 如果分析应用客户端使用的语言没有在数据集定义，那么数据集将采用默认语言。如果您使用是 Excel，不同语言设置的 Excel 将会使用不同的 LCID，如果您使用的是 Tableau，将会使用 Windows 系统的 LCID，您可以尝试更改 Windows 机器的语言设置来改变 LCID。 在 MDX 表达式中引用维度，度量等实体时，请使用默认名称进行引用，而不要使用翻译的名称。 配置步骤 点击添加翻译语言的按钮； 在增加的一列中选择翻译对应的语言，并点击右侧的勾确定添加； 在新增的翻译语言中根据需求，可以设置对应维表、维度、度量名称等的翻译。 使用示例 为一个数据集定义两种语言设置，包含中文和英文(美国)。 使用中文语言设置的 Excel 打开，展示如下： 使用英文语言设置的 Excel 打开，展示如下： 提示：可以在 Excel 中的 选项 - 语言 修改默认语言 下一步 定义维度用法 Powered by Gitbook.            Last Modified： 2022-03-18 21:17:37 "},"dataset/design_dataset/s5_dimension_usage.cn.html":{"url":"dataset/design_dataset/s5_dimension_usage.cn.html","title":"定义维度用法","keywords":"","body":"定义维度用法 该页面将会列出所有的维度表和模型，该页面用于查看和编辑各个模型中维度表和该模型中的度量值之间的维度关系。 若模型中不包含该维度表，系统将显示 无法关联 。 对于不是无法关联的关系，点击 编辑 按钮您可以编辑其关系类型。 可选择的维度用法共有两种： 常规：表示该维度表直接连接到该模型的度量值。 多对多：当前 Kylin 暂不支持多对多关系。 下一步 保存 Powered by Gitbook.            Last Modified： 2022-03-25 14:34:43 "},"dataset/design_dataset/save.cn.html":{"url":"dataset/design_dataset/save.cn.html","title":"保存","keywords":"","body":"保存并创建 完成这些操作后，点击保存并创建，即完成了数据集的设计，您可以在数据集列表中查看它。 下一步 YTD、QTD、MTD 使用说明 Powered by Gitbook.            Last Modified： 2022-03-16 16:21:14 "},"dataset/design_dataset/s8_xtd.cn.html":{"url":"dataset/design_dataset/s8_xtd.cn.html","title":"YTD、QTD、MTD 使用说明","keywords":"","body":"YTD、QTD、MTD 使用说明 将时间维表定义为 time 类型。 创建一个包含年月日的 Hierarchy 命名为 Date-Hierarchy。需要注意： 针对每个层级，依次设置相应的日期维度属性，例如对于层级中的 年 维度，需要设置此维度的属性为年。 创建 CM，格式如下: YTD : SUM(YTD([DATE_DIM].[Date-Hierarchy].CurrentMember), [Measures].[XXX]) MTD : SUM(MTD([DATE_DIM].[Date-Hierarchy].CurrentMember), [Measures].[XXX]) Powered by Gitbook.            Last Modified： 2022-03-16 16:21:14 "},"dataset/access_list.cn.html":{"url":"dataset/access_list.cn.html","title":"配置权限列表","keywords":"","body":"配置权限列表 创建数据集后，可以配置数据集的权限列表。用户可以在此进行对维度、度量、计算度量和命名集等进行权限列表设置。 通过以下步骤来设置权限列表： 在数据集列表中，点击指定数据集右侧的权限按钮，进入权限配置的界面。 选择在维度、度量、计算度量或者命名集的分页页面，点击 + 授权访问 按钮。 出现一个弹窗，在弹窗顶部选中进行权限配置的用户，用户组或者角色，关于如何创建数据集角色，您可以参考数据集角色章节，关于用户和用户组的权限生效机制，请参考实体安全性。 在弹窗内左侧的导航栏中进行模型、表的切换，在右侧可以看到表内的维度或者是模型内的度量、计算度量、命名集。 点击维度、度量或者计算度量前方的眼睛标志，当该标志上有一条斜线，代表对应的维度/度量/计算度量/命名集将会对被设置的用户，用户组或者角色不可访问。 再次点击眼睛标志，则可以去掉可见性限制，使得用户可以访问。 点击提交按钮。 保存成功的权限列表会出现在如下的表格中，用户可以点击表格右侧的删除按钮来删除权限列表，或者点击编辑按钮来再次编辑权限列表。 请参见实体访问安全性了解实体访问的产品设计。 Powered by Gitbook.            Last Modified： 2022-03-25 14:37:37 "},"dataset/import_export.cn.html":{"url":"dataset/import_export.cn.html","title":"数据集导入导出","keywords":"","body":"数据集导入导出 导出数据集 导入数据集 导出数据集 导出单个数据集 进入数据集页面，在单个数据集的操作列中，点击 省略号->导出，即可导出该数据集对应的 ZIP 文件。 导出多个数据集 进入数据集页面，点击导出数据集，在列表中勾选想要导出的数据集（可以先对数据集名称进行模糊搜索），点击导出，即可导出所有的数据集对应的 ZIP 文件。 导入数据集 进入数据集页面，点击导入数据集，选择数据集的 ZIP 文件，点击解析： 当解析成功之后，会弹出窗口，选择操作方式、是否导入权限，点击导入，完成导入。 关于新建/覆盖/不导入三种操作的说明 新建 当目标项目中不存在和源数据集名称相同的数据集，则默认是新建操作，操作列的默认下拉选项是新建。 覆盖 当目标项目中存在和源数据集名称相同的数据集，则默认是覆盖操作，操作列的默认下拉选项是覆盖。 不导入 在任何情况下，用户可以选择不导入。 关于导入时数据集的信息显示 系统会根据不同的操作，在右侧显示对应的信息。 新建 显示新数据集中的模型名称、模型之间的关联关系： 覆盖 源数据集和目标数据集完全一致 两个数据集完全一致的定义：模型名称、模型之间的关联关系、命名集、计算度量、模型下的维表/维度/度量、翻译（精确到每一种翻译语言下，对每一个对象的翻译内容）和维度用法都一致。 源数据集和目标数据集不完全一致 系统会显示源数据集相对目标数据集，增加的对象（如：模型、度量、计算度量），也会显示被删除的对象（如：模型、度量、计算度量）。另外，当翻译或维度用法有不一致时，系统会做文字提示，但不列出详细差异。 不导入 备注 支持跨环境（如从开发环境向生产环境）和跨项目导出/导入数据集 支持导入老版本中导出的 JSON 数据集文件 Powered by Gitbook.            Last Modified： 2022-03-16 16:21:14 "},"dataset/rename_dataset_cn.html":{"url":"dataset/rename_dataset_cn.html","title":"重命名数据集","keywords":"","body":"重命名数据集 进入数据集页面，在单个数据集的操作列中，点击 省略号->重命名： 输入符合名称规则的新名称，点击确定： 完成重命名： Powered by Gitbook.            Last Modified： 2022-03-16 16:21:14 "},"dataset/mdx_list.cn.html":{"url":"dataset/mdx_list.cn.html","title":"MDX 函数列表","keywords":"","body":"MDX 函数列表 MDX 数据类型 MDX 函数列表 时间智能函数说明 MDX 数据类型 MDX 数据类型包含标量类型和非标量类型（元素类型），如下： 标量类型 Integer，整数，表达式如 1，3 * 7，CInt(1.2) Numeric，实数，表达式如 1.0，2 + 3.5，SUM([Date].AllMembers, [Measures].[Count]) * 5 Boolean，TRUE 或 FALSE，表达式如 TRUE，\"hello\" <> \"world\"，SUM([Date].AllMembers, [Measures].[Count]) String，字符串，表达式如 \"MDX Expression\"，\"hello\" || \"world\" 非标量类型 Member，MDX成员，表达式如 [Date].[Year].&[Y2019]，[Date].CurrentMember Tuple，MDX元组，由多个不同维度的 MDX 成员组合而成，表达式如 ([Date].[Year].&[Y2019]，[Country].CurrentMember) Set，MDX集合，MDX 成员的集合或者 MDX 元组的集合，表达式如 [Date].AllMembers，CrossJoin([Date].Members, [Country].Members) Dimension，数据集中的维度表，如 [Date]，[Country] Hierarchy，数据集中的层级，如 [Date].[Time-Hierarchy] Level，数据集中的层级中某一级别，如 [Date].[Time-Hierarchy].[Year]，[Date].[Time-Hierarchy].[Month] MDX 函数列表 以下清单是当前版本中支持的 MDX 函数列表： 提示 : 函数语法格式为 `: [ ,...] 表示包含0个或多个相同类型的 MDX 表达式，以逗号分隔 函数名称 描述与使用 () 构造一个元组。:([,...])([Date].[Day].&[1917-02-09],[Product].[Color].&[Blue]) {} 构造一个集合。:{[,...]}:{[,...]}示例1：{[Customer].[BirthDate].&[1917-02-09]}示例2：{[Customer].[BirthDate].[BirthDate].Members}示例3：{([Customer].[BirthDate].&[1917-02-09],[Product].[Color].&[Blue])} * 两个数字相乘。: * [Measures].[Count]*5 * 返回两组的叉积，等同于CrossJoin。: * : * : * : * 示例1：{[Customer].[BirthDate].[BirthDate].Members}*{[Customer].[Education].[Education].Members}示例2：{[Customer].[BirthDate].&[1917-02-19]}*{[Customer].[Education].[Education].Members}示例3：{[Customer].[BirthDate].[BirthDate].Members}*{[Customer].[Education].&[Bachelors]}示例4：{[Customer].[BirthDate].&[1917-02-19]}*{[Customer].[Education].&[Bachelors]} + 两个数字相加。:+[Measures].[Count]+2 - 两个数字相减。:-[Measures].[Count]-2 - 返回数字的负值。:--[Measures].[Count] / 两个数字相除。:/示例1：2/1示例2：[Measures].[Count]/5 返回表达式是否小于另一个表达式。::示例1：[Measures].[A]示例2：'kylin' 返回表达式是否小于或等于另一个表达式。::示例1：[Measures].[A]示例2：'kylin' <> 返回两个表达式是否不相等:<>:<>示例1：[Measures].[A]示例2：'kylin' = 返回两个表达式是否相等。:=:=示例1：1=2示例2：'kylin'='kylingence' > 返回表达式是否大于另一个表达式。:>1>2 >= 返回表达式是否大于或等于另一个表达式。:>=1>=2 AND 返回两个逻辑表达式的与值。:AND([Measures].[Count]>10000)AND(1=2) Abs 返回数字的绝对值:Abs()Abs(200.1-300) Acos 返回数字的反余弦。:Acos()Acos(0.540302)+acos(-1.000000) Acosh 返回数字的反双曲余弦值。:Acosh()Acosh(1)+Acosh(10) Aggregate 根据查询的上下文，聚合MDX集合的值。:Aggregate():Aggregate(,)示例1：Aggregate({[Date].[CalendarYear].[2014],[Date].[CalendarYear].[2013]})示例2：Aggregate({[Date].[CalendarYear].[2014],[Date].[CalendarYear].[2013]},[Measures].[Count]) AllMembers 返回包含指定维度的所有成员（包括计算成员）的集合。:.AllMembers:.AllMembers:.AllMembers示例1：[Date].[CalendarSemester].[CalendarSemester].Allmembers示例2：[InternetDueDate].[DueFiscalDate-Hierarchy].Allmembers示例3：[InternetDueDate].[DueFiscalDate-Hierarchy].[FiscalYear].Allmembers Asc 返回字符串中第一个字符的Ascii码。:Asc()Asc(\"kylingence\") AscB 别名Asc函数。:AscB()AscB(\"kylingence\") AscW 别名Asc函数。:AscW()AscW(\"kylingence\") Ascendants 返回指定成员的祖先成员集合。:Ascendants()Ascendants([Date].[DueFiscalDate-Hierarchy].[FiscalYear].&[2013].&[1].&[1]) Asin 返回数字的反正弦。:Asin()Asin(-0.5) Asinh 返回数字的反双曲正弦值。:Asinh()Asinh(-5) Atan2 返回指定的x坐标和y坐标的反正切。:Atan2(,)Atan2(-7,7) Atanh 返回数字的反双曲正切值。:Atanh()Atanh(0.76159416) Atn 返回指定数字的反正切值。:Atn()Atn(90) Avg 返回在集合上计算的数值表达式的平均值。:Avg()Avg(,)示例1：Avg({[Date].[CalendarQuarter].[CalendarQuarter].members})示例2：Avg({[Date].[CalendarQuarter].[CalendarQuarter].members},[Measures].[Count]) BottomPercent BottomPercent函数计算指定数值表达式对指定集求得的总和，并按升序对集进行排序。然后，该函数返回合计值累积百分比至少达到指定百分比的最小值元素。该函数返回累积合计至少达到指定百分比的最小子集。:BottomPercent(,,)BottomPercent({[Product].[Color].[Color].members},60,[Measures].[Count]) BottomSum 对集合进行排序并返回其中累计总数至少为指定值的底部N个元素。:BottomSum(,,)BottomSum({[Product].[Color].[Color].members},5220,[Measures].[Count]) CBool 返回已转换为子类型Boolean的Variant的表达式。:CBool()CBool(100) CDate 返回已转换为子类型DateTime的Variant的表达式。:CDate()CDate(\"2020-07-2517:44:10\") CDbl 返回已转换为子类型Numeric的Variant的表达式。:CDbl()CDbl(234.121231231) CInt 返回已转换为子类型Integer的Variant的表达式。:CInt()CInt(234.121231231) Cache 缓存MDX表达式结果Cache(>)Cache([Measures].[Count]) Caption 返回标题。:.Caption:.Caption:.Caption:.Caption示例1：[Customer].[EmailAddress].Caption示例2：[Date].[DueCalendarDate-Hierarchy].Caption示例3：[Date].[DueCalendarDate-Hierarchy].[CalendarYear].Caption示例4：[Product].[Class].&[M].caption Cast 将值转换为另一种类型。:Cast(AS)Cast(1+2ASSTRING) Children 返回成员的子级。:.Children[Date].[DueCalendarDate-Hierarchy].[CalendarYear].&[2010].children Chr 返回包含与指定字符代码关联的字符的字符串。:Chr()chr(48) ChrB 别名Chr函数:ChrB()ChrB(48) ChrW 别名Chr函数:ChrW()ChrW(48) ClosingPeriod 返回某个级别成员的最后一个后代。:ClosingPeriod():ClosingPeriod():ClosingPeriod(,):ClosingPeriod()示例1：[Customer].[person-Hierarchy].[Education].closingperiod示例2：ClosingPeriod([Date].[DueFiscalDate-Hierarchy].[FiscalYear])示例3：ClosingPeriod([Date].[DueFiscalDate-Hierarchy].[FiscalYear],[Date].[DueFiscalDate-Hierarchy].[FiscalYear].&[2010])示例4：ClosingPeriod([Date].[DueFiscalDate-Hierarchy].[FiscalYear].&[2010]) CoalesceEmpty 将空单元格值合并为不同的值。所有表达式必须是相同的类型（数字或字符串）。CoalesceEmpty([,...])CoalesceEmpty(88) Correlation 返回在集合上计算的两个序列的相关性。:Correlation(,):Correlation(,,)示例1：Correlation({[Customer].[Education].&[Bachelors],[Customer].[Education].&[HighSchool]},[Measures].[Count])示例2：Correlation({[Customer].[Education].&[Bachelors],[Customer].[Education].&[HighSchool]},[Measures].[SalesAmout],[Measures].[Count]) Cos 返回指定角度余弦值。:Cos()Cos(60*Pi()/180) Cosh 返回数字的双曲余弦值。:Cosh()Cosh(4) Count 除非使用可选的EXCLUDEEMPTY标志，否则返回集合中的元组数，包括空单元格。:Count():Count(,)示例1：Count({[InternetProduct].[COLOR].[COLOR].members})示例2：Count({[InternetProduct].[COLOR].[COLOR].members},EXCLUDEEMPTY) Count 返回包含空单元格的集合中的元组数。:.Count[Product].[Class].[Class].members.Count Covariance 返回在集合（有偏差）上计算的两个序列的协方差。:Covariance(,):Covariance(,,)示例1：Covariance([Product].[Class].[Class].Members,[Measures].[ProductStandardCost])示例2：Covariance([Product].[Class].[Class].Members,[Measures].[ProductStandardCost],[Measures].[Freight]) CovarianceN 返回在集合（无偏）上评估的两个序列的协方差。:CovarianceN(,):CovarianceN(,,)示例1：Covariancen([Product].[Class].[Class].Members,[Measures].[ProductStandardCost])示例2：Covariancen([Product].[Class].[Class].Members,[Measures].[ProductStandardCost],[Measures].[Freight]) Crossjoin 返回两个集合的叉积。:Crossjoin(,)Crossjoin([Product].[Color].[Color].members,[Product].[Size].[Size].members) CurrentDateMember 以format参数指定的格式返回与当前日期对应的指定维度内的确切成员。如果没有这样的日期，则返回NULL成员。格式字符串与MDX格式函数使用的相同，即VisualBasic格式字符串。:CurrentDateMember(,)CurrentDateMember([Date].[Calendar-Hierarchy],'yyyymmdd') CurrentDateMember 以format参数指定的格式返回与当前日期对应的指定维度内的最近或确切成员。格式字符串与MDX格式函数使用的相同，即VisualBasic格式字符串。:CurrentDateMember(,,)CurrentDateMember(Date].[OrderFiscalDate-Hierarchy],\"20050402\",BEFORE) CurrentDateString 返回format参数指定格式的当前日期。:CurrentDateString()CurrentDateString('yyyymmdd') CurrentMember 在迭代期间返回维度中的当前成员。:.CurrentMember[Product].[Class].CurrentMember CurrentMember 在迭代期间返回层次结构中的当前成员。:.CurrentMember[Date].[OrderFiscalDate-Hierarchy].CurrentMember DDB 返回使用双倍余额递减法或您指定的其他方法指定特定时间段内资产的折旧。:DDB(,,,,)DDB(24000,3000,10,2,1.5) DataMember 返回与维度的非叶成员关联的系统生成的数据成员。:.DataMember[Customer].[CustomerKey].&[11001].DataMember Date 返回包含当前系统日期的日期。:Date()Date() DateAdd 返回一个日期，其中包含已添加指定时间间隔的日期。:DateAdd(,,)示例1：DateAdd(\"h\",1,date())示例2：DateAdd(\"h\",1,[DUEDATE].[DateKey].&[2011-11-23]) DateDiff 返回指定两个指定日期之间的时间间隔数。:DateDiff(,,,,)String类型有：yyyy,q,m,y,d,ww,w,hh,n,s,ms,mcs,ns字段4指定一周的第一天。如果未指定，则假定为星期日。字段5指定一年的第一周。如果未指定，则第一周假定为1月1日所在的一周。示例1：DateDiff(\"yyyy\",Date(),Date())示例2：DateDiff(\"yyyy\",[Date].[DateKey].&[2011-11-23],[Date].[DateKey].&[2012-11-24])示例3：DateDiff(\"yyyy\",Date(),Date(),1)示例4：DateDiff(\"yyyy\",Date(),Date(),1,1) DatePart 返回包含给定日期的指定部分的整数。:DatePart(,,,)字段3指定一周的第一天。如果未指定，则假定为星期日。字段4指定一年的第一周。如果未指定，则第一周假定为1月1日所在的一周。示例1：DatePart(\"yyyy\",[Date].[DateKey].&[2011-11-23])示例2：DatePart(\"yyyy\",[Date].[DateKey].&[2011-11-23],1)示例3：DatePart(\"yyyy\",[Date].[DateKey].&[2011-11-23],1,1) DateSerial 返回指定年，月和日的日期。:DateSerial(,,)DateSerial(2020,3,5) DateValue 返回Variant(Date)。:DateValue()DateValue(CDate('2020-08-27')) Day 返回1到31之间的整数，包括1和31，表示月中的某天。:Day()Day(CDate('2010-09-23')) DefaultMember 返回对象的默认成员。:.DefaultMember:.DefaultMember示例1：[Product].[Class].DefaultMember示例2：[Date].[OrderFiscalDate-Hierarchy].DefaultMember Degrees 将弧度转换为度数。:Degrees()Degrees(0.5*Pi()) Descendants 返回指定级别的成员的后代集合，可选地包括或排除其他级别中的后代。:Descendants():Descendants(,):Descendants(,,):Descendants(,):Descendants(,,):Descendants(,,)示例1：Descendants([Date].[DueCalendarDate-Hierarchy].[CalendarYear].&[2010])示例2：Descendants([Date].[DueCalendarDate-Hierarchy].[CalendarYear].&[2010],[Date].[DueCalendarDate-Hierarchy].[DateKey])示例3：Descendants([Date].[DueCalendarDate-Hierarchy].[CalendarYear].&[2010],[Date].[DueCalendarDate-Hierarchy].[CalendarYear],SELF) Dimension 返回包含指定对象的维度。:.Dimension:.Dimension:.Dimension:.Dimension示例1：[Date].[CalendarYear].[CalendarYear].Dimension示例2：[Date].[DueCalendarDate-Hierarchy].Dimension示例3：[Date].[DueFiscalDate-Hierarchy].[FiscalYear].Dimension示例4：[Date].[CalendarYear].&[2010].Dimension Dimensions 返回多维数据集中从零开始的位置由数值表达式指定的维。:Dimensions()Dimensions(2) Dimensions 返回由字符串指定名称的维度。:Dimensions()Dimensions('[Customer].[AddressLine]') Distinct 消除集合中的重复元组。:Distinct()Distinct({[Date].[FiscalYear].&[2005],[Date].[FiscalYear].&[2005],[Date].[FiscalYear].&[2006]}) DrilldownLevel 将指定级别的集合成员向下钻取到下一级，或者向下钻取集合中的指定维度。根据多级别分层数据结构，你可显式选择要深化的级别。有两种独占方式可指定级别。第一种方法是使用返回级别的MDX表达式来设置level_expression参数，另一种方法是指定索引参数，使用数值表达式指定级别的按数字。:DrilldownLevel():DrilldownLevel(,):DrilldownLevel(,,):DrilldownLevel():DrilldownLevel(,):DrilldownLevel(,,)表达式2是设置Level_expression参数方式表达式3是指定索引参数方式示例1：DrillDownLevel([Date].[DueCalendarDate-Hierarchy].[CalendarQuarter].Members)示例2：DrilldownLevel([Date].[DueCalendarDate-Hierarchy].[CalendarQuarter].Members,[Date].[DueCalendarDate-Hierarchy].[EnglishMonthName])示例3：DrilldownLevel([Date].[DueCalendarDate-Hierarchy].[CalendarYear].Members,,1) DrilldownMember 向下钻取第二个指定集合中存在的集合中的成员。指定了RECURSIVE，则函数将继续以递归方式将结果集的成员与第二个集的成员进行递归比较，并为结果集中每个成员检索每个成员的子成员:DrilldownMember(,)DrilldownMember(,,)示例1：DrillDownMember([Date].[DueFiscalDate-Hierarchy].Members,[Date].[DueCalendarDate-Hierarchy].Members)示例2：DrilldownMember([Date].[DueFiscalDate-Hierarchy].Members,[Date].[DueCalendarDate-Hierarchy].Members,RECURSIVE) Except 找出两组之间的差异，可选择保留重复项。如果指定ALL，则函数将保留在第一组中发现的重复项;在第二个集中找到的重复项仍将被删除。:Except(,):Except(,,)Symbol类型：ALLExcept({[Date].[CalendarYear].&[2005],[Date].[CalendarYear].&[2006]},{[Date].[CalendarYear].&[2005]}) Exclude 限定度量计算的详细级别，例如表达式为Exclude([Product],[Measures].[Qty])，表示计算[Measures].[Qty]时不受维度表[Product]中的维度的筛选条件影响。:Exclude([|,...])Exclude([Date].[DueFiscalDate-Hierarchy],[Measures].[Count]) Exists 返回与第二组的一个或多个元组一起存在的第一组元组的集合。:Exists(,)Exists({[Customer].[Education].&[Bachelors]},{[Customer].[Education].&[Bachelors],[Customer].[Education].&[HighSchool]}) Exp 返回指定e（自然对数的基数）的幂。Exp()[Measures].[Count]*exp(1) Extract 从提取的维度元素返回一组元组，与Crossjoin相反。:Extract(,[,...])Extract([Customer].[Education].[Education].Members*{[Date].[CalendarYear].&[2011],[Date].[CalendarYear].&[2013]},[Customer].[Education]) FV 返回指定基于定期，固定付款和固定利率的年金的未来价值。:FV(,,,,)字段1为每期利率，字段2为年金付款总期数，字段3为每期付款数字段4为一系列付款的现值，如果省略,则假定为0。字段5用于指定付款到期时间的Variant。如果付款期结束时付款到期,则使用0,或者在期初付款到期时使用1。如果省略,则假定为0。示例1：FV(0.12,4,10000)示例2：FV(0.01,48,1000,1)示例3：FV(0.01,48,1000,1,1) Filter 返回根据搜索条件过滤集合而得到的集合。:Filter(,)Filter([Customer].[CustomerKey].[CustomerKey].Members,[Measures].[Count]>6) FirstChild 返回成员的第一个子节点。:.FirstChild[Date].[DueCalendarDate-Hierarchy].[CalendarYear].&[2013].FirstChild FirstQ 返回在集合上计算的数值表达式的第一个四分位数值。:FirstQ():FirstQ(,)FirstQ([Date].[CalendarYear].[CalendarYear].Members,[Measures].[SalesAmout]) FirstSibling 返回成员父级的第一个子级。:.FirstSibling[Date].[CalendarYear].&[2009].FirstSibling Fix 返回数字的整数部分。如果为负数，则返回大于或等于该数字的负数。:Fix()[Measures].[Count]*fix(1.3) Fixed 限定度量计算的详细级别，例如表达式为Fixed([Product],[Measures].[Qty])，表示计算[Measures].[Qty]时忽略[Product]以外任何维度表中的维度的筛选。:Fixed([|,...])Fixed([Product].[Class].[Class],[Measures].[Count]) Format 格式化字符串的数字或日期。:Format(,):Format(,):Format(,)format([Measures].[Count],\"#,##0.00\") FormatCurrency 使用系统控制面板中定义的货币符号返回格式为货币值的表达式。:FormatCurrency(,,,,)字段1为需要被格式化的表达式。字段2为小数点右侧显示位数的数值。字段3指示是否显示小数值的前导零。默认值为-1。字段4指示是否将负值置于括号中。字段5指示是否使用计算机区域设置中指定的数字分组符号将数字分组。-2=TristateUseDefault-使用计算机区域设置中的设置。-1=TristateTrue-True0=TristateFalse-False示例1：FormatCurrency([Measures].[Unitprice])示例2：FormatCurrency([Measures].[Unitprice],2)示例3：FormatCurrency([Measures].[Unitprice],2,-1)示例4：FormatCurrency([Measures].[Unitprice],2,-1,-2)示例5：FormatCurrency([Measures].[Unitprice],2,-1,-2,-1) FormatDateTime 返回格式化为日期或时间的表达式。:FormatDateTime(,)示例1：FormatDateTime(Date())示例2：FormatDateTime(Date(),2) FormatNumber 返回格式为数字的表达式。:FormatNumber(,,,,)字段1为需要被格式化的表达式。字段2为小数点右侧显示位数的数值。默认值为-1（使用的是计算机的区域设置）。字段3指示是否显示小数值的前导零。字段4指示是否将负值置于括号中。字段5指示是否使用计算机区域设置中指定的数字分组符号将数字分组。-2=TristateUseDefault-使用计算机区域设置中的设置。-1=TristateTrue-True0=TristateFalse-False示例1：FormatNumber([Measures].[Freight])示例2：FormatNumber([Measures].[Freight],2)示例3：FormatNumber([Measures].[Unitprice],2,-1)示例4：FormatNumber([Measures].[Unitprice],2,-1,-2)示例5：FormatNumber([Measures].[Unitprice],2,-1,-2,-1) FormatPercent 返回格式为百分比（乘以100）的表达式，其尾部为％字符。:FormatPercent(,,,,)字段1为需要被格式化的表达式。字段2为小数点右侧显示位数的数值。字段3指示是否显示小数值的前导零。字段4指示是否将负值置于括号中。默认值为-1。字段5指示是否使用计算机区域设置中指定的数字分组符号将数字分组。-2=TristateUseDefault-使用计算机区域设置中的设置。-1=TristateTrue-True0=TristateFalse-False示例1：FormatPercent([Measures].[Count]/60398)示例2：FormatPercent([Measures].[Count]/60398,2)示例3：FormatPercent([Measures].[Count]/61000,2,-1)示例4：FormatPercent([Measures].[Count]/61000,2,-1,-2)示例5：FormatPercent([Measures].[Count]/61000,2,-1,-2,-1) Generate 将一个集合应用于另一个集合的每个成员，并通过union连接生成的集合。如果指定ALL，则函数将在结果集中保留重复项。:Generate(,):Generate(,,)Symbol类型：ALLGenerate([Date].[CalendarYear].[CalendarYear].Members,TopCount([Date].[CalendarYear].CurrentMember*[Product].[ProductLine].[ProductLine].Members,3,[Measures].[SalesAmout)) Generate 将一个集合应用于字符串表达式，并通过字符串连接来连接结果集。:Generate(,):Generate(,,)示例1：Generate([Date].[CalendarYear].[CalendarYear].Members\"AND\")示例2：Generate([Date].[CalendarYear].[CalendarYear].Members,[Date].[CalendarYear].CurrentMember.Name,\"AND\") Head 返回集合中第一个指定数量的元素。:Head():Head(,)示例1：Head([Customer].[CustomerKey].[CustomerKey].Members)示例2：Head([Customer].[CustomerKey].[CustomerKey].Members,3) Hex 返回表示数字的十六进制值的字符串。:Hex()Hex([Measures].[Count]) Hierarchize 在层次结构中对集合的成员进行排序。如果指定了post，Hierarchize函数将使用后自然顺序对级别中的成员进行排序。也就是说，子成员优先于他们的父级。:Hierarchize():Hierarchize(,)Symbol类型：POSTHierarchize({[Customer].[Education].&[HighSchool],[Customer].[Education].&[Bachelors]}) Hierarchy 返回对象的层次结构。:.Hierarchy:.Hierarchy示例1：[Date].[DueFiscalDate-Hierarchy].[FiscalYear].Hierarchy示例2：[Date].[DueFiscalDate-Hierarchy].[FiscalYear].&[2010].Hierarchy Hour 返回0到23之间的整数，包括0和23，表示一天中的小时。:Hour()Hour(Cdate('2020-08-1209:30:45')) IIf 返回由逻辑测试确定的两个对象之一。:IIf(,,):IIf(,,):IIf(,,):IIf(,,):IIf(,,):IIf(,,):IIf(,,):IIf(,,):IIf(,,)示例1：IIF([Measures].[Count]>80000,([Customer].[Education].&[Bachelors],[Date].[CalendarYear].&[2011]),([Customer].[Education].&[HighSchool],[Date].[CalendarYear].&[2011]))示例2：IIF([Measures].[Count]>80000,[Customer].[CustomerKey],[Customer].[FirstName])示例3：IIF([Measures].[Count]>80000,[Date].[DueFiscalDate-Hierarchy],[Customer].[person-Hierarchy])示例4：IIF([Measures].[Count]>80000,[Date].[DueFiscalDate-Hierarchy].[FiscalYear],Date].[DueFiscalDate-Hierarchy].[DateKey])示例5：IIF([Measures].[Count]>80000,[Measures].[SalesAmout][Measures].[SalesAmout]>10000)示例6：IIF([Measures].[Count]>80000,[Customer].[Education].[Bachelors],[Customer].[Education].&[HighSchool])示例7：IIF([Measures].[Count]>80000,[Measures].[Unitprice]/3,[Measures].[Unitprice]/4)示例8：IIF([Measures].[Count]>80000,{[Customer].[Education].&[Bachelors]},{[Customer].[Education].&[Bachelors],[Customer].[Education].&[HighSchool]})示例9：IIF([Measures].[SalesAmout]>10000,\"SalesAreHigh\",\"SalesAreLow\") IPmt 返回指定基于定期固定付款和固定利率的特定年金期间的利息支付。:IPmt(,,,,,)字段1为利率。字段2为计算其利息数额的期数。字段3为该项投资的付款期总数。字段4为现值，即本金。字段5为未来值，或在最后一次付款后希望得到的现金余额。字段6为数字0或1，用以指定各期的付款时间是在期初还是期末。（默认为0）示例1：IPmt(0.12,1,3,80000)示例2：IPmt(0.01,1,36,80000,50000)示例3：IPmt(0.01,1,36,80000,50000,1) IS 返回两个对象是否相同。:IS:IS:IS:IS:IS示例1：[Customer].[Education].&[Bachelors] IS [Customer].[Education].&[Bachelors]示例2：[Date].[DueFiscalDate-Hierarchy].[FiscalYear] IS [Date].[DueFiscalDate-Hierarchy].[DateKey]示例3：[Date].[DueFiscalDate-Hierarchy] IS [Date].[DueCalendarDate-Hierarchy]示例4：[Customer].[BirthDate] IS [Customer].[BirthDate]示例5：([Customer].[BirthDate],[Customer].[AddressLine]) IS ([Customer].[BirthDate],[Customer].[AddressLine]) IS EMPTY 确定表达式是否计算为空单元格值。:IS EMPTY:IS EMPTY示例1：[Customer].[Education].&[PrimarySchool] IS EMPTY示例2：([Customer].[AddressLine],[Date].[CalendarQuarter])IS EMPTY IS NULL 返回对象是否为null。: IS NULL: IS NULL: IS NULL: IS NULL示例1：[Customer].[Education].&[PrimarySchool] IS NULL示例2：[Date].[DueCalendarDate-Hierarchy].[CalendarYear] IS NULL示例3：[Customer].[person-Hierarchy] IS NULL示例4：[Customer].[Education].[Education] IS NULL InStr 返回一个字符串在另一个字符串中第一次出现的位置。实现非常基本的InStr形式:InStr(,)InStr(\"kylingence\",\"e\") InStrRev 从字符串的末尾返回一个字符串在另一个字符串中出现的位置。:InStrRev(,,,)字段1为要对其进行搜索的字符串表达式。字段2为要搜索的字符串表达式。字段3规定每次搜索的起始位置。默认的搜索起始位置是最后一个字符（-1）。字段4规定要使用的字符串比较类型。默认是0。可采用下列的值：0-执行二进制比较1-执行文本比较示例1：InStrRev(\"kylingence\",\"e\")示例2：InStrRev(\"kylingence\",\"e\",2)示例3：InStrRev(\"kylingence\",\"e\",2,1) Int 返回数字的整数部分。如果为负数，则返回小于或等于该数字的负数。:Int()Int(1.3) Intersect 返回两个输入集的交集，可选择保留重复项。可选的ALL标志保留重复项。指定的两个集合必须具有相同的维度:Intersect(,,):Intersect(,)Symbol:ALL示例1：Intersect({[Customer].[Education].&[Bachelors],[Customer].[Education].&[HighSchool]},{[Customer].[Education].&[Bachelors]},All)示例2：Intersect({[Customer].[Education].&[Bachelors],[Customer].[Education].&[HighSchool]},{[Customer].[Education].&[Bachelors]}) IsDate 返回一个布尔值，指示表达式是否可以转换为日期。:IsDate()IsDate(Date()) IsEmpty 确定表达式是否计算为空单元格值。:IsEmpty():IsEmpty()示例1：IsEmpty(\"\")示例2：IsEmpty(2) Item 返回中指定的元组的成员。要返回的成员由中的成员中从零开始的位置指定。:.Item()([Customer].[Education].&[Bachelors],[Date].[CalendarYear].&[2010]).Item(0) Item 从中指定的集合返回一个元组。要返回的元组由中集合中元组的从零开始的位置指定。:.Item(){[Customer].[BirthDate].[BirthDate].Members}.Item(1) Item 从中指定的集合返回一个元组。要返回的元组由中的成员名称（或多个名称）指定。.Item([,...])([InternetCustomer].[EDUCATION].[Bachelors],[InternetDueDate].[CalendarYear].&[2010]).Item(0) LCase 返回已转换为小写的字符串。:LCase()LCase(\"KYLINGENCE\") LTrim 返回包含不带前导空格的指定字符串的副本。:LTrim()LTrim(\"kylingence\") Lag 返回沿指定成员维度进一步的成员。:.Lag()[Customer].[Education].[HighSchool].Lag(1) LastChild 返回成员的最后一个子节点。:.LastChild[Date].[DueCalendarDate-Hierarchy].[CalendarYear].&[2013].LastChild LastSibling 返回成员父级的最后一个子级。:.LastSibling[Date].[CalendarYear].&[2010].LastSibling Lead 返回沿指定成员维度进一步的成员。:.Lead()[Customer].[Education].&[HighSchool].Lead(1) Left 从字符串的左侧返回指定数量的字符。:Left(,)Left(\"kylingence\",2) Len 返回字符串中的字符数。:Len()Len(\"kylingence\") Level 返回成员的级别。:.Level[Date].[DueFiscalDate-Hierarchy].[FiscalYear].&[2010].Level Levels 返回层次结构中的位置由数值表达式指定的级别。:.Levels()[Date].[DueFiscalDate-Hierarchy].levels(1) Levels 返回其名称由字符串表达式指定的级别。:.Levels():Levels()示例1：[Date].[DueFiscalDate-Hierarchy].Levels(\"DateKey\")示例2：Levels('[Customer].[person-Hierarchy].[Education]') LinRegIntercept 计算集合的线性回归，并在回归线y=ax+b中返回b的值。:LinRegIntercept(,):LinRegIntercept(,,)字段1为集的有效多维表达式，字段2表示Y轴值的数字的有效数值表达式，字段3通常是单元坐标（返回代表X轴的值的数字）的多维表达式(MDX)的有效数值表达式LinRegIntercept(LastPeriods(3,[Date].[CalendarYear].&[2014]),[Measures].[Count],[Measures].[ResellerCount]) LinRegPoint 计算集合的线性回归，并在回归线y=ax+b中返回y的值。:LinRegPoint(,,):LinRegPoint(,,,)字段1为一个数值（该数值表示切片轴的值）的单元坐标的多维表达式，字段2为集的有效多维表达式，字段3表示Y轴值的数字的有效数值表达式，字段4通常是单元坐标（返回代表X轴的值的数字）的多维表达式(MDX)的有效数值表达式LinRegPoint([Measures].[Count],LastPeriods(3,[Date].[CalendarYear].&[2014]),[Measures].[Count],[Measures].[ResellerCount]) LinRegR2 计算集合的线性回归并返回R2（确定系数）。:LinRegR2(,):LinRegR2(,,)字段1为集的有效多维表达式，字段2表示Y轴值的数字的有效数值表达式，字段3通常是单元坐标（返回代表X轴的值的数字）的多维表达式(MDX)的有效数值表达式LinRegR2(LastPeriods(3,[Date].[CalendarYear].&[2014]),[Measures].[Count],[Measures].[ResellerCount]) LinRegSlope 计算集合的线性回归并返回回归线y=ax+b中的a值。:LinRegSlope(,):LinRegSlope(,,)字段1为集的有效多维表达式，字段2表示Y轴值的数字的有效数值表达式，字段3通常是单元坐标（返回代表X轴的值的数字）的多维表达式(MDX)的有效数值表达式LinRegSlope(LastPeriods(3,[Date].[CalendarYear].&[2014]),[Measures].[Count],[Measures].[ResellerCount]) LinRegVariance 计算集合的线性回归并返回与回归线y=ax+b相关联的方差。:LinRegVariance(,):LinRegVariance(,,)字段1为集的有效多维表达式，字段2表示Y轴值的数字的有效数值表达式，字段3通常是单元坐标（返回代表X轴的值的数字）的多维表达式(MDX)的有效数值表达式LinRegVariance(LastPeriods(3,[Date].[CalendarYear].&[2014]),[Measures].[Count],[Measures].[ResellerCount]) Log 返回指定数字的自然对数。:Log()Log(Exp(2)) Log10 返回数字的以10为底的对数。:Log10()Log10(100) Max 返回在集合上计算的数值表达式的最大值。:Max():Max(,)示例1：max({[Date].[CalendarYear].[CalendarYear].Members})示例2：max({[Date].[CalendarYear].[CalendarYear].Members},[Measures].[Count]) Median 返回在集合上计算的数值表达式的中值。Median():Median(,)示例1：Median({[Date].[CalendarYear].[CalendarYear].Members})示例2：Median({[Date].[CalendarYear].[CalendarYear].Members},[Measures].[Count]) Members 返回对象中的成员集。:.Members:.Members:.Members示例1：[Date].[CalendarYear].[CalendarYear].Members示例2：[Customer].[person-Hierarchy].Members示例3：[Date].[DueFiscalDate-Hierarchy].[FiscalYear].Members Mid 从字符串返回指定数量的字符。:Mid(,,)字段1为搜索的字符串。字段2规定起始位置。如果设置为大于字符串中的字符数目，则返回空字符串(\"\")。字段3为要返回的字符数目。如果省略或length超过文本的字符数（包括start处的字符），将返回字符串中从start到字符串结束的所有字符。示例1：Mid(\"kylingence\",3)示例2：Mid(\"kylingence\",2,4) Min 返回在集合上计算的数值表达式的最小值。:Min():Min(,)min([Date].[CalendarYear].[CalendarYear].Members,[Measures].[Count]) Minute 返回0到59之间的整数，包括0和59，表示小时的分钟。:Minute()Minute(CDate('2019-05-2320:49:28')) Month 返回1到12之间的整数，包括1和12，表示一年中的月份。:Month()Month(CDate('2012-03-2418:39:28')) Mtd PeriodsToDate函数的快捷函数，指定级别为Month。时间智能函数说明:Mtd():Mtd()MTD([Date].[Calendar-Hierarchy].currentmember) NOT 返回条件的否定。:NOTNOT[Measures].[Count]>80000 Name 返回名称。:.Name:.Name:.Name:.Name示例1：[Customer].[Education].[Education].Name示例2：[Customer].[person-Hierarchy].name示例3：[Date].[DueFiscalDate-Hierarchy].[FiscalYear].name示例4：[Date].[DueFiscalDate-Hierarchy].[FiscalYear].[2010].name NextMember 返回包含指定成员的级别中的下一个成员。:.NextMember[Customer].[Education].[HighSchool].NextMember NonEmptyCrossJoin 返回两个集合的叉积，不包括空元组和没有关联事实表数据的元组。:NonEmptyCrossJoin(,)NonEmptyCrossJoin([Customer].[LastName].[LastName].Members,[Customer].[GENDER].[GENDER].Members) Now 返回根据计算机的系统日期和时间指定当前日期和时间。:Now()Now() OR 或:OR[Measures].[Count]>80000OR[Measures].[SalesAmout]>30000000 Oct 返回表示数字八进制值的字符串。:Oct()Oct([Measures].[Count]) OpeningPeriod 返回某个级别成员的第一个后代。:OpeningPeriod()OpeningPeriod():OpeningPeriod(,)示例1：OpeningPeriod([Date].[DueFiscalDate-Hierarchy].[FiscalYear])示例2：OpeningPeriod([Date].[DueFiscalDate-Hierarchy].[FiscalYear],[Date].[DueFiscalDate-Hierarchy].[FiscalYear].&[2010])示例3：[Date].[DueFiscalDate-Hierarchy].[FiscalYear].openingperiod Order 排列集合的成员，可选地保留或破坏层次结构。如果指定了ASC或DESC，Order函数将根据成员在层次结构中的位置对其进行排列，然后对每个级别进行排序。如果指定了BASC或BDESC，则Order函数将排列集中的成员，而不考虑层次结构。在未指定标志的情况下，ASC为默认值。:Order(,,):Order(,)示例1：Order([Date].[CalendarYear].[CalendarYear].members,[Measures].[Count],DESC)示例2：Order([Date].[DueCalendarDate-Hierarchy].[CalendarYear].members,[Measures].[Count]) Ordinal 返回与级别关联的从零开始的序数值。:.Ordinal[Date].[CalendarYear].[CalendarYear].Ordinal PPmt 返回指定基于定期固定付款和固定利率的特定年金期间的本金。:PPmt(,,,,,)字段1为利率。字段2为计算其利息数额的期数。字段3为该项投资的付款期总数。字段4为现值，即本金。字段5为未来值，或在最后一次付款后希望得到的现金余额。如果省略fv，则假定其值为0（零），即贷款的未来值是0。字段6为数字0或1，用以指定各期的付款时间是在期初还是期末示例1：PPmt(0.1,1,30,100000)示例2：PPmt(0.1,15,30,100000,0)示例3：PPmt(0.1,1,30,100000,0,CBool(0)) PV 返回指定基于将来要支付的定期固定付款和固定利率的年金现值。:PV(,,,,)PV(0,3,2,7,CBool(1)) ParallelPeriod 返回前一句点中与指定成员处于相同相对位置的成员。:ParallelPeriod():ParallelPeriod():ParallelPeriod(,):ParallelPeriod(,,)示例1：ParallelPeriod([Date].[Calendar-Hierarchy].[CalendarYear])示例2：ParallelPeriod([Date].[Calendar-Hierarchy].[CalendarQuarter],1)示例3：ParallelPeriod([Date].[Calendar-Hierarchy].[CalendarYear],1,[Date].[Calendar-Hierarchy].currentMember Parameter 返回参数的默认值。:Parameter(,,,):Parameter(,,):Parameter(,,,):Parameter(,,):Parameter(,,,):Parameter(,,)使用场景较少 Parent 返回成员的父级。:.Parent[Date].[DueFiscalDate-Hierarchy].[FiscalYear].&[2013].&[1].&[1].Parent Percentile 返回位于给定百分位数的元组的值。:Percentile(,,)字段1为定义相对位置的元组。字段2为查询的值，字段3为0到1之间的百分点值，包含0和1。Percentile([Date].[CalendarQuarter].[CalendarQuarter].members,[Measures].[Count],1) PeriodsToDate 返回从第一个句点开始并以指定成员结束的指定级别的一组句点（成员）。:PeriodsToDate():PeriodsToDate():PeriodsToDate(,)示例1：PeriodsToDate([Date].[Calendar-Hierarchy].[CalendarQuarter])示例2：PeriodsToDate([Date].[Calendar-Hierarchy].[CalendarYear],[Date].[Calendar-Hierarchy].[MONTHNUMBEROFYEAR].&[34]) Pi 返回数字3.14159265358979，数学常数pi，精确到15位数。:Pi()Pi() Pmt 返回指定基于定期，固定付款和固定利率的年金付款。:Pmt(,,,,)字段1为贷款利率，字段2为付款总数，字段3为现值，或一系列未来付款额现在所值的总额，也叫本金。字段4为未来值，或在最后一次付款后希望得到的现金余额。如果省略fv，则假定其值为0（零），即贷款的未来值是0。字段5为数字0（零）或1指示支付时间。Pmt(0,3,2,7,CBool(1)) Power 返回提升到幂的数字的结果。:Power(,)Power(4,0.5) PrevMember 返回包含指定成员的级别中的上一个成员。:.PrevMember[Date].[CalendarYear].&[2012].PrevMember Properties 返回成员属性的值。.Properties()[Date].[CalendarYear].[CalendarYear].&[2007].Properties('Caption') Qtd PeriodsToDate函数的快捷函数，指定级别为Quarter。时间智能函数说明:Qtd():Qtd()QTD([Date].[Calendar-Hierarchy].currentmember) RTrim 返回包含指定字符串副本的Variant（String），不带尾随空格。:RTrim()RTrim('abc') Radians 将度数转换为弧度。:Radians()Radians(180) Rank 返回集合中元组的从1开始的排名。:Rank(,):Rank(,,):Rank(,)Rank(,,)示例1：Rank(([Date].[CalendarYear].&[2007],[Customer].[LastName].&[Adams]),[Date].[CalendarYear].[CalendarYear].members*[Customer].[LastName].[LastName].members)示例2：Rank(([Date].[CalendarYear].&[2007],[Customer].[LastName].&[Adams]),[Date].[CalendarYear].[CalendarYear].members*[Customer].[LastName].[LastName].members,[Measures].[Count])示例3：Rank([Date].[CalendarYear].&[2007],[Date].[CalendarYear].[CalendarYear].members)示例4：Rank([Date].[CalendarYear].&[2007],[Date].[CalendarYear].[CalendarYear].members,[Measures].[Count]) Rate 返回指定年金的每个期间的利率。:Rate(,,,,,)字段1为年金的付款总期数。字段2为每期的付款金额。字段3为现值即一系列未来付款当前值的总和。字段4为未来值，或在最后一次付款后希望得到的现金余额。如果省略，则假定其值为0。字段5为数字0或1，用以指定各期的付款时间是在期初还是期末。字段6为预期利率。如果省略，则假定其值为10%。示例1：Rate(12,500,3000)示例2：Rate(12,500,3000,300000)示例3：Rate(12,500,3000,300000,CBool(0))示例4：Rate(12,500,3000,300000,CBool(0),1) Replace 返回一个字符串，其中指定的子字符串已被指定次数的另一个子字符串替换。:Replace(,,,,,)字段1为元字符串。字段2为搜索的子字符串。字段3为替换子字符串。字段4为搜索起始位置，如果省略，假定为1。字段5为要执行的子字符串替换次数，如果省略，假定为-1，表示执行所有的替换。字段6为计算子字符串时的比较类型。Replace('kylingence',gence','mdx',1,1,1) Right 返回包含字符串右侧指定数量字符。:Right(,)Right('kylingence',2) Round 返回四舍五入到指定小数位数的数字。:Round(,):Round()示例1：Round(1.123)示例2：Round(1.123,2) SLN 返回指定单个期间资产的直线折旧。:SLN(,,)字段1为资产原值。字段2为折旧末尾时的值（有时也称为资产残值）。字段3为资产的折旧期数（有时也称作资产的使用寿命）。SLN(100,10,5) SYD 返回指定指定期间内资产的年数总和折旧。:SYD(,,,)字段1为资产原值。字段2为折旧末尾时的值（有时也称为资产残值）。字段3为资产的折旧期数（有时也称作资产的使用寿命）。字段4为期间，必须与字段3使用相同的单位。SYD(1000,100,5,5) Second 返回给定日期时间值的秒数。:Second()Second(CDate('2013-02-2316:39:28')) SetToStr 从集合构造一个字符串。:SetToStr()SetToStr([Date].[CalendarYear].Children) Sgn 返回表示数字符号的Variant(Integer)。:Sgn()Sgn(3.11111) Siblings 返回指定成员的兄弟节点，包括成员本身。.Siblings[Date].[CalendarYear].[CalendarYear].&[2007].Siblings Sin 返回指定角度正弦值。:Sin()Sin(60*Pi()/180) Sinh 返回数字的双曲正弦值。:Sinh()Sinh(-2) Space 返回由指定数量的空格组成的字符串。:Space()\"kylingence\"||Space(3)||\"MDX\" Sqr 返回指定数字的平方根。:Sqr()Sqr(4) SqrtPi 返回(number*pi)的平方根。:SqrtPi()SqrtPi(4) Stddev 别名StdevP函数:Stddev()Stddev(,)示例1：StdDev({[Date].[CalendarYear].&[2010],[Date].[CalendarYear].&[2011],[Date].[CalendarYear].&[2012]})示例2：StdDev({[Date].[CalendarYear].&[2010],[Date].[CalendarYear].&[2011],[Date].[CalendarYear].&[2012]},[Measures].[Count]) StddevP 别名StdevP函数:StddevP()StddevP(,)示例1：StddevP({[Date].[CalendarYear].&[2010],[Date].[CalendarYear].&[2011],[Date].[CalendarYear].&[2012]})示例2：StddevP({[Date].[CalendarYear].&[2010],[Date].[CalendarYear].&[2011],[Date].[CalendarYear].&[2012]},[Measures].[Count]) Stdev 返回在集合（无偏）上计算的数值表达式的标准偏差。:Stdev()Stdev(,)示例1：Stdev({[Date].[CalendarYear].&[2010],[Date].[CalendarYear].&[2011],[Date].[CalendarYear].&[2012]})示例2：Stdev({[Date].[CalendarYear].&[2010],[Date].[CalendarYear].&[2011],[Date].[CalendarYear].&[2012]},[Measures].[Count]) StdevP 返回在集合（有偏差）上计算的数值表达式的标准偏差。:StdevP()StdevP(,)示例1：StdevP({[Date].[CalendarYear].&[2010],[Date].[CalendarYear].&[2011],[Date].[CalendarYear].&[2012]})示例2：StdevP({[Date].[CalendarYear].&[2010],[Date].[CalendarYear].&[2011],[Date].[CalendarYear].&[2012]},[Measures].[Count]) Str 返回数字的字符串表示形式。:Str()Str(34) StrComp 返回表示字符串比较结果的Variant(Integer)。:StrComp(,,)字段3指定字符串比较的类型（可选）。比较参数为0（执行2进制比较），1（执行文本比较），2（基于数据库中的信息执行比较）示例1：StrComp(\"abcd\",\"ABCD\")示例2：StrComp(\"abcd\",\"ABCD\",0)StrComp(\"abcde\",\"ABCD\",1) StrReverse 返回一个字符串，其中指定字符串的字符顺序颠倒过来。:StrReverse()StrReverse(\"abcde\") StrToMember 以MDX格式从唯一名称返回成员。:StrToMember()StrToMember('[Customer].[Education].&[Bachelors]') StrToSet 根据字符串表达式构造一个集合。:StrToSet([,...])StrToSet(\"[Product].[Color].&[Red],[Product].[Color].&[Silver]\",[Product].[Color]) StrToTuple 从字符串构造一个元组。:StrToTuple()StrToTuple(\"([Product].[Color].&[Red],[Product].[Class].&[H])\",[Product].[Color],[Product].[Class]) String :String(,)String(3,\"h\") Subset 返回集合中元素的子集。:Subset(,)Subset(,,)字段1指定要返回第一个元组位置的有效数值表达式。字段2指定要返回的元组数的有效数值表达式。示例1：SubSet({[Date].[CalendarYear].&[2010],[Date].[CalendarYear].&[2011],[Date].[CalendarYear].&[2012]},2)示例2：SubSet({[Date].[CalendarYear].&[2010],[Date].[CalendarYear].&[2011],[Date].[CalendarYear].&[2012]},1,3) Sum 返回在集合上计算的数值表达式的总和。:Sum()Sum(,)Sum([Date].[DateKey].CurrentMember,[Measures].[Count]) Tail 返回集合末尾的子集。:Tail():Tail(,)示例1：Tail({[Date].[CalendarYear].&[2010],[Date].[CalendarYear].&[2011],[Date].[CalendarYear].&[2012],[Date].[CalendarYear].&[2013]})示例2：Tail({[Date].[CalendarYear].&[2010],[Date].[CalendarYear].&[2011],[Date].[CalendarYear].&[2012],[Date].[CalendarYear].&[2013]},2) Tan 返回指定角度正切值。:Tan()Tan(45*Pi()/180) Tanh 返回数字的双曲正切值。:Tanh()Tanh(-2) ThirdQ 返回在集合上计算的数值表达式的第3个四分位数值。:ThirdQ()ThirdQ(,)示例1：ThirdQ({[Date].[CalendarYear].&[2010],[Date].[CalendarYear].&[2011],[Date].[CalendarYear].&[2012]})示例2：ThirdQ({[Date].[CalendarYear].&[2010],[Date].[CalendarYear].&[2011],[Date].[CalendarYear].&[2012],[Date].[CalendarYear].&[2013]},[Measures].[Count]) Time 返回表示当前系统时间的Variant(Date)。:Time()Time() TimeSerial 返回指定小时，分钟和秒的时间。:TimeSerial(,,)字段1为小时，字段2为分钟，字段3为秒TimeSerial(16,34,17) TimeValue 返回包含时间的Variant(Date)。:TimeValue()TimeValue(CDate('2020-09-0218:20')) Timer 返回一个数值，表示自午夜以来经过的秒数。:Timer()Timer() ToggleDrillState ToggleDrillState函数用于切换第一个集中出现的第二个集的每个成员的钻取状态。第一个集可以包含任意维数的元组，但是第二个集必须包含单个维度的成员。ToggleDrillState函数是DrillupMember和DrilldownMember函数的组合。如果第二个集的成员m位于第一个集中，并且该成员被深化(即，在其后面紧跟有后代)，则DrillupMember(Set_Expression1,{m})将其应用于第一个集中的成员或元组。:ToggleDrillState(,)ToggleDrillState(,,)ToggleDrillState({[Customer].[Education].[Education].Members},{[Customer].[Education].&[Bachelors],[Customer].[Education].&[HighSchool]}) TopCount 从集合顶部返回指定数量的项目，可选择先排序集合。:TopCount(,,):TopCount(,)示例1：TopCount({[Customer].[Education].[Education].Members},3,[Measures].[Count])示例2：TopCount({[Customer].[Education].[Education].Members},3) TopPercent 对集合进行排序并返回前N个元素，其累计总数至少为指定的百分比。:TopPercent(,,)TopPercent({[Product].[Color].[Color].Members},60,[Measures].[Count]) TopSum 对集合进行排序并返回其累计总数至少为指定值的前N个元素。:TopSum(,,)TopSum({[Customer].[Education].[Education].Members},30000,[Measures].[Count]) Trim 返回包含指定字符串副本的Variant（String），该字符串没有前导和尾随空格。:Trim()Trim(\"delete空格\") TupleToStr 从元组构造一个字符串。:TupleToStr()TupleToStr(([Customer].[Education].&[Bachelors],[Date].[CalendarYear].&[2011])) TypeName 返回提供有关变量信息的字符串。:TypeName()TypeName(2) UCase 返回已转换为大写的字符串。:UCase()ucase(\"Kylingence\") Union 返回两个集合的并集，可选择ALL保留重复项。:Union(,):Union(,,)Symbol:All示例1：Union({[Date].[CalendarYear].&[2010],[Date].[CalendarYear].&[2013]},{[Date].[CalendarYear].&[2010],[Date].[CalendarYear].&[2012]})示例2：Union({[Date].[CalendarYear].&[2010],[Date].[CalendarYear].&[2013]},{[Date].[CalendarYear].&[2010],[Date].[CalendarYear].&[2012]},All) UniqueName 返回唯一名称。:.UniqueName:.UniqueName:.UniqueName:.UniqueName示例1：[Customer].[Education].[Education].UniqueName示例2：[Customer].[person-Hierarchy].UniqueName示例3：[Customer].[person-Hierarchy].[Education].uniquename示例4：[Customer].[Education].&[Bachelors].UniqueName Unorder 从指定集中删除任何强制排序。:Unorder()Unorder(order([Customer].[Education].[Education].Members,[Measures].[Count])) Val 返回字符串中包含的数字作为适当类型的数值。:Val()Val(\"34\") ValidMeasure 通过将不适用的维度强制到其顶级，返回虚拟多维数据集中的有效度量。:ValidMeasure()ValidMeasure(([Customer].[Education].&[Bachelors],[Date].[CalendarYear].&[2012])) Value 返回度量的值。.Value[Date].[CalendarYear].&[2010].Value Var 返回在集合（无偏）上计算的数值表达式的方差。:Var():Var(,)示例1：Var({[Date].[CalendarYear].&[2010],[Date].[CalendarYear].&[2011],[Date].[CalendarYear].&[2012]})示例2：Var({[Date].[CalendarYear].&[2010],[Date].[CalendarYear].&[2011],[Date].[CalendarYear].&[2012]},2) VarP 返回在集合（有偏差）上计算的数值表达式的方差。:VarP():VarP(,)示例1：VarP({[Date].[CalendarYear].&[2010],[Date].[CalendarYear].&[2011],[Date].[CalendarYear].&[2012]})示例2：VarP({[Date].[CalendarYear].&[2010],[Date].[CalendarYear].&[2011],[Date].[CalendarYear].&[2012]},2) Variance 别名VarP函数。:Variance():Variance(,)示例1：Variance({[Date].[CalendarYear].&[2010],[Date].[CalendarYear].&[2011],[Date].[CalendarYear].&[2012]})示例2：Variance({[Date].[CalendarYear].&[2010],[Date].[CalendarYear].&[2011],[Date].[CalendarYear].&[2012]},3) VarianceP 别名VarP函数。:VarianceP():VarianceP(,)示例1：VarianceP({[Date].[CalendarYear].&[2010],[Date].[CalendarYear].&[2011],[Date].[CalendarYear].&[2012]})示例2：VarianceP({[Date].[CalendarYear].&[2010],[Date].[CalendarYear].&[2011],[Date].[CalendarYear].&[2012]},3) VisualTotals 使用结果集中总标签的模式动态总计集合中指定的子成员。:VisualTotals():VisualTotals(,)示例1：VisualTotals({[Customer].[Education].&[Bachelors],[Customer].[Education].&[HighSchool],[Customer].[Education].&[PartialHighSchool]})示例2：VisualTotals({[Customer].[Education].&[Bachelors],[Customer].[Education].&[HighSchool],[Customer].[Education].&[PartialHighSchool]},'*-Visualtotals') Weekday 返回Variant(Integer)，其中包含表示星期几的整数。:Weekday(,)示例1：Weekday(Date())示例2：Weekday(Date(),3) WeekdayName 返回表示指定星期几的字符串。:WeekdayName(,,)WeekdayName(3,[Measures].[Count] Wtd PeriodsToDate函数的快捷函数，指定级别为Week。时间智能函数说明:Wtd():Wtd()WTD([Date].[Calendar-Hierarchy].currentmember) XOR 对两个数值表达式执行逻辑异运算。:XOR[Measures].[Count]>80000Xor[Measures].[SalesAmout] Year 返回包含表示年份的整数的Variant(Integer)。:Year()Year(CDate(\"2020-09-03\")) Ytd PeriodsToDate函数的快捷函数，指定级别为Year。具体使用方式可以参考时间智能函数说明:Ytd():Ytd()YTD([Date].[Calendar-Hierarchy].currentmember) _CaseMatch 计算各种表达式，并返回与特定值匹配的第一个表达式。Case When Then [...] [Else``] EndCASE sum([Date].[DateKey].CurrentMember,[Measures].[Count])WHEN 0 THEN 'NONE'WHEN 1 THEN 'SMALL'ELSE 'LARGE'END _CaseTest 计算各种条件，并返回第一个计算结果为true的表达式。Case When Then [...] [Else``] EndCASE WHEN [Measures].[Count]THEN 'TRUE'ELSE 'VERYLARGE'END || 连接两个字符串:||'kylin'||'gence' 注意 : MDX for Kylin 中的层级结构，在函数调用时需要写成以下形式：[xxx-Hierarchy] 时间智能函数说明 YTD、QTD、MTD、WTD 使用说明 将时间维表定义为 time 类型。 创建一个包含年月日的 Hierarchy, 并针对每个层级设置相应的维度属性。需要注意的是年月日对应的字段的格式需要是纯数字的， 比如 Y2018, Q1, 2018-01-01 等都是不符合格式要求的，这将会导致YTD、QTD、MTD、WTD 计算失效。 创建 CM，格式如下: YTD : SUM(YTD([DATE_DIM].[Date-Hierarchy].CurrentMember), [Measures].[XXX]) MTD : SUM(QTD([DATE_DIM].[Date-Hierarchy].CurrentMember), [Measures].[XXX]) Powered by Gitbook.            Last Modified： 2022-03-25 14:38:42 "},"dataset/metadata_synchronization.cn.html":{"url":"dataset/metadata_synchronization.cn.html","title":"元数据同步","keywords":"","body":"元数据同步 元数据同步原理 元数据同步种类 元数据同步频率设置 元数据失败重试机制 元数据同步原理 元数据同步是通过 HTTP 调用的方式从 Kylin 获取数据集需要的相关信息, 并和 MDX for Kylin 中已有的元数据信息进行比对，如果有变更，则根据 Kylin 的变更来修复 MDX 中元数据。 元数据同步种类 元数据同步的信息包含如下种类： 用户列表同步 用户组列表同步 Cube 列表同步 项目列表同步 Segment 列表同步 Cube 元数据信息列表同步 元数据同步频率设置 以上元数据种类，关于第 1 到第 4 项的更改对于用户而言更改难度较小、频率高及同步耗费小，固定 20 秒同步一次，不可更改。 第 5 项和第 6 项两项的更改频率低，默认是 300 秒，即 5 分钟同步一次，基准值是 20 秒， 默认配置值为 15，也就是 20 秒的 15 倍，表示 300 秒，配置项如下： insight.dataset.verify.interval.count=15 注意： 当同步执行任务量级较大时，可能会大于配置项值。真实的同步任务可能与配置项有差异，属于正常行为。 元数据失败重试机制 元数据同步任务可能会因为 Kylin 里用户信息变更等原因，导致 MDX for Kylin 中元数据同步任务停止。此时元数据同步任务会以 20 秒的频率失败重试。如果当前的同步用户信息或 Kylin 恢复正常，则同步任务恢复正常。 Powered by Gitbook.            Last Modified： 2022-03-18 16:13:55 "},"mdx_query/":{"url":"mdx_query/","title":"Query","keywords":"","body":"Query In this chapter, we will introduce you to the query syntax supported by MDX for Kylin and view query history. Powered by Gitbook.            Last Modified： 2022-03-25 11:17:56 "},"mdx_query/query_syntax.cn.html":{"url":"mdx_query/query_syntax.cn.html","title":"查询语法","keywords":"","body":"查询语法 MDX for Kylin 目前支持的 MDX 语法属于标准 MDX 的子集，在某些细节上与最新标准存在一些差异。 本文介绍 MDX for Kylin 支持的语法结构。 SELECT 语句 采用 BNF 描述的语法结构： [ WITH [ , ...n ] ] SELECT [ * | ( [ , ,...n ] ) ] FROM [ ] [ ] ::= ( MEMBER ) | ( SET ) ::= [ NON EMPTY ] Set_Expression [ ] ON Integer_Expression | AXIS(Integer) | COLUMNS | ROWS | PAGES | SECTIONS | CHAPTERS ::= Cube_Name | [NON VISUAL] (SELECT [ * | ( [ , ,...n ] ) ] FROM ) ::= WHERE Tuple_Expression ::= [ CELL ] PROPERTIES Cell_Property_Name [ , Cell_Property_Name,...n ] ::= [DIMENSION] PROPERTIES (Dimension_Property_Name [,Dimension_Property_Name,...n ] ) | (Level_Property_Name [, Level_Property_Name,...n ] ) | (Member_Property_Name [, Member_Property_Name,...n ] ) 语法限制 SELECT_WITH_CLAUSE MDX 目前仅支持 MEMBER 和 SET， 计算度量和命名集需要在数据集中定义。 SELECT_QUERY_AXIS_CLAUSE 特定 Axis 上的查询语句， MDX 仅对最多使用两个 Axis 的情况下启用执行优化。 SELECT_SUBCUBE_CLAUSE 指定查询 Cube，目前支持 Cube_Name，对子查询有限支持。 SELECT_SLICER_AXIS_CLAUSE 表达式必须包含 Dimension 和 Hierarchy 中的 Member，不应该包含 SELECT_QUERY_AXIS_CLAUSE 表达式中所引用的 Member。 语法参数 参数 描述 Set_Expression 返回 Set 的有效多维表达式 Integer_Expression 一个介于 0 和 127 之间的整数 Cube_Name 提供 Cube 名称的有效字符串 Tuple_Expression 返回 Tuple 的有效多维表达式 Cell_Property_Name 表示 Cell 属性的有效字符串 Dimension_Property_Name 表示 Dimension 属性的有效字符串 Level_Property_Name 表示 Level 属性的有效字符串 Member_Property_Name 表示 Member 属性的有效字符串 Powered by Gitbook.            Last Modified： 2022-03-22 17:23:06 "},"mdx_query/query_history.cn.html":{"url":"mdx_query/query_history.cn.html","title":"查询历史","keywords":"","body":"查询历史 此界面保存了查询的基本信息，如查询时间、MDX 语句、查询用户等，可以帮助您记录查询行为，以及更好地管理或优化模型。本节我们为您介绍查询历史界面的内容。 进入查询历史 点击左侧菜单栏中的查询历史，即可进入查询历史页面。如下图所示，只要您对 MDX 进行过查询，就能看到所有查询分析的基本信息。 图片中的每一行是一次查询记录，列的含义如下： 开始时间：提交查询的时间 执行时长：执行完成查询所用的时间 查询语句：查询的 MDX 语句 数据集名称：查询使用的数据集 查询状态：有如下几种状态 成功 失败 应用：提交查询的 BI 的类型 查询节点：处理MDX请求的服务节点 查询用户：提交查询的 MDX for Kylin 用户 查询历史详情 当您点击某一条查询分析左侧的箭头图标时，将展开当前 MDX 查询的详细信息，信息分为查询详情和 SQL 语句两个部分，其中查询详情展示 MDX 脚本和查询的基本信息（如：会话 ID、查询状态等），SQL 语句则展示相关的 SQL 脚本。 【查询详情】 相关详情含义： 查询 ID： MDX 查询执行 ID 执行时长： MDX 查询执行的时长 是否使用 MDX 缓存： 查询是否击中 MDX 缓存 是否使用 Other 引擎： 是否使用了 Other 引擎 网络传输数据大小： 网络传输数据字节 是否超时： 是否查询超时 创建多维数据集结束的时间： 查询过程会生成的多维数据集的创建时间 结果集传输时间： 查询结果传输时间 数据集名称： 查询的数据集名称 是否使用 Gateway：发起查询的客户端是否使用 MDX for Kylin Gateway。 【SQL 语句】 注意：SQL 语句中仅能看到前 1000 行 SQL 语句，您可以点击 SQL 语句框内右上角的复制按钮复制完整的查询语句。 点击更多信息，可以查看详情： 相关详情含义： 系统 ID：SQL 查询执行 ID Kylin 查询 ID：返回结果集的行数 是否使用缓存：查询是否击中缓存 SQL 执行时间：SQL 执行时长 SQL 查询状态：SQL 查询结果状态 Powered by Gitbook.            Last Modified： 2022-03-22 17:41:59 "},"integration/":{"url":"integration/","title":"BI Integration","keywords":"","body":"BI Integration In this chapter, you will learn how MDX for Kylin integrates with BI. Powered by Gitbook.            Last Modified： 2022-03-23 18:11:45 "},"integration/excel_integration.cn.html":{"url":"integration/excel_integration.cn.html","title":"与 Excel 集成","keywords":"","body":"与 Excel 集成 本章节将介绍如何使用 Excel 分析 MDX for Kylin 中定义的数据集，使用 Excel 的数据透视表功能，通过 MDX for Kylin 直接在线查询分析 MDX for Kylin 中定义的数据集。 前提条件 使用 Excel 连接 MDX for Kylin 了解更多 前提条件 安装部署 MDX for Kylin Window 中安装 Excel 2007 及以上版本 使用 Excel 连接 MDX for Kylin 打开 Excel 中选择 数据 —> 获取数据 —> 来自数据库 —>自 Analysis Services 接下来您需要在服务器名称一栏中填写连接 MDX for Kylin 的地址信息，样本如下： http://{host}:{port}/mdx/xmla/{project} MDX for Kylin 默认端口号是7080，project 为 MDX for Kylin 中访问的项目信息。管理员可以在 MDX for Kylin 的安装路径下的 conf/insight.properties 文件中 insight.semantic.port 配置项查找到 MDX for Kylin 的端口号。 若设置了 insight.semantic.context-path 配置项，则需要将地址信息写成： http://{host}:{port}/{context-path}/mdx/xmla/{project} 其中 host 和 port 都应该写成连接 Kylin 的信息。举例： # 设置 context-path 如下 insight.semantic.context-path=/ws/testworkspace/mdx # kylin 登录地址，其中{host}:{port}为 10.10.10.200:7070 http://10.10.10.200:7070/kylin # 则 Excel 中的地址信息应该写成 http://10.10.10.200:7070/ws/testworkspace/mdx/mdx/xmla/test_project 登录凭证请选择使用下列用户名和密码。用户名和密码为您的 MDX for Kylin 登录用户名和密码。 现在数据集已经被连接到 Excel 了。选择您需要使用的数据集，点击下一步。 勾选总是尝试文件来刷新数据，并勾选在文件中保存密码并勾选总是尝试使用此文件来刷新数据，点击完成。 如果您没有勾选这两项，可能会出现频繁认证和刷新报表失败的情况。 现在，您可以使用 Excel 透视表分析 MDX for Kylin 的数据集了。 了解更多 欲了解更多 MDX for Kylin 对接 Excel 的支持情况，请参阅 Excel 功能支持列表。 Powered by Gitbook.            Last Modified： 2022-03-23 18:16:11 "},"integration/excel_function_list.cn.html":{"url":"integration/excel_function_list.cn.html","title":"Excel 功能支持列表","keywords":"","body":"Excel 功能支持列表 前置条件 以下功能需要 Excel 2010 及以上版本 数据连接 功能 支持状态 操作路径 备注 SSAS 连接入口 - 使用账号密码认证 支持 数据 - 获取数据 - 来自数据库 - SSAS 连接过程中需要勾选 在文件中保存密码 和 总是尝试使用文件来刷新 ，否则将可能需要频繁输入认证信息来保持连接 现有连接 支持 数据 - 现有连接 现有连接有两种方式，选择此工作簿中的连接，将会使新建的透视表使用相同连接，选择此计算机的连接文件，会新创建一个连接副本，新建的透视表会使用新的连接副本。另外数据刷新时，同一个连接的透视表将会一并更新 插入透视表 支持 插入-透视表-外部连接 可以选择 SSAS 之外的连接入口，比如 XMLA Connect 脱机文件导入 不支持 拖拽.cub 文件至 Excel 中 Excel 支持从多维服务器中抽取数据，生成 .cub 文件，用于离线分析 透视表分析 在 Excel 透视表中使用语义实体 以下是可在透视表中使用的语义实体 功能 支持状态 操作路径 备注 度量组 支持 透视表字段 默认每个模型对应一个度量组，计算度量单独一个度量组 度量文件夹 支持 透视表字段 维度表 支持 透视表字段 公共维表仅会显示一个 命名集 支持 透视表字段 命名集文件夹 支持 透视表字段 命名集定义后默认在集合文件夹显示 层级维度 支持 透视表字段 普通维度 支持 透视表字段 维度文件夹 支持 透视表字段 字段选择和搜索 功能 支持状态 操作路径 备注 筛选区域 支持 透视表字段 支持对普通维度和层级维度进行筛选 行区域 支持 透视表字段 可以选择普通维度，层级维度和命名集。 列区域 支持 透视表字段 可以选择普通维度，层级维度和命名集。点选时间维度时，时间维度会默认放置在行区域。 值区域 支持 透视表字段 可以选择多个度量。当度量超过两个时，将在列区域默认生成数值维度。 字段搜索 支持 透视表字段 可以在搜索框中搜索维度、度量、层级、命名集 筛选功能 功能 支持状态 操作路径 备注 筛选区域筛选 支持 筛选区域对字段筛选 支持筛选普通维度和层级维度，支持单选和多选，支持模糊查询 行列字段筛选 支持 行区域对字段筛选 支持筛选普通维度和层级维度，支持单选和多选，支持模糊查询 仅保留所选项目隐藏所选项目 支持 列区域对字段筛选 属于列表筛选，不能和值筛选，标签筛选共存 TopN 筛选 支持 透视表右键菜单 - 筛选 属于值筛选的一种；多个维度 TopN，不能联动生效；Hierarchy 多个 Level TopN，可能会导致数据不准确 值筛选 支持 透视表右键菜单 - 筛选 需要配置参数 insight.mdx.mondrian.mdprop.mdx.subqueries 开启子查询，详见基本配置参数；值筛选和标签筛选不能同时生效；对于单字符 等于/不等于/结尾是/结尾不是/大于/小于等于/介于/不介于 查询结果有误；对Hierarchy值筛选后，不可展开；筛选后均不可展示总计 标签筛选 支持 透视表右键菜单 - 筛选 需要配置参数 insight.mdx.mondrian.mdprop.mdx.subqueries 开启子查询，详见基本配置参数；值筛选和标签筛选不能同时生效；对于单字符 等于/不等于/结尾是/结尾不是/大于/小于等于/介于/不介于 查询结果有误；对Hierarchy标签筛选后，不可展开；筛选后均不可展示总计 切片器筛选 支持 透视表分析 属于列表筛选 日程表筛选 不支持 透视表分析 属于列表筛选，滑块形式 Excel 列复制筛选 支持 复制透视表字段 - 字段筛选 复制 Excel 中的一列至空白行，对该列进行筛选，属于 Excel 内部筛选 排序功能 功能 支持状态 操作路径 备注 数据源排序 支持 透视表右键菜单 - 排序 默认是按 SQL 中的字段排序，可以设置 Key Column / Name column 来更改排序显示 手动排序 支持 透视表右键菜单 - 移动 通过 move 功能进行自定义排序 指定字段排序 支持 透视表右键菜单 - 排序 根据所选字段排序，与其他排序手段不能共存 布局显示 功能 支持状态 操作路径 备注 显示格式 支持 透视表右键菜单 - 单元格格式 可以在数据集设计阶段设置度量显示格式，如显示金额符号 $, ￥等，也可以在 Excel 上设置 显示总计 支持 设计 - 分类汇总 一般来说基数小的列放在左边，性能更佳 显示小计 支持 设计 - 分类汇总 一般来说基数小的列放在左边，性能更佳 汇总包含筛选项 不支持 设计 - 分类汇总 对列进行筛选后，总计会依据筛选进行变化。该功能支持总计不依据筛选项进行变化 显示折叠/收缩按钮 部分支持 透视表分析 - 显示 如果是层级维度，默认带 +/- 按钮。如果是多个普通维度，目前不会生成 +/- 按钮。 行显示空数据项 不支持 透视表右键菜单 - 数据透视表选项 - 显示 默认行上所有度量为空时，该行将会被隐藏 列显示空数据项 不支持 透视表右键菜单 - 数据透视表选项 - 显示 默认列上所有度量为空时，该列将会被隐藏 显示字段标题 支持 透视表右键菜单 - 数据透视表选项 - 显示 显示字段列表 支持 透视表分析 - 显示 Tooltip 显示属性 不支持 透视表右键菜单 报表上显示属性 不支持 透视表右键菜单 分组显示空行 支持 设计 - 空行 勾选后将在每个分组后显示空行 字段展开 支持 透视表右键菜单 - 展开 支持展开一层和全部展开 字段折叠 支持 透视表右键菜单 - 折叠 支持折叠一层和全部折叠 层级向下钻取 部分支持 透视表分析 目前只能最多下钻两层，开启子查询后可以下钻多层 层级向上钻取 部分支持 透视表分析 功能不完善，见上 标签重复显示 支持 设计 - 报表布局 压缩形式布局 支持 设计 - 报表布局 大纲形式布局 支持 设计 - 报表布局 表格形式布局 支持 设计 - 报表布局 数据更新 功能 支持状态 操作路径 备注 延迟布局更新 支持 数据透视表字段 仅更新数据，但不会更新结构。如果结构有变更（维度/度量缺失），将会报错 透视表右键更新 支持 数据透视表右键 既更新数据，又更新结构。如果结构有变更，报表将自适应变更，可能会移除相关维度/度量，或者清空整个报表 数据 - 刷新 支持 数据 - 刷新 同上，会更新同一连接的所有报表 全部刷新 支持 数据 会更新所有连接的所有报表 多维数据集函数 功能 支持状态 操作路径 备注 CubeMember 支持 单元格输入公式 返回多维数据集中的成员或元组。 用于验证多 维数据集内是否存在成员或元组 CubeValue 支持 单元格输入公式 从多维数据集中返回汇总值 CubeSet 不支持 单元格输入公式 定义成员或元组的计算集。方法是向服务器上的多维数据集发送一个集合表达式，此表达式创建集合，并随后将该集合返回到 Microsoft Excel CubeSetCount 不支持 单元格输入公式 返回集合中的项目数 CubeKPIMember 不支持 单元格输入公式 返回重要性能指示器 (KPI) 属性，并在单元格中显示 KPI 名称。 KPI 是一种用于监控单位绩效的可计量度量值，如每月总利润或季度员工调整 CubeMemberProperty 不支持 单元格输入公式 返回多维数据集中成员属性的值。 用于验证多维数据集内是否存在某个成员名并返回此成员的指定属性 CubeRankedMember 支持 单元格输入公式 返回集合中的第 n 个或排在一定名次的成员。 用来返回集合中的一个或多个元素，如业绩最好的销售人员或前 10 名的学生 高级功能 功能 支持状态 操作路径 备注 ESC 取消查询 支持 查询过程中键入 ESC 集群情况下可能存在问题 快速计算 支持 透视表右键菜单 - 值显示方式 类似 Tableau 的表计算功能 创建/取消分组 支持 透视表右键菜单 在头部-长尾场景分析中常见，长尾归类为 Others 钻取明细 部分支持 透视表右键菜单 可以双击度量组钻取明细 基于行创建集合 不支持 透视表分析 - 字段、项目和集 可以在 MDX for Kylin 数据集界面定义 基于 MDX 创建集合 不支持 透视表分析 - 字段、项目和集 可以在 MDX for Kylin 数据集界面定义 创建计算度量 不支持 透视表分析 - OLAP 工具 可以在 MDX for Kylin 数据集界面定义 创建计算成员 不支持 透视表分析 - OLAP 工具 可以在 MDX for Kylin 数据集界面定义 模拟分析 不支持 透视表分析 - OLAP 工具 需要具备数据回写功能 脱机分析 不支持 透视表分析 - OLAP 工具 报表制作 功能 支持状态 操作路径 备注 插入图表 支持 插入 - 图表 可以选择各种类型的图表来进行数据可视化 筛选器联动 支持 透视表分析 - 筛选器连接 筛选器设置关联多个透视表后，可进行联动分析，在仪表板中经常使用 报表分享 功能 支持状态 操作路径 备注 数据源切换 支持 透视表分析 - 更改数据源 此操作会更新结构，并更新数据。如果结构有变更，报表将自适应变更，可能会移除相关维度/度量，或者清空整个报表 Powered by Gitbook.            Last Modified： 2022-03-25 18:12:41 "},"integration/tableau_integration.cn.html":{"url":"integration/tableau_integration.cn.html","title":"与 Tableau 集成","keywords":"","body":"与 Tableau 集成 本章节将介绍如何使用 Tableau 分析 MDX for Kylin 中定义的数据集，使用 Tableau 的 Microsoft Analysis Services 连接器，直接在线查询分析 MDX for Kylin 中定义的数据集。 前提条件 使用 Tableau 连接 MDX for Kylin 前提条件 安装部署 MDX for Kylin 安装 Tableau 的 Microsoft Analysis Services 驱动，详见Microsoft Analysis Services 驱动 推荐下载 2012 SP1（版本 11.0.2100.60） 使用 Tableau 连接 MDX for Kylin 选择 连接 —> Microsoft Analysis Services 接下来您需要在服务器名称一栏中填写连接 MDX for Kylin Semantic 的地址信息，样本如下： http://{host}:{port}/mdx/xmla/{project} MDX for Kylin Semantic 默认端口号是7080，用户名和密码时您的 MDX for Kylin 登录用户名和密码。 若设置了 insight.semantic.context-path 配置项，则需要将地址信息写成： http://{host}:{port}/{context-path}/mdx/xmla/{project} 其中 host 和 port 都应该写成连接 Kylin 的信息。举例： # 设置 context-path 如下 insight.semantic.context-path=/ws/testworkspace/mdx # Kylin 登录地址，其中{host}:{port}为 10.10.10.200:7070 http://10.10.10.200:7070/kylin # 则服务器地址信息应该写成 http://10.10.10.200:7070/ws/testworkspace/mdx/mdx/xmla/test_project 现在 Dataset 已经被连接到 Tableau 了。选择您需要使用的 Dataset，点击下一步。 选择数据集后，Tableau即可读取数据集的相关信息，点击工作簿即可开始分析。 现在，您可以使用 Tableau 分析 MDX for Kylin 的 Dataset 了。 Powered by Gitbook.            Last Modified： 2022-03-22 17:58:31 "},"integration/tableau_function_list.cn.html":{"url":"integration/tableau_function_list.cn.html","title":"Tableau 功能支持列表","keywords":"","body":"Tableau 功能支持列表 前置条件 以下功能需要 Windows 环境 Tableau 10.x 及以上版本。 数据连接 功能 支持状态 操作路径 使用 Windows 身份验证 不支持 连接 - 到服务器 - 更多 - Microsoft Analysis Services - 使用 Windows 身份验证 使用特定用户名和密码 支持 连接 - 到服务器 - 更多 - Microsoft Analysis Services - 使用特定用户名和密码 同步语义实体 功能 支持状态 备注 维度表 支持 层级维度 支持 维度 支持 度量 支持 计算度量 支持 计算度量和普通度量都展示在度量区域 命名集 支持 文件夹 不支持 维度、度量等的文件夹都不支持 字段选择和搜索 功能 支持状态 备注 筛选 支持 支持对维度，层级结构和度量进行筛选 行 支持 可以选择维度，层级结构和度量 列 支持 可以选择维度，层级结构和度量 工作表区域 支持 字段搜索 支持 可以在搜索框中搜索维度、度量、层级结构 筛选功能 功能 支持状态 备注 维度筛选 支持 支持常规、条件、顶部筛选，支持单选和多选，支持模糊查询 层级结构筛选 支持 支持常规、条件、顶部筛选，支持单选和多选，支持模糊查询 度量、计算度量筛选 支持 支持值范围、至少、至多、特殊值 排序功能 功能 支持状态 备注 维度、层级结构排序 支持 通过轴、标题、字段标签、工具栏进行排序，可以手动拖拽排序，支持数据源顺序、字母、字段、手动、嵌套排序 度量、计算度量排序 支持 通过轴、标题、字段标签、工具栏进行排序，可以手动拖拽排序 布局显示 功能 支持状态 操作路径 备注 格式设置 支持 右键菜单 - 设置格式 可以在数据集设计阶段设置度量显示格式，如显示金额符号 $, ￥等，也可以在 Tableau 上设置 显示总计 支持 分析 - 合计 一般来说基数小的列放在左边，性能更佳 显示小计 支持 分析 - 合计 - 添加所有小计 一般来说基数小的列放在左边，性能更佳 数据更新 功能 支持状态 操作路径 备注 自动更新工作表 支持 工具栏 - 自动更新工作表 数据源 - 刷新 支持 数据 - 指定数据源 - 刷新 会更新同一连接的所有报表 仪表板 功能 支持状态 操作路径 操作 - 筛选器 支持 仪表板 - 操作 - 添加操作 - 筛选器 操作 - 突出显示 支持 仪表板 - 操作 - 添加操作 - 突出显示 操作 - 转到 URL 支持 仪表板 - 操作 - 添加操作 - 转到 URL 操作 - 转到工作表 支持 仪表板 - 操作 - 添加操作 - 转到工作表 Powered by Gitbook.            Last Modified： 2022-03-16 16:21:14 "},"security/":{"url":"security/","title":"Security","keywords":"","body":"Security In this chapter, we will introduce you the ACL management system in MDX for Kylin. Powered by Gitbook.            Last Modified： 2022-03-23 17:58:29 "},"security/role.cn.html":{"url":"security/role.cn.html","title":"数据集角色","keywords":"","body":"数据集角色 本节将介绍什么是角色，以及如何定义角色，及为用户分配角色。 数据集角色的定义 默认 Admin 角色 为用户分配角色 管理角色 配置角色权限 数据集角色的定义 MDX for Kylin 提供了用户级别的语义信息权限控制和角色级别的语义信息访问控制。如下信息需要注意： 用户在未被分配任何数据集角色，或者配置用户级别的白名单时，用户无任何数据集的访问权限。 用户必须至少具备一个数据集中一个度量或者一个计算度量的访问权限，否则用户无法连接该数据集。 用户应该在 Kylin 中具备数据集对应的项目、表，否则无法连接数据集。 用户被赋予多个角色时，最终的权限为各个角色级别和用户级别的白名单的合集，即若在数据集中用户 A 的访问权限为维度 1 和度量 1，角色 A 的访问权限为维度 2 和度量 2，同时用户 A 又属于角色 A，那么用户 A 的最终访问权限为维度 1、维度 2、度量 1 和度量 2。 默认 Admin 角色 MDX for Kylin 初始会自带一个默认角色，即管理员（Admin）角色，其拥有所有数据集的所有语义信息的访问权限。 Admin 角色的权限分配情况可在进入管理页面——>数据集角色页面 进行查看。 为用户分配角色 您可在进入管理页面——>数据集角色页面中将当前角色批量分配给用户。用户被分配角色后会获得当前角色所拥有的权限。 当用户被分配多个角色时，用户所拥有的权限是所有角色权限的合集。 管理角色 您可在安全 - -> 角色 中创建、编辑及删除角色。您可以批量修改被授予当前角色的用户列表。 注意： 默认角色不可以被编辑和删除。 配置角色权限 想了解如何配置数据集角色的权限，您可以查看配置权限列表章节。 Powered by Gitbook.            Last Modified： 2022-03-23 17:59:46 "},"security/object_level_security.cn.html":{"url":"security/object_level_security.cn.html","title":"实体安全性","keywords":"","body":"实体安全性 理解实体安全性 在实际使用中，语义模型的管理员需要对不同实体的访问权限进行细颗粒读的访问控制，比如度量销售额对公司的物流用户组不可见，但计算度量2020年全年销售额公司的对物流用户组可见，基于这个需求，目前MDX的实体安全性的设计原则为，用户在互相依赖的实体之间的访问控制可分别配置，即会出现某度量对用户不可见但是引用该度量的计算度量用户可见的情况。 实体访问权限的状态 实体访问权限有3种状态： 实体访问状态 产品行为 未配置 未配置访问权限的情况下，用户默认对实体不可见，可通过在配置文件中修改未配置访问权限时的用户的默认访问权限，详见下文。 可访问 配置了可访问后，用户可以查看并查询该实体 不可访问 配置了不可访问后，用户无法查看到该实体，并不可以查询 授予访问权限的粒度 用户在一个数据集上的实体访问权限决定了用户对于数据集上的访问权限，用户必须至少具备一个数据集中一个度量或者一个计算度量的访问权限，否则用户无法查看和查询该数据集。 注意: 由于 Tableau 默认会存在一个 count(*) 的内置度量，所以仅添加维度的权限也可以对接 MDX for Kylin，但是由于这样并没有意义，不建议这样使用 MDX for Kylin。 您可以通过修改参数来配置用户默认情况下对数据集及实体默认访问权限，该参数默认关闭。 参数名称 insight.dataset.allow-access-by-default 使用效果 当为 true 时，所有数据集默认可见性未配置时，数据集对用户可见；当为 false 时，所有数据集默认对用户不可见，数据集可见性需要在界面配置为可见才可查询 默认值 false 生效是否需要重启 是 以角色为单位进行实体授权 MDX for Kylin 提供了用户级别和角色级别的访问权限配置，您可以创建角色并将用户加入角色来实现对一组用户的权限进行统一管理。您可以参考角色对用户角色进行配置。 当用户属于多种角色时，最终的用户的访问权限为各个角色和用户权限的合集，即若在数据集中用户 A 的访问权限为维度 1 和度量 1，角色 A 的访问权限为维度 2 和度量 2，同时用户 A 又属于角色 A，那么用户 A 的最终访问权限为维度 1、维度 2、度量 1 和度量 2。 以用户组为单位进行实体授权 您可以以用户组为单位进行实体授权。 MDX for Kylin 定期同步 Kylin 中的用户和用户组信息，以及用户组包含的用户信息。 用户组和用户，用户组和用户组之间的数据集访问权限会取并集关系。例如，用户 A 在用户组 U1 中，用户 A 被限制了数据集 DA1 中维度 D1 和度量 M1 的访问，用户组 U1 被限制了数据集 DA1 上 的 D2 和 M2 的访问权限。在这种情况下，用户 A 可以访问数据集 D1 的其他实体，但不能访问维度 D1，D2 和 M1 和 M2。 配置实体访问列表 目前您可以在数据集菜单对实体访问权限进行配置，目前 MDX for Kylin 支持对维度、度量、计算度量、命名集进行实体访问列表配置。您可以参考配置权限列表对实体访问列表进行配置。 实体可见性 您可在维度、度量、计算度量、命名集的编辑器上配置其是否可见，当该实体被配置为不可见状态时，所有用户对该实体的访问权限也会受到限制，且在实体的权限列表上单个用户或角色的访问将自动配置为不可访问状态且不可更改。 Powered by Gitbook.            Last Modified： 2022-03-25 14:43:26 "},"operations/":{"url":"operations/","title":"System Operation","keywords":"","body":"System Operation In this chapter, we will introduce you how to do system operation work. Powered by Gitbook.            Last Modified： 2022-03-16 16:21:11 "},"operations/logging.cn.html":{"url":"operations/logging.cn.html","title":"日志文件","keywords":"","body":"系统日志 MDX for Kylin 顺利启动后，默认会在安装目录下生成logs/目录，所有 MDX for Kylin 运行过程中生成的日志文件会保存在该目录中。 日志文件 MDX for Kylin 生成的日志文件如下： mdx.log 该文件是通过 Excel 访问 Semantic 时生成的日志，默认级别 INFO。 semantic.log 该文件是 Semantic 服务生成的日志，默认级别 INFO。 semantic.out 该文件是标准输出的重定向文件，一些非 Semantic 生成的标准输出将被重定向到该文件。 gateway.log 该文件是 Gateway 服务生成的日志，默认级别 INFO。 日志配置 MDX for Kylin 使用 log4j 记录日志，用户可以编辑 $MDX_HOME/conf/ 目录中的 log4j.properties 文件， 对日志文件的切分规则、大小上限等属性进行修改。例如： semantic.log 和 mdx.log 日志文件的默认输出类型是 org.apache.log4j.RollingFileAppender， 即文件大小达到指定尺寸的时候产生一个新文件。如果您想要每天产生一个日志文件，可以将 log4j.appender.file 和/或 log4j.appender.mdx 配置项的值改为 org.apache.log4j.DailyRollingFileAppender。 log4j.appender.file.MaxFileSize 和 log4j.appender.mdx.MaxFileSize 分别定义上述单个 semantic.log 和 mdx.log 日志文件的最大大小，默认值为 268435456 ，即 256MB。 log4j.appender.file.MaxBackupIndex 和 log4j.appender.mdx.MaxBackupIndex 分别定义 semantic.log 和 mdx.log 日志文件的最大保留数量，默认值为 10。 修改 log4j.properties 文件后，需要重启 MDX for Kylin 使配置生效。 日志排错 MDX 日志中包含查询 ID 及 API 的调用者信息，可以通过这些信息来增加排错能力。 查询 ID。对接 MDX 的 BI 工具发的 MDX 查询，都会在 MDX 生成唯一的查询 ID，可以根据查询 ID 去溯源相关的信息。 API的调用者信息。可以通过 API 的调用者信息，来定位操作用户。 Powered by Gitbook.            Last Modified： 2022-03-23 17:49:00 "},"operations/diagnosis.cn.html":{"url":"operations/diagnosis.cn.html","title":"诊断包","keywords":"","body":"诊断包 系统配置 通过网页生成诊断包 通过脚本生成诊断包 多节点部署配置示例 MDX for Kylin 配置项 对 Nginx 路由规则配置要求 诊断包内容 注意信息 系统配置 Kylin 需要您在安装时正确的配置每个节点的信息，详见手册在 Linux 环境安装 通过网页生成诊断包 系统诊断包包含整个 MDX for Kylin 实例的诊断信息，生成系统诊断包需要如下操作 使用 Kylin 的系统管理员账户登录 MDX for Kylin 点击右上角的进入管理界面按钮 选择时间范围，您可以选择当天、最近3天、最近7天、最近1个月，或者自定义时间范围 提示： 选择的时间范围必须包含 MDX for Kylin 发生问题的时间段。 选择服务器 提示： 如果 MDX for Kylin 部署在多节点上，需要确定发生问题的节点，并在生成系统诊断包时选择正确的服务器名字，否则有可能系统诊断包中不包含问题的有关信息。 之后您便可以下载诊断包。 通过脚本生成诊断包 除网页界面外，您也可以通过脚本生成诊断包 您可以进入MDX如下目录 $MDX_HOME/semantic-mdx/scripts/ 中,执行如下命令 ./diagnose_package_offline.sh 起始时间: 13位时间戳; 截止时间: 13位时间戳; MDX ip: MDX节点IP; MDX port: MDX节点端口; 是否dump mysql数据库: 输入 y 表示需要 dump mysql，输入 n 表示不需要; 诊断包输出路径: 诊断包输出路径，默认为 $MDX_HOME/semantic-mdx/diag_dump 目录下; 以下脚本执行示例表示打包 localhost 节点 7080 端口的 MDX 实例 ，时间范围为 2021-03-07 - 2021-03-08，需要 dump mysql 数据库, 且输出诊断包到目录 /usr/local/: ./diagnose_package_offline.sh 1615046400000 1615132800000 localhost 7080 y /usr/local/ 多节点部署配置示例 MDX for Kylin 配置项 您需要在每一个 MDX 节点的 [MDX 安装目录]/conf/insight.properties 文件中添加配置项 insight.mdx.cluster.nodes=IP1:Port1,IP2:Port2，将集群中所有 MDX for Kylin 节点的 IP 和 Port 信息加入配置文件中。 对 Nginx 路由规则配置要求 根据自定义 header：x-Host 和 x-Port 以将请求转发到指定的节点上，以确保可以在页面上通知多个节点生成诊断包并下载。 需要在 Nginx 配置文件中，添加路由规则：例如对两台机器上的 A、B 两个 MDX for Kylin 节点，其 IP 和 Port 分别为 IP_A:Port_A 和 IP_B:Port_B，则需要在 Nginx 的配置文件中添加如下配置： upstream nodes { server ip_A:port_A; server ip_B:port_B; } server { listen port_N; server_name ip_N; #charset utf-8;(Recommended Use) #Enable custom header underscores_in_headers on; location / { if ($http_x_host = '') { #Requests without custom headers can be sent to any node proxy_pass http://nodes; break; } #For requests containing custom headers, forward them to the specified node proxy_pass http://$http_x_host:$http_x_port; break; } } 此时的转发逻辑如下图所示： 诊断包内容 系统诊断包包含如下内容： conf_{timestamp} 目录 indicators.json : MDX 计算度量模板文件，记录了定义计算度量可使用的模版信息 insight.properties : MDX 配置文件 set-jvm.sh : MDX JVM 参数配置文件（内容也可在 insight.properties 中相应参数中修改） startup.sh : MDX 启动脚本 logs_{timestamp} 目录 gc-{timestamp}.log : MDX JVM GC 活动日志 mdx.log : MDX 查询日志，合并了若干 MDX 查询日志文件在指定时段内容（按原始文件修改时间排列，会标注 \"Content above from file : \" ） semantic.log : MDX API 调用日志，合并了若干 MDX API 调用日志文件在指定时段内容（如：从 Kylin 同步信息、页面数据集访问等） jstack.log : MDX 进程 ID、core file、远程调试服务的 Java 堆栈信息 jmap.log : MDX 进程内存的映射信息和堆空间分配情况 top.log : 系统中各个进程资源的占用状况 mos_scripts.out : 分布式 MDX 启动时记录拷贝服务器 Hadoop 相关配置文件以及替换相关冲突 jar 包的过程信息 mdx_env ：MDX 运行环境信息文件，包含从 MDX 版本、JDK 版本到系统环境等详细信息 sync_info ：MDX 同步任务信息文件，包含当前同步用户名和当前同步任务状态 schema_{timestamp} 目录 {user}_{project}.xml : 若干文件，数据集的结构信息（同一数据集对不同用户可能因可见性设置有不同的结构） dataset_{timestamp} 目录 Project-{project}_Dataset-{dataset}.json : 若干文件，数据集的 json 文件，可用于从前端界面导入（需要连接相应的 Kylin) 注意信息 多节点部署配置示例中 Nginx 配置为示例配置，具体的路由方式和过滤范围可根据实际需要进行调整。 由于请求诊断包时使用配置文件中给出的 IP 和 Port 信息，请不要使用 localhost，可能会导致 Nginx 转发失败导致请求无法成功。 每次新生成诊断包时，会清除 7 天前生成的诊断包。 Powered by Gitbook.            Last Modified： 2022-03-23 16:07:15 "},"operations/error_code.cn.html":{"url":"operations/error_code.cn.html","title":"错误码","keywords":"","body":"Error Code Error 命名规则 为了使报错信息更加简洁明了，可追溯，按照模块业务进行划分错误码，格式为：MDX-AABBCCCC AA: 服务模块，例如 Semantic 服务，MDX 服务，系统服务等等 BB: 服务模块下的各项业务，比如 Semantic 服务下的 dataset 编辑、克隆 CCCC: 具体出错原因，比如字符串长度超限，查询结果超长等等 具体的服务模块和业务列表如下： 服务模块 业务分类 01 System Service 0102 System Config User 01 System Service 0104 Diagnose Package 01 System Service 0105 Sync Task 01 System Service 0106 User / Group / Role 01 System Service 0107 DB 01 System Service 0108 System Tool 02 Semantic Service 0201 Kylin API CALL 02 Semantic Service 0202 Dataset 03 MDX Service 0301 Schema 03 MDX Service 0302 XMLA 03 MDX Service 0303 Query 03 MDX Service 0304 Rewrite / Reject 04 Authority 0401 Authentication 04 Authority 0402 Authorization 04 Authority 0403 User Delegation 错误码列表 错误码 错误信息 MDX-00000001 内部错误 MDX-01020001 缺少同步用户信息配置 MDX-01020002 配置项解析错误 MDX-01040001 生成诊断包的节点不是当前节点 MDX-01040002 未找到诊断包生成所需的数据集 MDX-01040003 诊断包生成节点异常 MDX-01040004 序列化诊断包生成所需数据集异常 MDX-01040005 未找到诊断包文件 MDX-01040006 诊断包下载异常 MDX-01050001 同步用户信息配置无效 MDX-01050002 同步用户信息更新请求非法 MDX-01060001 无效的角色名称 MDX-01060002 重复的角色名称 MDX-01060003 用户异常 MDX-01060004 角色不存在 MDX-01060005 用户不存在 MDX-01060006 尝试删除已分配用户的角色 MDX-01060007 无效的角色 MDX-01060008 无法删除管理员角色 MDX-01060009 角色 ID 和名称不匹配 MDX-01060010 尝试向角色添加 / 从角色删除超过 1 个用户 MDX-01070001 插入数据集记录异常 MDX-01070002 插入 MDX_QUERY 记录异常 MDX-01070003 插入 SQL_QUERY 记录异常 MDX-01070004 插入角色记录异常 MDX-01070005 删除角色记录异常 MDX-01080001 用户密码解密错误 MDX-01080002 用户密码加密错误 MDX-01080009 版本号格式错误 MDX-02010002 获取 Kylin 表描述信息错误 MDX-02010003 获取 Kylin 模型描述信息错误 MDX-02010004 获取 Kylin 项目列表错误 MDX-02010005 获取 Kylin 用户列表错误 MDX-02010006 根据 Kylin 指定项目获取用户错误 MDX-02010007 根据 Kylin 指定用户组获取用户错误 MDX-02010008 获取 Kylin 用户权限信息错误 MDX-02010009 获取 Kylin 项目访问权限信息错误 MDX-02010010 URI 为空的 HTTP 请求 MDX-02010011 构建 URI 实例异常 MDX-02010012 未配置 Kylin 的 host / port MDX-02010013 Kylin 连接异常 MDX-02010014 发送给 Kylin 的 HTTP 请求失败 MDX-02010015 读取 Kylin 的 HTTP 响应内容异常 MDX-02020002 无法从指定项目中获取指定数据集 MDX-02020003 无法根据 ID 获取数据集 MDX-02020004 指定项目中已存在同名数据集 MDX-02020006 已存在同名维度表 MDX-02020007 已存在同别名维度表 MDX-02020008 已存在同别名度量 MDX-02020009 已存在同名计算度量 MDX-02020010 已存在同名命名集 MDX-02020011 文件夹名称格式错误 MDX-02020012 计算度量校验失败 MDX-02020014 非法的默认成员校验请求 MDX-02020015 不支持的数据集类型 MDX-02020016 无法连接 MDX 服务器 MDX-02020017 无法连接数据集 MDX-02020018 无效的维度用法 MDX-02020019 层级结构中存在来自其他表的列 MDX-02020020 无法从指定模型中获取指定维度表 MDX-02020021 无法从指定维度表和模型中获取指定维度 MDX-02020022 无法从指定模型中获取指定度量 MDX-02020023 无法获取指定计算度量 MDX-02020024 无法获取指定命名集 MDX-02020025 存在无效的数据集 MDX-02020026 Kylin 项目在存在问题 MDX-02020027 无效的数据集列表查询请求 MDX-02020028 无效或过期的数据集导出标识符 MDX-02020029 导出数据集时压缩异常 MDX-02020030 无效的数据集导入请求 MDX-02020031 导入数据集时解压异常 MDX-02020032 无效的数据集压缩文件 MDX-02020033 上传文件中不存在有效的数据集 MDX-03010003 未找到数据源文件 MDX-03010004 无法创建数据源文件 MDX-03010005 无法创建 schema 目录 MDX-03010006 无法创建 schema 文件 MDX-03010007 无法序列化 schema 文件 MDX-03020002 Drillthrough 仅支持 Tabular 格式 MDX-03020003 无法执行 Drillthrough 操作 MDX-03020005 XML/A 请求的 URL 格式错误 MDX-03030001 未找到 MDX 数据集 MDX-03030002 未找到 MDX 对象 MDX-03030003 无法解析 MDX 成员 MDX-03030004 MDX 语句解析错误 MDX-03030014 未找到计算成员中的层级结构 MDX-03030015 轴表达式类型错误 MDX-03030016 成员表达式返回类型错误 MDX-03030017 集合表达式返回类型错误 MDX-03030018 函数缺少参数 MDX-03030019 函数参数类型错误 MDX-03030020 未知 MDX 参数 MDX-03030021 未找到 MDX 成员 MDX-03030022 默认成员表达式返回类型错误 MDX-03030023 使用了无效的成员 MDX-03030024 未找到签名匹配的函数 MDX-03030025 找到多个签名匹配的函数 MDX-03030031 在多个轴上出现同一个层级结构 MDX-03030032 函数存在不属于同一个层级结构的参数 MDX-03030033 函数的参数不属于一个时间类型的维度表 MDX-03030034 无效的轴定义 MDX-03030035 存在名称重复的轴 MDX-03030037 元组包含属于相同层级结构的多个成员 MDX-03030038 VisualTotals 函数参数类型错误 MDX-03030042 数据类型转换的目标类型无效 MDX-03030043 函数不支持 NULL 成员作为参数 MDX-03030045 未定义时间类型维度表，不能使用此函数 MDX-03030046 未显式指定目标层级结构 MDX-03030047 层级结构中没有可以访问的成员 MDX-03030050 Drillthrough 被禁用 MDX-03030051 对未知成员进行 Drillthrough 操作 MDX-03030054 连接字符串中缺失属性 MDX-03030055 属于时间类型维度表的层级结构未定义时间类型 MDX-03030056 不属于时间类型维度表的层级结构定义了时间类型 MDX-03030064 计算成员属于一个无效维度 MDX-03030068 数据集中已存在同名的计算成员 MDX-03030076 未找到自定义函数的类 MDX-03030077 自定义函数的类定义非法 MDX-03030079 数据集中已存在同名的自定义函数 MDX-03030080 数据集中已存在同名的命名集 MDX-03030081 数据集中存在无效的计算度量或命名集表达式 MDX-03030087 无效的聚合方式 MDX-03030090 Descendants 函数参数类型错误 MDX-03030092 无法推断集合的成员类型 MDX-03030094 层级结构定义未包含任何层级 MDX-03030095 层级结构定义中的存在重名层级 MDX-03030103 笛卡尔积的结果大小超过上限 MDX-03030104 查询结果集中的成员数量超过上限 MDX-03030105 读取的成员数量超过上限 MDX-03030106 读取的度量值数量超过上限 MDX-03030107 查询取消 MDX-03030108 查询超时 MDX-03030109 聚合计算的迭代次数超过上限 MDX-03030110 层级结构未包含成员 MDX-03030157 函数无法进行 Native 优化 MDX-03030158 查询资源回收异常 MDX-03030159 并发执行的 MDX 查询数量达到上限 MDX-03030160 Mondrian 引擎并发执行的 SQL 查询数量达到上限 MDX-03030162 Sniper 引擎并发执行的 SQL 查询数量达到上限 MDX-03030163 RolapSchema 实例回收异常 MDX-03030164 MondrianServer 实例回收异常 MDX-03030165 RolapConnection 实例回收异常 MDX-03030166 聚合查询执行因超时取消 MDX-03030167 聚合查询执行取消 MDX-03030168 SniperResult 构造过程取消 MDX-03040003 未配置 MDX 集群中的节点列表 MDX-03040004 无法改写表达式 MDX-03040005 表达式不是一个函数表达式 MDX-03040006 表达式不是指定的函数表达式 MDX-03040007 表达式不是一个标识符 MDX-03040008 无效的命名集 Union 函数表达式 MDX-03040009 无效的命名集 Except 函数表达式 MDX-04010001 用户登陆鉴权错误 MDX-04010002 无效的 basic 鉴权信息 MDX-04010003 无效的 cookie 鉴权信息 MDX-04010004 无效的 gateway 鉴权信息 MDX-04010005 鉴权信息缺失 MDX-04010006 用户名 / 密码错误 MDX-04010007 用户被锁定 MDX-04010008 Kylin 鉴权失败 MDX-04010009 用户被禁用 MDX-04020001 非系统管理员用户 MDX-04020002 非系统管理员或项目管理员用户 MDX-04020003 用户无项目访问权限 MDX-04020004 未找到可用的数据集 MDX-04020005 项目中所有数据集均已损坏 MDX-04020006 用户无数据集权限 MDX-04030001 用户委任功能未启用 MDX-04030002 委任用户参数为空 MDX-04030003 委任用户参数过长 MDX-04030004 无效的委任用户参数 MDX-04030005 委任用户权限不足 Powered by Gitbook.            Last Modified： 2022-03-25 14:44:41 "},"operations/configuration.cn.html":{"url":"operations/configuration.cn.html","title":"任务配置","keywords":"","body":"任务配置 现 MDX for Kylin 会定期从与其对接的 Kylin 中同步数据，您可以使用 Kylin 的系统管理员账号进入管理员页面，查看任务情况。 进入参数页面，即可同步任务的运行情况，以及任务上一次运行的时间。 若任务因为意外情况停止，例如 Kylin 停机等，您可以点击重启同步任务按钮重启同步任务 若您修改了您 Kylin 中的同于执行同步任务的系统管理员的用户名或密码，您可以点击编辑用户信息按钮，更改用户名和密码。 Powered by Gitbook.            Last Modified： 2022-03-23 16:13:05 "},"operations/metadata.cn.html":{"url":"operations/metadata.cn.html","title":"元数据导入和导出","keywords":"","body":"元数据导入和导出 MDX 实例所有元数据和查询历史等信息都存储在数据库中，因此备份与恢复数据库是日常运维和系统升级过程中一个非常重要的环节。 MDX 目前支持 MySQL 和 PostgreSQL 作为元数据存储。其中 MySQL 推荐 5.7 及以后版本，PostgreSQL 推荐 10.1 及以后版本。 元数据导出 MySQL MySQL 通过 mysqldump 命令导出的。出于安全原因，建议将 -P 选项留空，并在随后的交互式输入中输入密码。 mysqldump -h[insight.database.ip] -P[insight.database.port] -u[insight.database.username] -p[password] [insight.database.name] > backup.sql 示例： mysqldump -hlocalhost -P3306 -uroot -proot insight > backup.sql PostgreSQL PostgreSQL 通过 pg_dump 命令导出，注意在随后的交互式输入中输入密码。 pg_dump -h [insight.database.ip] -p [insight.database.port] -U [insight.database.username] -d [insight.database.name] -W -F c -b -v -f backup.bak 元数据导入 MySQL MySQL 通过 mysql 命令导入已备份的元数据。 mysql -h[insight.database.ip] -P[insight.database.port] -u[insight.database.username] -p[password] [insight.database.name] 如果指定的数据库不存在，请先通过 MySQL 客户端工具或者命令行创建对应的数据库。 create database [insight.database.name]; PostgreSQL PostgreSQL 通过 pg_restore 命令导入备份的文件。 pg_restore -h [insight.database.ip] -p [insight.database.port] -U [insight.database.username] -W -d [insight.database.name] -v backup.bak 如果指定的数据库不存在，请先通过 createdb 命令创建数据库。 createdb [insight.database.name] 附录：数据表说明 数据表 功能 calculate_measure 计算度量定义 common_dim_relation 维度关系定义 custom_hierarchy 用户定义的层次 dataset 数据集 dim_table_model_rel 模型关系定义 mdx_info MDX 信息 mdx_query MDX 查询历史 measure_group 度量组定义 named_dim_col 维度列定义 named_dim_table 维度表定义 named_measure 度量定义 named_set 命名集定义 role_info 数据集角色信息 sql_query SQL 查询历史 user_info 用户信息 Powered by Gitbook.            Last Modified： 2022-03-16 16:21:14 "},"configuration/":{"url":"configuration/","title":"System Configuration","keywords":"","body":"System Configuration In this chapter, we will introduce you system configurations, such as configuration files, basic configuration parameters, and more. Powered by Gitbook.            Last Modified： 2022-03-16 16:21:11 "},"configuration/files.cn.html":{"url":"configuration/files.cn.html","title":"配置文件","keywords":"","body":"配置文件 本节将介绍 MDX for Kylin 的配置文件等内容。 MDX for Kylin 配置文件一览表 文件名 描述 insight.properties 该文件是 MDX for Kylin 公用配置文件，绝大多数配置项都在此文件中。 log4j2.xml 该文件是 MDX for Kylin 的 log4j 配置文件，用于配置日志的各项参数。 set-jvm.sh 该文件为 MDX for Kylin 的 JVM 配置文件。 Powered by Gitbook.            Last Modified： 2022-03-25 14:47:37 "},"configuration/properties.cn.html":{"url":"configuration/properties.cn.html","title":"基本配置参数","keywords":"","body":"基本配置参数 MDX for Kylin 的配置文件 insight.properties 保存在 conf 目录中。用户可以通过修改相关配置，实现环境适配、性能优化等目的。 用户修改任何配置项之后，需要重启后方可生效。 1. 通用配置 2. Semantic Service 模块相关配置 3. MDX 模块相关配置 1. 通用配置 配置项 描述 insight.kylin.host 该参数指定需要连接的 Kylin 服务器的 IP 地址或 Hostname，如 127.0.0.1，默认值localhost insight.kylin.port 该参数指定需要连接的 Kylin 服务器的端口号，默认值7070 insight.kylin.ssl MDX for Kylin 访问 Kylin 是否启用 https，默认值false insight.database.type MDX for Kylin 使用的元数据库的类型，默认值mysql insight.database.useSSL MDX for Kylin 元数据库是否使用SSL连接，默认值false insight.database.ip MDX for Kylin 需要连接的元数据库的 IP 地址或 Hostname，默认值localhost insight.database.port MDX for Kylin 需要连接的元数据库的端口号，默认值3306 insight.database.name MDX for Kylin 需要连接的元数据库名称，默认值insight insight.database.username MDX for Kylin 需要连接的元数据库的用户名，默认值root insight.database.password MDX for Kylin 需要连接的元数据库的密码，默认值698d2c7907fc9b6dbe7f8a8c4cb0297a，即密码 root 的加密串 insight.mdx.cluster.nodes 该配置用于生成诊断包使用，该配置项需要您填写 MDX for Kylin 集群中所有节点的 IP 和 Port 信息。如果配置多个节点，请用英文逗号隔开，例如 IP_1:Port_1,IP_2:Port_2 insight.semantic.secret-key 该配置用于加密 MDX for Kylin 所需要用到密钥串，默认值3500d18495a54c54b9a3d56641a8a521。例如用于加密连接的元数据密码或用户登录密码，用户可按照需要变更自己的密钥串，如果变更对应的密钥串，则用户需要重新加密对应的密码等，建议在初次安装部署 MDX for Kylin 时候变更 2. Semantic Service 模块相关配置 配置项 描述 insight.semantic.datasource-version 该参数指定 MDX for Kylin 中 semantic service 连接的引擎的版本号，仅支持 2，表示连接的 Kylin insight.semantic.port 该参数指定 MDX for Kylin 中 semantic service 的端口号，默认值7080 insight.semantic.meta.sync.project-page-size 该参数指定 MDX for Kylin 中 semantic service 同步项目时，单页获取最大项目数，默认值1000 insight.dataset.verify.interval.count 该参数指定 MDX for Kylin 中 semantic service 进行数据集校验的时间间隔数，单位：20秒，例如：2 表示 2*20=40 秒。当且仅 insight.dataset.verify.enable 配置为 true 时生效，默认值15,即 5 分钟 insight.dataset.verify.enable 该参数指定 MDX for Kylin 中 semantic service 是否开启数据集同步校验功能，默认值true insight.semantic.model.version.verify 该参数指定 MDX for Kylin 中 semantic service 是否开启元数据模型版本检查，默认值false insight.semantic.startup.sync.enable 该参数指定 MDX for Kylin 中 semantic service 是否开启启动服务即开始进行同步任务，默认值true insight.semantic.segment.sync.enable 该参数指定 MDX for Kylin 中 semantic service 是否开启检查 Kylin 的 Segment 变化，并根据 Segment 变化清除 MDX for Kylin 的缓存，默认值true insight.semantic.meta.sync.user-page-size 该参数指定 MDX for Kylin 中 semantic service 从 Kylin 中同步用户信息时每页的大小，默认值100000 insight.semantic.cookie-age 该参数指定 MDX for Kylin 中 semantic service Web UI 访问时用户 cookie 的生命时长，默认值86400，即 86400 秒 insight.semantic.checkout.dataset.connect 该参数指定 MDX for Kylin 的数据集保存时，是否要进行连接校验，默认值true insight.semantic.connect.timeout MDX for Kylin 连接 Kylin 的连接超时时间，单位是毫秒，默认值5000 insight.semantic.socket.timeout MDX for Kylin 连接 Kylin 的连接 socket 超时时间，单位是毫秒，默认值10000 insight.kylin.only.normal.dim.enable MDX for Kylin 在多对多场景下是否只从 Kylin 拉取普通维度，默认值false，当前 Kylin 暂不支持 多对多场景 insight.semantic.connection.request.timeout MDX for Kylin 连接 Kylin 的连接请求超时时间，单位是毫秒，默认值8000 insight.semantic.max-http-header-size MDX for Kylin 的 http 请求 header 的最大长度，单位是 kb，默认值8192 insight.semantic.meta.keep.mdx-query.max.rows 系统中保存 MDX 查询历史记录的最大条数，默认值 1000000 insight.semantic.segment.sync.enable 是否同步 Kylin 的 Segment 信息，默认值true insight.semantic.zookeeper.enable 是否开启将服务信息注册到 ZooKeeper, 默认值false insight.semantic.zookeeper.address ZooKeeper 的地址，默认值localhost:2181 insight.semantic.zookeeper.node.path 注册的节点地址，默认值/mdx insight.semantic.zookeeper.session.timeout 与 ZooKeeper 连接的超时时间，默认值30000 insight.semantic.reject.enable 该参数用于指定是否启用拦截策略，启用后，对符合拦截策略的查询请求将会被拒绝，默认false。 3. MDX 模块相关配置 配置项 描述 insight.mdx.servlet-path 该参数指定 MDX for Kylin 中 mdx 的 servlet 路径，默认值/mdx/xmla/ insight.mdx.gateway-path 该参数指定 MDX for Kylin 中 gateway 的 servlet 路径，默认值/mdx/xmla_server/ insight.mdx.optimize-enabled 该参数指定 MDX for Kylin 中 mdx 是否开启语句优化，默认值true insight.mdx.calculate-total-need 该参数指定 MDX for Kylin 中 mdx 是否计算全局汇总及分类汇总，默认值true insight.mdx.schema.create-from-dataset 该参数指定 MDX for Kylin 中 mdx 是否从数据集中创建 schema，默认值true insight.mdx.schema.refresh.disable 该参数指定 MDX for Kylin 中 mdx 是否禁用刷新，默认值false insight.mdx.sql.orderby.enable 该参数指定 MDX for Kylin 中是否开启 SQL orderby，默认值true insight.mdx.sql.calcite-engine-hint.enable 该参数指定 MDX for Kylin 对接 Excel 时，进行包含 similar to 的查询时，是否强制 Kylin 使用 Calcite 引擎回答，默认值false insight.mdx.skip-axis-nonempty-check 该参数指定 MDX for Kylin 中计算轴时是否跳过空值校验，默认值true insight.mdx.mondrian.olap.case.sensitive 该参数指定 MDX for Kylin 中 mdx 语句是否大小写敏感，默认值true insight.mdx.mondrian.rolap.maxQueryThreads 该参数指定 MDX for Kylin 中 mdx 最大查询线程数，默认值50 insight.mdx.mondrian.query.sql.page.size 该参数指定 MDX for Kylin 中 mdx 分页操作时，单页获取最大记录数，默认值10000 insight.mdx.mondrian.rolap.generate.formatted.sql 该参数指定 MDX for Kylin 中 mdx 是否格式化输出 sql 语句，默认值false insight.mdx.mondrian.rolap.star.disableCaching 该参数指定 MDX for Kylin 中 mdx 是否禁用缓存，默认值false insight.mdx.mondrian.rolap.ignoreInvalidMembers 该参数指定 MDX for Kylin 中 mdx 是否忽略无效的 members，默认值true insight.mdx.mondrian.rolap.ignoreInvalidMembersDuringQuery 该参数指定 MDX for Kylin 中 mdx 在查询中是否忽略无效的 members，默认值true insight.mdx.mondrian.cache.expire-minute 该参数指定 MDX for Kylin 中 mdx 缓存过期时间为几分钟，默认值720 insight.mdx.mondrian.olap.pure-axes-calculate.source.type 该参数指定 MDX for Kylin 中 mdx 轴计算时的维度数据源类型，可选的参数有：SNAPSHOT, PARTIAL_CUBE, ALL_CUBE，默认值PARTIAL_CUBE insight.mdx.mondrian.olap.pure-axes-calculate.cardinality-gap 该参数指定 MDX for Kylin 中对只查询单个维度表的 SQL 语句强制使用 insight.mdx.mondrian.olap.pure-axes-calculate.source.type=SNAPSHOT 行为的维度表基数上限（不包含），特殊取值 -1 表示总是强制使用，0 表示不强制使用，默认值为 -1 insight.mdx.mondrian.olap.pure-axes-calculate.total-cardinality-gap 该参数指定 MDX for Kylin 中对查询完整的轴的 SQL 语句强制使用 insight.mdx.mondrian.olap.pure-axes-calculate.source.type=SNAPSHOT 行为的查询结果基数上限（不包含），特殊取值 -1 表示总是强制使用，0 表示不强制使用，默认值为 0 insight.mdx.mondrian.olap.support-non-default-all-member 该参数指定 MDX for Kylin 中 mdx 是否支持非默认为所有成员，默认值false insight.mdx.mondrian.olap.cell.calc.join-dims 该参数指定 MDX for Kylin 中 mdx 在计算 cell 时是否 join 其他维表，默认值true insight.mdx.mondrian.rolap.return-null-when-divide-zero 该参数指定 MDX for Kylin 中 mdx 除数为 0 时是否返回 0，默认值true insight.mdx.mondrian.rolap.optimize-tuple-size-in-aggregate.enable 该参数指定 MDX for Kylin 中 mdx 聚合时是否开启元组大小优化，默认值false insight.mdx.mondrian.rolap.calculate-cell-when-non-measure 该参数指定 MDX for Kylin 中 mdx 无度量时是否聚合单元数据，默认值false insight.mdx.mondrian.sql.fetch-dim-from-snapshot 该参数指定 MDX for Kylin 中 mdx 是否优先从快照中拉取维度数据，默认值true insight.mdx.mondrian.sql.enableOrderBy 该参数指定 MDX for Kylin 中 mdx sql查询时是否添加排序规则，默认值true insight.mdx.mondrian.jdbc.timezone 该参数指定 MDX for Kylin 中 mdx jdbc查询服务所在时区，默认值GMT+8:00 insight.mdx.mondrian.schema.init-level-group-order-by-key 该参数指定 MDX for Kylin 中 mdx 是否通过键值去初始化层级级别，默认值true insight.mdx.mondrian.query.filter-pushdown.enable 该参数指定 MDX for Kylin 中 mdx 是否开启过滤下推，默认值true insight.mdx.mondrian.query.filter-pushdown.in-clause-max-size 该参数指定 MDX for Kylin 中 mdx 子句最大过滤下推数量，默认值20 insight.mdx.mondrian.query.sql.customize.enable 该参数指定 MDX for Kylin 中 mdx 是否开启定制化 sql，默认值true insight.mdx.mondrian.query.sql.customize.class 该参数指定 MDX for Kylin 中 mdx CustomizeSqlQuery的实现类，默认值io.kylin.mdx.web.mondrian.rolap.sql.KylinSqlQuery insight.mdx.mondrian.query.sql.max.size 该参数指定 MDX for Kylin 中 mdx sql 查询时最大查询行数，默认值50000 insight.mdx.mondrian.rolap.star.disableLocalSegmentCache 该参数指定 MDX for Kylin 中 mdx 查询的 segments 是否开启本地缓存，生成特定缓存及查找块缓存 SPI，默认值false insight.mdx.mondrian.olap.triggers.enable 该参数指定 MDX for Kylin 中 mdx 当配置属性变更后是否通知 Mondrian，默认值true insight.mdx.mondrian.rolap.nonempty 该参数指定 MDX for Kylin 中 mdx 是否每一个查询轴需要非空设置，默认值false insight.mdx.mondrian.rolap.compareSiblingsByOrderKey 该参数指定 MDX for Kylin 中 mdx 是否对兄弟成员进行和从原表达式拉取成员进行校验，默认值false insight.mdx.mondrian.rolap.maxSqlThreads 该参数指定 MDX for Kylin 中 mdx 支持 SQL 的 Mondrian 实例的最大数量，默认值100 insight.mdx.mondrian.rolap.maxCacheThreads 该参数指定 MDX for Kylin 中 mdx 支持缓存时每一个 Mondrian 实例的最大线程数，默认值100 insight.mdx.mondrian.rolap.queryTimeout 设置 MDX 查询的超时时间，单位秒，默认值300 insight.mdx.mondrian.olap.NullMemberRepresentation 该参数指定 MDX for Kylin 中 mdx 当结果为空时如何输出展示，默认值#null insight.mdx.mondrian.visualtotal.solve.order 该参数指定 MDX for Kylin 中 mdx 设置总计顺序，默认值-1 insight.mdx.mondrian.cross-join.native.enable 该参数指定了 MDX for Kylin 下发查询时是否原生使用 Cross Join，默认值true insight.mdx.mondrian.filter.row.limit 该参数指定 MDX for Kylin 对接 Excel 时，进行 Filter 操作时，是否加入 Limit 条件，默认 0，表示不加入 Limit 条件。若为 10，将在查询中加入 limit 10 的 SQL 子句。注意：此处的参数必须要写入正整数，否则会引起 MDX 查询执行报错。注意：设置该参数后可能导致在 Excel 中对下拉列表的反选操作选择数据不全，默认值0 insight.mdx.mondrian.result.limit 该参数用于指定检查 SQL 返回的行数，Cell 的数量。如果超限，直接返回错误。默认值100000 insight.mdx.mondrian.mdprop.mdx.subqueries 该参数用于指示MDX对于子查询的支持级别，MDX默认为2，不支持子查询。如果需要MDX支持子查询，可以改成31，该功能为Beta版。 insight.mdx.mondrian.query.sql.model-priority-hint.enable 该参数用于指定是否在 SQL 语句中指定优先用于回答查询的模型，启用后，当前查询的数据集引用的模型会被指定为查询的高优先级模型。 默认值为false。注意指定优先模型只会在查询的度量属于同一模型时生效。 insight.mdx.xmla.support-rowset-visibilities 该参数用于指定是否启用对于 XML/A Schema 中的 HIERARCHY_VISIBILITY 和 MEASURE_VISIBILITY 限制条件的支持，默认值为false。启用该参数后，原有的包含透视表的 Excel 文件需要经过修复才能正常使用。 insight.mdx.mondrian.query.limit 该参数是系统支持的最大查询数量，默认1000。 Powered by Gitbook.            Last Modified： 2022-03-25 11:19:41 "},"configuration/jvm.cn.html":{"url":"configuration/jvm.cn.html","title":"JVM 参数","keywords":"","body":"JVM 参数配置 您可以在配置文件 $MDX_HOME/semantic-mdx/set-jvm.sh 中，进行 JVM 的配置。默认配置使用的内存较少，您可以根据自己的实际情况调节。该项配置的默认值如下: jvm_xms=-Xms3g jvm_xmx=-Xmx16g 您可以更改它，以修改其中的配置。 jvm_xms=-Xms3g # MDX for Kylin 启动时的 JVM 初始内存。 jvm_xmx=-Xmx16g # MDX for Kylin 启动时的 JVM 最大内存。 另外您也可以在 $MDX_HOME/conf/insight.properties 中，更改 JVM 配置，此设置的优先级将高于上述 set-jvm.sh，配置如下： insight.mdx.jvm.xms=-Xms3g insight.mdx.jvm.xmx=-Xmx16g 在启动 MDX for Kylin 时，系统会默认加载配置文件 $MDX_HOME/semantic-mdx/set-jvm.sh 中定义的参数。如果您修改了参数，需要重新启动 MDX for Kylin 才能使新参数值生效。 Powered by Gitbook.            Last Modified： 2022-03-23 16:36:00 "},"rest/":{"url":"rest/","title":"Rest API","keywords":"","body":"REST API MDX for Kylin provides a series of REST APIs for system integration. With such APIs, a 3rd-party application is easy to integrate with MDX for Kylin. Powered by Gitbook.            Last Modified： 2022-03-23 17:28:45 "},"rest/authentication.cn.html":{"url":"rest/authentication.cn.html","title":"安全认证 API","keywords":"","body":"安全认证 API MDX for Kylin 所有的 API 都是基于 Basic Authentication 认证机制。Basic Authentication 是一种简单的访问控制机制，将帐号密码基于 Base64 编码后作为请求头添加到 HTTP 请求头中，后端会读取请求头中的帐号密码信息进行认证。以 MDX for Kylin 默认的账户密码 ADMIN:KYLIN 为例，对应帐号密码编码后结果为 Basic QURNSU46S1lMSU4=，那么 HTTP 对应的头信息为 Authorization: Basic QURNSU46S1lMSU4=。 Powered by Gitbook.            Last Modified： 2022-03-23 16:41:46 "},"rest/dataset.cn.html":{"url":"rest/dataset.cn.html","title":"数据集 API","keywords":"","body":"数据集 API 本节介绍数据集相关的接口调用。 导出数据集 导入数据集 更新数据集 获取数据集列表 导出数据集 GET http://:/api/dataset 请求参数： project : 项目名 datasetType : 数据集类型 datasetName : 数据集名称 请求 Header: Basic Auth 认证 Content-Type: application/json Curl 示例如下： curl -X GET \\ 'http://localhost:7080/api/dataset?project=learn_kylin&datasetType=mdx&datasetName=test' \\ -H 'Authorization: Basic QURNSU46S1lMSU4=' \\ -H 'Content-Type: application/json;charset=utf8' \\ -o export_dataset.json 命令解释：调用接口，将相应的 json 数据存入到当前目录的export_dataset.json 中 导入数据集 POST http://:/api/dataset?createType=import Basic Auth认证 Content-Type: application/json createType:import 固定值 HTTP Body 是 dataset 的 json 文件 Curl示例如下： curl -X POST \\ 'http://localhost:7080/api/dataset?createType=import' \\ -H 'Authorization: Basic QURNSU46S1lMSU4=' \\ -H 'Content-Type: application/json;charset=utf8' \\ -d \"@export_dataset.json\" 命令解释：调用接口导入数据集，json 为当前目录下的export_dataset.json 文件 更新数据集 PUT http://:/api/dataset Basic Auth认证 Content-Type: application/json HTTP Body 是 dataset 的 json 文件 Curl示例如下： curl -X PUT \\ 'http://localhost:7080/api/dataset' \\ -H 'Authorization: Basic QURNSU46S1lMSU4=' \\ -H 'Content-Type: application/json;charset=utf8' \\ -d \"@export_dataset.json\" 命令解释：调用接口导入数据集，json 为当前目录下的export_dataset.json 文件 获取数据集列表 GET http://:/api/datasets/MDX/ Basic Auth认证 Content-Type: application/json Curl示例如下： curl -X GET \\ 'http://localhost:7080/api/datasets/MDX/learn_kylin' \\ -H 'Authorization: Basic QURNSU46S1lMSU4=' \\ -H 'Content-Type: application/json;charset=utf8' \\ -o dataset.json Powered by Gitbook.            Last Modified： 2022-03-23 16:41:46 "},"rest/role.cn.html":{"url":"rest/role.cn.html","title":"数据集角色 API","keywords":"","body":"数据集角色 API 对于有对数据集角色进行相关操作的需求，可以使用本节介绍的相关 API 进行操作。 相关操作包含： 新增角色 更新角色 查询角色 删除角色 向已有角色增加单个用户 从已有角色删除单个用户 查询角色列表 新增角色 该 API 可以用于新增角色，并且直接向其中添加用户 POST http://host:port/api/role Basic Auth 认证 Content-Type: application/json HTTP Body 是 json，内容如下： { \"name\": \"[角色名]\", \"contains\": [ { \"type\": \"user\", \"name\": \"[用户名1]\" }, { \"type\": \"user\", \"name\": \"[用户名2]\" } ], \"description\": \"[角色描述]\" } Curl 示例如下： curl -X POST \\ 'http://host:port/api/role' \\ -H 'Authorization: Basic QURNSU46S1lMSU4=' \\ -H 'Content-Type:application/json;charset=utf8' \\ -d '{\"name\":\"role_test\",\"contains\":[{\"type\":\"user\",\"name\":\"ADMIN\"}],\"description\":\"test\"}' 命令解释：调用接口，新增包含ADMIN用户的数据集角色：role_test。 返回信息 { \"status\": 0, \"data\": { \"role_id\": 2 } } 返回信息解释：status 为 0 表示成功, role_id 为角色 id。 更新角色 该 API 可以用于角色中的用户 PUT http://host:port/api/role/{roleId} URL Path Variable roleId: 取值为角色 id Basic Auth 认证 Content-Type: application/json HTTP Body 是 json，内容如下： { \"name\": \"[角色名]\", \"contains\": [ { \"type\": \"user\", \"name\": \"[用户名1]\" }, { \"type\": \"user\", \"name\": \"[用户名1]\" } ], \"description\": \"[角色描述]\" } Curl 示例如下： curl -X PUT \\ 'http://host:port/api/role/2' \\ -H 'Authorization: Basic QURNSU46S1lMSU4=' \\ -H 'Content-Type:application/json;charset=utf8' \\ -d '{\"name\":\"role_test\",\"contains\":[{\"type\":\"user\",\"name\":\"ADMIN\"}],\"description\":\"test_update\"}' 命令解释：调用接口，全量更新名称为 role_test 的数据集角色及描述。 返回信息 { \"status\": 0, \"data\": { \"role_id\": 2 } } 返回信息解释：status 为 0 表示成功，role_id 为角色 id。 查询角色 GET http://host:port/api/role/{roleId} URL Path Variable roleId: 取值为角色 id Basic Auth认证 Content-Type: application/json Curl 示例如下： curl -X GET \\ 'http://host:port/api/role/2' \\ -H 'Authorization: Basic QURNSU46S1lMSU4=' 命令解释：调用接口，查询角色 id 为 2 的数据集角色信息。 返回信息 { \"status\": 0, \"data\": { \"name\": \"role_test\", \"description\": \"test_update\", \"contains\": [ { \"type\": \"user\", \"name\": \"ADMIN\" } ] } } 返回信息解释：status为0表示成功，data包含数据集角色信息。 删除角色 DELETE http://host:port/api/role/{roleId} URL Path Variable roleId: 取值为角色id Basic Auth认证 Content-Type: application/json Curl 示例如下： curl -X DELETE \\ 'http://host:port/api/role/2' \\ -H 'Authorization: Basic QURNSU46S1lMSU4=' 命令解释：调用接口，删除角色id为2的数据集角色信息。 返回信息 { \"status\" : 0, \"data\" : \"success\" } 返回信息解释：status为0表示成功，data包含删除成功信息。 向已有角色增加单个用户 POST http://host:port/api/role/user/visibility/{roleId} URL Path Variable roleId: 取值为角色 id Basic Auth认证 Content-Type: application/json HTTP Body 是 json，内容如下： { \"name\": \"[角色名]\", \"contains\": [ { \"type\": \"user\", \"name\": \"[用户名]\" } ], \"description\": \"\" } Curl 示例如下： curl -X POST \\ 'http://host:port/api/role/user/visibility/2' \\ -H 'Authorization: Basic QURNSU46S1lMSU4=' \\ -H 'Content-Type:application/json;charset=utf8' \\ -d '{\"name\":\"role_test\",\"contains\":[{\"type\":\"user\",\"name\":\"ANALYST\"}],\"description\":\"\"}' 命令解释：调用接口，向已有数据集角色 role_test 中新增一个用户 ANALYST 。 返回信息 { \"status\" : 0, \"data\" : \"success\" } 返回信息解释：status 为 0 表示成功，data 包含删除成功信息。 从已有角色删除单个用户 DELETE http://host:port/api/role/user/visibility/{roleId} URL Path Variable roleId: 取值为角色 id Basic Auth认证 Content-Type: application/json Curl 示例如下： curl -X DELETE \\ 'http://host:port/api/role/user/visibility/2' \\ -H 'Authorization: Basic QURNSU46S1lMSU4=' \\ -H 'Content-Type:application/json;charset=utf8' \\ -d '{\"name\":\"role_test\",\"contains\":[{\"type\":\"user\",\"name\":\"ANALYST\"}],\"description\":\"\"}' 命令解释：调用接口，从已有数据集角色 role_test 中移除一个用户 ANALYST 。 返回信息 { \"status\" : 0, \"data\" : \"success\" } 返回信息解释：status 为 0 表示成功，data 包含删除成功信息。 查询角色列表 GET http://host:port/api/roles Basic Auth认证 Content-Type: application/json URL Parameters pageNum- 必选 Integer, 页数，最小为 0 pageSize- 必选 Integer, 每页大小 containsDesc- 必选 Boolean , 是否包含角色描述 RoleName- 可选 String , 模糊查询字符串，不选为正常全查询，选定则会根据对应字符串进行模糊查询 Curl 示例如下： curl -X GET \\ 'http://host:port/api/roles?pageNum=0&pageSize=500&containsDesc=true' \\ -H 'Authorization: Basic QURNSU46S1lMSU4=' 命令解释：调用接口，返回指定分页的数据集角色列表。 返回信息 { \"status\": 0, \"data\": { \"pageNum\": 0, \"pageSize\": 500, \"list\": [ { \"id\": 3, \"name\": \"role_test\", \"description\": \"test_update\" }, { \"id\": 1, \"name\": \"Admin\", \"description\": \"This role is an admin role with all semantic information access to all datasets\" } ], \"total\": 2 } } 返回信息解释：status 为 0 表示成功，data 包含数据集角色列表信息。 Powered by Gitbook.            Last Modified： 2022-03-23 16:41:46 "},"rest/query.cn.html":{"url":"rest/query.cn.html","title":"查询相关 API","keywords":"","body":"查询相关 API 对于有对查询进行相关操作的需求，可以使用本节介绍的相关 API 进行操作。 相关操作包含： 清除 MDX 查询缓存 清除 MDX 查询缓存 MDX for Kylin 会保留 MDX 查询的缓存，若要设置缓存驻留时间，详见配置文件说明 GET http://host:port/mdx/xmla//clearCache 请求参数: 项目名称: 用于指定清除缓存的项目 请求 Header: Basic Auth 认证 Content-Type: application/json Curl 示例如下： curl -X GET \\ 'http://host:port/mdx/xmla/clearCache' \\ -H 'Authorization: Basic QURNSU46S1lMSU4=' curl -X GET \\ 'http://host:port/mdx/xmla//clearCache' \\ -H 'Authorization: Basic QURNSU46S1lMSU4=' 命令解释：调用接口，清除所有 MDX 缓存。 返回信息 \"Cache has been cleared.\" \" Cache has been cleared.\" 返回信息解释：缓存已被清除。 Powered by Gitbook.            Last Modified： 2022-03-23 16:41:46 "},"appendix/":{"url":"appendix/","title":"Appendix","keywords":"","body":"Appendix Powered by Gitbook.            Last Modified： 2022-03-16 16:21:11 "},"appendix/faq.cn.html":{"url":"appendix/faq.cn.html","title":"常见问题","keywords":"","body":"常见问题 以下收集了用户在学习使用 MDX for Kylin 过程中经常遇到的一些问题。 Q：关于 MDX for Kylin 查询缓存的相关说明 A：MDX for Kylin 在如下情况下将清除缓存： MDX for Kylin 会主动的探测 Kylin 的 Segment 变化。在发现变化后，MDX for Kylin 会主动清除缓存。 dataset 元数据变更，任何修改 dataset 的操作，都会导致当前 dataset 的查询缓存失效； 主动调用清除 MDX 查询缓存接口，详见手册 具体命令如下： curl -X GET \\ 'http://host:port/mdx/xmla/clearCache' \\ -H 'Authorization: Basic QURNSU46S1lMSU4=' 注意：该接口调用后会刷新 MDX 所有项目的查询缓存； 查询缓存 12 小时后自动失效。失效时间可通过 $MDX_HOME/conf/insight.properties 中的参数 insight.mdx.mondrian.cache.expire-minute 调整，当前默认值 12 小时。 Powered by Gitbook.            Last Modified： 2022-03-25 15:27:05 "},"appendix/knownlimitation.cn.html":{"url":"appendix/knownlimitation.cn.html","title":"已知限制","keywords":"","body":"已知限制 以下记录了 MDX for Kylin 一些已知限制。 限制 1: 不同于 SQL Server Analysis Service，仅层级结构才可以在 Excel 中进行展开操作。详细操作如下图所示。 限制 2: 当在行列上添加层级结构并在其依赖的普通维度上做筛选时，使用 CurrentMember 的计算度量的总计、小记结果可能会不准确。 限制 3: Aggregate 函数的支持尚不完善，Aggregate 函数的值会受到外部筛选条件的影响。例如：图中计算度量 Aggregate-CM_1-DateKey 和 Aggregate-CM_1-Due Calendar Date 均为 Aggregate({[20120401], [20120402], [20120403], [20120404]}, [Measures].[InternetSales COUNT])，值应该均为 26，但在层级结构的筛选条件为 20120403，Aggregate-CM_1-DateKey 的值受到了筛选，变成了7。 限制 4: MDX 当前版本集群部署时的负载均衡策略只支持 Ip Hash ，不支持 Round Robin 等其他方式。设置为其他负载均衡策略时，可能会导致 Excel 在查询取消时 ，Excel 响应缓慢或者发生异常。 限制 5: MDX 当前版本对接的 Kylin 暂不支持多对多关系。 Powered by Gitbook.            Last Modified： 2022-03-23 16:45:16 "},"appendix/formatstring.cn.html":{"url":"appendix/formatstring.cn.html","title":"预定义度量格式和度量格式字符","keywords":"","body":"预定义度量格式和度量格式字符 预定义度量格式 格式名    说明 无格式 不设置任何格式。 数值 可选择是否带千位分隔符、负数的格式，可配置小数点分隔符后的位数，其中小数点分隔符左侧至少有一个数字。 货币 可选择是否带千位分隔符、负数的格式，可配置小数点分隔符后的位数，显示的货币符号会基于系统区域设置。 百分比 将数字乘以 100 后显示，并在右侧追加百分号 (%)。 可配置小数点分隔符后的位数。 度量格式表达式结构 自定义格式表达式可以有一到三部分（各部分之间用分号分隔）。 使用情况 说明 一个部分 格式表达式应用于所有值 两部分 第一部分应用于正值和零，第二部分应用于负值。 三部分 第一部分应用于正值，第二部分应用于负值，第三部分应用于零。 下面的示例有两部分。 第一部分定义正值和零的格式，第二部分定义负值的格式。 #,##0;(-#,##0) 下面的示例有三部分。 第一部分定义正值的格式，第二部分定义负值的格式，第三部分应用于零，即如果值为零，则显示“Zero”。 $#,##0;(-$#,##0);\\Z\\e\\r\\o 度量格式字符 字符 说明 0 表示显示数字或零 (0) 的数字占位符。如果数字在格式字符串中出现零的位置有一个数字，则格式化的值将显示该数字。否则，格式化的值在该位置显示零。如果数字的位数少于格式字符串中的零(在小数的任一侧)，则格式化的值将显示前导或尾随零。如果数字的小数点分隔符右侧的位数多于格式表达式中小数点分隔符右侧的零数，则格式化的值会将数字四舍五入到与有零数一样多的小数位。如果数字的小数点分隔符左侧的位数多于格式表达式中小数点分隔符左侧的零位数，则格式化的值将显示额外的位数而无需修改。 # 表示显示数字或不显示数字的数字占位符。如果表达式在格式字符串中出现数字符号 ( # )的位置有一 个数字，则格式化的值将显示该数字。否则，格式化的值在该位置不显示任何内容。数字符号 ( # ) 占位符的工作方式与零 ( 0 ) 数字占位符类似，但如果数字的位数与格式表达式中小数点分隔符两侧的 # 字符数相同或更少，则不会显示前导零和尾随零。 . 表示一个小数占位符，它决定了在小数点分隔符的左侧和右侧显示的位数.如果格式表达式仅包含句点 ( . ) 左侧的数字符号 ( # ) 字符，则小于 1 的数字以小数分隔符开头。若要显示带小数的前导零，请使用零 (0) 作为小数点分隔符左侧的第一个数字占位符。 % 表示百分比占位符。表达式乘以 100。百分比字符 ( % ) 插入格式字符串中百分比出现的位置。 , 表示在小数点分隔符左侧有四个或更多位的数字中将千位与百位分开的千位分隔符。 E- E+ e- e+ 表示科学记数法。如果格式表达式在 E- 、E+、e- 或 e+ 的右侧至少包含一个数字占位符（ 0 或 # ），则以科学记数法格式显示格式化值，并在数字和其指数之间插入 E 或 e。 右侧的数字占位符数决定了指数中的位数。 使用 E- 或 e- 在负指数的后面包括一个减号。 使用 E + 或 e + 在负指数的后面包括一个减号，在正指数的后面包括一个加号。 + - $ ( ) 显示文字字符。推荐用法如下：+：用于正值- 或 ( )：用于负值$：用于货币符号 \\ 显示格式字符串中的下一个字符。若要将具有特殊含义的字符显示为文字字符，请在该字符前加上一个反斜杠 (\\) 。 反斜杠本身不显示。若要显示反斜杠，请使用两个反斜杠 (\\) 。 不能显示为文字字符的字符包括下列：# 、 0、 % 、 E、 e、 , 和 . Powered by Gitbook.            Last Modified： 2022-03-16 16:21:14 "},"contact/":{"url":"contact/","title":"Contact Us","keywords":"","body":"Contact Us Welcome to contact us by any means. Powered by Gitbook.            Last Modified： 2022-03-25 15:28:51 "},"installation/prerequisite.en.html":{"url":"installation/prerequisite.en.html","title":"Installation Prerequisites","keywords":"","body":"Installation Prerequisites To ensure the performance and robustness of the system, we recommend you to run MDX for Kylin in a single Linux server. The installation prerequisites of MDX for Kylin are listed below. Kylin Recommended Hardware Configuration Recommended Linux Version Required dependencies Recommended Database Version Recommended MySQL JDBC Version Recommended browser and driver version Recommended Client Configuration Kylin MDX for Kylin requires a Kylin instance or cluster. MDX for Kylin can connect with Kylin 4.0.2 and upon. If user want to use the MDX for Kylin before Kylin 4.x, please check the reference Recommended Hardware Configuration We recommend you to install MDX for Kylin in the following hardware configuration: Dual Intel Xeon Processor, 6 core (or 8 core) CPU - 2.3GHz or above 32GB ECC DDR3 or above At least one 1TB SAS HDD (3.5 inches), 7200RPM, RAID1 At least two 1GbE Ethernet ports Recommended Linux Version We recommend you to install MDX for Kylin in the following Linux operation systems: Red Hat Enterprise 7.x CentOS 6.4+ / CentOS 7.x Suse Linux 11 Ubuntu 16 Required dependencies Java Environment: JDK8 or above Recommended Database Version MySQL 5.7.x Recommended MySQL JDBC Version mysql-connector-java-8.0.16, please download to and if necessary, you can change version in /semantic-mdx/lib/ Recommended browser and driver version The chart screenshot export feature needs you to install a browser and its compatible driver, the browser should run correctly under the headless mode. We recommend you to use one of the following browsers versions, download its compatible driver and put the driver executable file in your PATH. Firefox version 57 or above CentOS 6, CentOS 7: sudo yum install firefox Ubuntu 16: sudo apt install firefox Firefox uses geckodriver, you can download it from GitHub, the version compatibility between geckodriver and Firefox can be found at Mozilla You can try executing firefox --headless to check whether Firefox runs correctly, if you get a dbus connection error, you should start a dbus-daemon first: CentOS: sudo yum install dbus-x11, Ubuntu: sudo apt install dbus-x11 (install dbus-x11) sudo dbus-uuidgen --ensure (generate machine-id) export $(dbus-launch) (run a dbus-daemon and set its environment variables) Chrome or Chromium version 67 or above CentOS 6: unsupported CentOS 7: sudo yum install chromium (need epel repository) Ubuntu 16: sudo apt install chromium-browser Chrome/Chromium uses chromedriver, you can download it from Google or Mirror, the version compatibility between chromedriver and Chrome/Chromium can be found at Google Recommended Client Configuration CPU: 2.5 GHz Intel Core i7 Operating System: macOS / windows 7 / windows 10 RAM: 8G or above Browser version: Chrome 67.0.3396 or above Powered by Gitbook.            Last Modified： 2022-03-25 16:25:24 "},"installation/install_linux.en.html":{"url":"installation/install_linux.en.html","title":"Install on Linux","keywords":"","body":"Install on Linux In this section, we will guide you to install MDX for Kylin in the Linux operating system quickly. Please make sure that your server meets the Installation Prerequisites of MDX for Kylin. Download Package Create Metastore Database Unpack Package Encrypt the Password of Mysql Server Modify Necessary Configurations Start MDX for Kylin Notice Download Package Download MDX for Kylin software package from webpage MDX for Kylin Download. Upload the installation package to the server and copy it to the /opt or /usr/local directory. Create Metastore Database Create a new database and set character_set_database to utf8mb4 or utf8, and set collation_server to utf8mb4_unicode_ci or utf8_unicode_ci Note: The sample creation database command in MySQL 5.7 is as follows: mysql> create database `` default character set utf8mb4 collate utf8mb4_unicode_ci; The sample creation database command in PostgreSQL 10.1 is as follows: postgresql> create database encoding='utf8'; Unpack Package Unpack the software package: $ tar -xf [package_name.tar.gz] e.g.: $ tar -xf mdx-for-kylin-1.0.0-beta.tar.gz Encrypt the Password of Mysql Server Open the unzipped file; encrypt the password of Mysql server. $ cd [Unzipped file] $ bin/mdx.sh encrypt '' Note: If there are some special characters in the input passwords, these characters should be in single quotes. If they self are single quotes, they should be in double quotes. Modify Necessary Configurations Modify necessary configurations in the properties file under conf directory. Configure insight.properties $ vim conf/insight.properties Modify the configurations listed below: insight.kylin.host: IP address or Hostname of the kylin server insight.kylin.port: port number of the kylin server insight.kylin.ssl: whether the kylin server enables SSL. The default value is false. insight.database.type: The type of MDX for Kylin database that needs to be connected. The default is mysql. if choose PostgreSQL as metadata, change type from mysql to postgresql. insight.database.useSSL:Whether use SSL to connect mysql.The default is false. insight.database.ip: IP address or Hostname of the Database server of the MDX for Kylin server insight.database.port: database port of the Database server of the MDX for Kylin server insight.database.name: database name of the Database server of the MDX for Kylin server insight.database.username: username of the Database server of the MDX for Kylin server insight.database.password: password’s encryption string for the Database server from step 4 insight.semantic.datasource-version: version of kylin, only support 4 insight.mdx.cluster.nodes: need to add the ip and port information of all MDX nodes in the cluster to the configuration file, for example: insight.mdx.cluster.nodes=ip1:port1,ip2:port2 Note: If insight.mdx.cluster.nodes is not set, the diagnostic package cannot be generated in the UI. For more configuration details, please refer to Basic Configurations. If you have cluster deployment requirements, please also read the manual Diagnostic Package chapter Start MDX for Kylin Start MDX for Kylin. It will take a few minutes to refresh metadata. $ bin/mdx.sh start Note: At the first startup, the synchronization task will fail because you have not filled in the account information communicated with kylin. The details are shown in the figure below. At this time, you can log in to MDX for Kylin normally and fill in the account information. After filling in, the synchronization task will get back to normal. Then you could login through url http://{host}:{insight.semantic.port}/login/ Since MDX for Kylin needs to connect to kylin, the system will prompt you to fill in the username and password for connection when you log in to the system for the first time. Stop MDX for Kylin $ bin/mdx.sh stop Powered by Gitbook.            Last Modified： 2022-03-25 11:17:33 "},"installation/MDX_cluster_installation.en.html":{"url":"installation/MDX_cluster_installation.en.html","title":"MDX cluster installation","keywords":"","body":"MDX cluster installation MDX instances installation & configurations Nginx installation & configurations How to access MDX cluster Notes MDX instances installation & configurations After downloading the MDX package from the website, please follow the guidance Install on Linux in the user mannual to install and configure MDX instances. To ensure that diagnosis package generation can perform normally in cluster mode, IP and Port information of ALL MDX for Kylin instances are needed in the property file ${MDX_HOME}/conf/insight.properties in the form as insight.mdx.cluster.nodes=:,: for each MDX instance. Nginx installation & configurations For installation of Nginx, please refer to the documents on the website of Nginx. MDX utilizes customized header:x-Host and x-Port to route requests to specified nodes in order to generate diagnosis packages on web. Thus, route rules are required in the Nginx property file. For example, based on Nginx 1.13.7, for two MDX for Kylin nodes with IP and Port as : and :, following configuration is required: # can be customized name upstream { server :; server :; } server { listen ; server_name ; #charset utf-8;(Recommended Use) #Enable customized header underscores_in_headers on; location / { if ($http_x_host = '') { #Requests without customized headers can be sent to any node #Here, needs to be consistent with the name after \"upstream\" proxy_pass http://; break; } #For requests containing customized headers, forward them to the specified node proxy_pass http://$http_x_host:$http_x_port;break; } } How to access MDX cluster After finishing above Nginx configuration, you may access the MDX cluster by the URL http://:/login which is determined by the configuration server_name and listen for Nginx. For BI software such Excel, you may access the project named on the MDX cluster by the URL http://:/mdx/xmla/. Notes Values surrounded by {} or <> in content above should be replaced (including {} or <>) with actual value accordingly. Nginx configuration above is a typical one. The route rules should be adjusted according to actual needs. Nginx may have problem accessing js and css file when the versions of different MDX instances are not the same version. So please ensure that versions of all MDX for Kylin instances are the same. Please do not use localhost for the IP information in the property file as this may cause Nginx forward failure. For enviroments on cloud, make sure that all MDX instances are installed under the same virtual subnet. Powered by Gitbook.            Last Modified： 2022-03-25 11:16:25 "},"installation/uninstall.en.html":{"url":"installation/uninstall.en.html","title":"Uninstall","keywords":"","body":"Uninstall In this section, we will introduce steps to uninstall MDX for Kylin. Run the following command in all nodes of MDX for Kylin to stop MDX for Kylin instance: bin/mdx.sh stop Run the following command to delete the workspace in all nodes of MDX for Kylin: rm -rf For now, MDX for Kylin is uninstalled successfully. Powered by Gitbook.            Last Modified： 2022-03-20 16:12:49 "},"dataset/design_dataset/s1_basic_info.en.html":{"url":"dataset/design_dataset/s1_basic_info.en.html","title":"Fill in the basic information","keywords":"","body":"Basic Information This chapter introduces how to design a dataset, using sample data (learn_kylin) as an example. Open the Web UI and click on the dataset menu to open the dataset list. Click the Add button to add a new dataset. Here we create a new dataset named kylin_sales_dataset. Then you will be taken to the Dataset Design Wizard. At the top of the GUI, you can see the current step. Next Define a relationship Powered by Gitbook.            Last Modified： 2022-03-16 16:21:11 "},"dataset/design_dataset/s2_relationship.en.html":{"url":"dataset/design_dataset/s2_relationship.en.html","title":"Define a relationship","keywords":"","body":"Define Relationships In step 2 you can define the relationships between Models, before that you need to add Models to the dataset based on your analysis needs. Note：You must add at least one model. After adding the first model, you can add new models and define the relationship between them. Note：There must be at least one pair of common dimension tables between models Next Define semantics Powered by Gitbook.            Last Modified： 2022-03-16 16:21:11 "},"dataset/design_dataset/s3_semantic.en.html":{"url":"dataset/design_dataset/s3_semantic.en.html","title":"Define semantics","keywords":"","body":"Define Semantics After clicking Next, you could define semantics in this step. The left side of the page shows the dimensions and measures in each cube. On this page you can do the following: View and edit dimension table View and edit dimensions View and edit measure Add, View and Edit Hierarchy Add, view and edit named sets Add, view, and edit calculated measures Next View and edit dimension table Powered by Gitbook.            Last Modified： 2022-03-16 16:21:11 "},"dataset/design_dataset/s3_1_dimension_table.en.html":{"url":"dataset/design_dataset/s3_1_dimension_table.en.html","title":"View and edit dimension table","keywords":"","body":"View and edit dimension tables Click Dimension Table Name to view the properties of the dimension table After clicking the Edit button, you could edit the type of the dimension table. Note：If you need to use YTD, QTD, WTD, MTD functions, you need to specify the date table as the time type. Next View and edit dimensions Powered by Gitbook.            Last Modified： 2022-03-16 16:21:11 "},"dataset/design_dataset/s3_2_dimension.en.html":{"url":"dataset/design_dataset/s3_2_dimension.en.html","title":"View and edit dimensions","keywords":"","body":"View and edit dimensions Click Dimensions Name to view the Properties of the dimensions Introduct of Dimension Properties In MDX for Kylin system, there are many properties that determine how dimensions function. The following table lists and describes each of these properties. Note: To ensure the query performance, please add the dimension, which is served as dimension properties on the the following table, to the aggregation group in kylin models. Dimension Properties Description Key Column The column corresponding to this dimension which cannot be changed. Dimension Name The displaying name of the dimension. Data Type The data type of the dimension which cannot be changed. Type The property of the dimension. After set as the time property, the dimension can be used for time-related calculations. E.g., YTD, YOY, etc. Name Column Name Column identifies the column that is displayed to users while analyzing. This column is used to improve the usefulness and friendlines in the client applications.For example, set the Name Column of the dimension Datekey (20120101) as the dimension Date_name (Jan. 1 st, 2012). When analyzing the dimension Datekey in the report, the value shown in the report is Jan. 1 st, 2012.The value in the Name Column must only correspond to the value in a Key Column, otherwise, it will cause an MDX calculation error. Value Column After the Value Column is defined, MemberValue can be used in the expression of the calculated measure to return the specified column.For date-related dimensions, the Value Column can be set to a date type dimension and utilize the benefits for filtering purposes, e.g., Last Year, Last Week.To ensure the accuracy of query results, the value in Value Column must have a one-to-one or one-to-many mapping relationship with the value in Key Column. Properties After setting Properties with dimensions, you can refer to the property in MDX expression.The value in each property must have a one-to-one or one-to-many mapping relationship with the value in Key Column. Folder To determine which folder this dimension belongs to. If you need multiple levels of folders, please use \\ character to separate.For example, when user input folder1\\folder2 in this field for a dimension, then this dimension will be placed in folder2, and folder2 is nested in folder1. Visible After turning off visibility, all users cannot access to this dimension. This option will be synchronized to the access list. Default Member Use an expression to specify a single default member returned of this dimension. Please notice this feature is still in the BETA phase. Edit Dimension After clicking the Edit button, you could edit the type of the dimension and the name of the dimension, and define visibility restrictions. Note: Key Column, Name Column and Value Column used in the dimension only support String, Int, Long, Double, Timestamp, Date, Boolean types You can edit attribute here. Note：If you need to use the YTD, QTD, WTD and MTD functions, you need to change the type of dimensions to the year, quarter, month and day. You can edit Name Column here. Note: When the Name Column is none, the expressions related to the Name Column will be processed according to the contents of the Key Column; You can edit Value Column here. Note: When Value Column is none, the expressions related to Value Column will be processed according to the contents of Name Column; You can edit Properties here. You can set the folder to which the dimension belongs here. If you need multi-level folders, please use \\ to separate them. Note: Multi-level folders only take effect in Excel. Secondly, you can also set the Default Member of the Dimension Note: This function is currently in the BETA stage, and now Default Member can be only set as a member of this dimension, such as [Dates].[Year].&[2019] Default member behavior description When default member is set for a dimension in the hierarchy, the default value will not be default member when the hierarchy is placed in the filter box or slicer. In addition, when the hierarchy is put on rows or columns, the default member will be filtered. When no default member dimension is checked, the display of other dimensions will be filtered by default member. Known Limitations: After placing the dimension with Default Member in the filter of the pivot table, the filter status on the filter interface is single-select Default Member, but the list below shows Select All. If the set Default Member does not exist, you can still save the data set normally, and eventually the Default Member will not take affect in Excel. At the same time, you can set whether the dimension is visible in the client application. Next View and edit measure Powered by Gitbook.            Last Modified： 2022-03-25 15:10:55 "},"dataset/design_dataset/s3_3_measure.en.html":{"url":"dataset/design_dataset/s3_3_measure.en.html","title":"View and edit measures","keywords":"","body":"View and edit measures Click Measures Name to view the properties of the measures After clicking the Edit button, you could edit the name and format setting of the measure, and define visibility restrictions. Note: MDX now only supports the SUM, MIN, MAX, COUNT, COUNT_DISTINCT measures in Kylin. Only the return types of measures in Kylin are String, Int, Long, Double. The measure format is to improve the readability of the measure value. You can specify the required format for any measure. The system supports the selection and configuration of predefined formats, such as: number, currency, percentage, and also supports the usage of format characters to configure custom formats. View Predefined measure formats and measure format characters. You can set the measure format here: [Open format setting page] [Predefined measure formats - Number] [Customize] You can set the folder to which the measure belongs here. If you need multi-level folders, please use \\ to separate them. Note: Multi-level folders only take effect in Excel. At the same time, you can set whether the measure is visible in the client application. Next Add, View and edit Hierarchy Powered by Gitbook.            Last Modified： 2022-03-25 15:12:15 "},"dataset/design_dataset/s3_4_hierarchy.en.html":{"url":"dataset/design_dataset/s3_4_hierarchy.en.html","title":"Add, View and edit Hierarchy","keywords":"","body":"hierarchy You could add hierarchies in MDX for Kylin. A hierarchical structure is a collection of levels based on dimensions, which can be used to improve the analytical capabilities of data analysts. For example, you can create a time hierarchy that contains Year, Quarter, Month, Week, and Day levels. In this way, analysts can analyze the sales by year in the client, and when necessary, they can respectively expand \"Year > Quarter > Month > Week > Day\" for more granular analysis. Add, view, and edit hierarchy Click the + Hierarchy button to add hierarchy. Note： Hierarchy cannot be created across dimension tables When adding dimensions to the hierarchy, please choose from the coarse to the granular dimension Click Hierarchy Name to view the properties of the hierarchy After clicking the Edit button, you could edit the properties of the hierarchy. Set Weight According to different business analysis requirements, users may need to set up customized roll-ups in the hierarchy, that is, customize the way of rolling up member values. In the hierarchy, you can set weight fields for different levels in a hierarchy. Whenever the value of the parent member is calculated, the weight field is multiplied by the child member. The weight field generally contains values from -1 to 1, such as -1, -0.25, 0, 0.25, 0.5, 0.75, 1, etc. A positive value means adding the value to the parent level, a negative value means subtracting the corresponding value, and 0 values make no change to the parent level. Users can use customized roll-ups for almost all hierarchical structures. For example, we have created a model with the transaction data of a pharmacy as follows: Fact table F_TRANS TRANS_ID PRODUCT_NAME PRICE 001 polyenes 33 002 5-HTP 84 003 Evening Primrose Oil 53 ... ... ... The dimension table D_MEDICINE contains the following dimensions: CATEGORY: the category of medicine SUB_CATEGORY: the sub-category of medicine SUB2_CATEGORY: the sub-sub-category of medicine PRODUCT_NAME: medicine name And the corresponding weight columns of the above dimensions Configuration required: Set the configuration insight.kylin.only.normal.dim.enable to false. Step 1: Create a new MDX dataset and create a hierarchy in the dimension table as follows. Step 2: When editing the hierarchy, click the button Set Weught to open the pop-up window for weight setting. The content of the pop-up window is as follows, and the user can set the weight column for each level. After setting, click OK to submit. Step 3: After saving the changes of this dataset, connect to Excel for analysis. Place the hierarchical structure and measure SUM(PRICE) in the pivot table, and expand the hierarchy, you can see the roll-up calculation result for each level customized by the value of the weight field. Known limitations Only supports customized roll-up calculations for SUM measures. If you need to filter the hierarchy for customized roll-up calculations, you should filter it on the row label or column label. If you put the hierarchy into the filter panel, the result might be inaccurate. It's not recommended to set the weight field on the hierarchy defined on the time-type dimension table. If in the model, the dimension table where the weighted field is located is joined to the fact table on multiple primary keys with a many-to-many relationship, the analysis result might be inaccurate. If there are multiple hierarchies in the same dimension table, and the same weight field is referenced. When multiple hierarchies are added to the report, the query results may be inaccurate. Next Add, View and Edit Named Sets Powered by Gitbook.            Last Modified： 2022-03-22 15:54:55 "},"dataset/design_dataset/s3_5_namedset.en.html":{"url":"dataset/design_dataset/s3_5_namedset.en.html","title":"Add, view and edit named sets","keywords":"","body":"Add, View and Edit Named Sets Introduction It is a common demand of MDX for Kylin to reuse a set of Members. This demand can be satisfied by Named Sets. A Named Set is a set of Members, called Member Set, which is evaluated according to a specified expression. Named Sets can be directly put on axes, and can also be referenced in the expressions of Calculated Measures and other Named Sets. Remarks Currently, supported BI tools of the Named Set feature are Excel and Tableau. Now the Named Set feature supports Member Sets only, which are sets of Members. It does not support Tuple Sets, which are sets of Tuples (A Tuple consists of several Members that all belong to different Dimensions). All Members in a Named Set must belong to the same Hierarchy. Steps Click the + Named Set button to add a Named Set. Click the Named Set to view the detail properties. Click the Edit button to edit properties of the Named Set. The expression can be written in MDX; Location shows where the Named Set will be shown in the \"PivotTable Fields\" list of Excel; The \"Visible\" switch controls whether the Named Set is visible in BI tools. Examples Create a Named Set in a Dataset. The expression of this Named Set is like the \"Top 5 City\" Named Set in above steps. In Excel, put the new Named Set on the Rows axis, it shows like: In Tableau, put the new Named Set on the Rows axis, it shows like: Next Add, view, and edit calculated measures Powered by Gitbook.            Last Modified： 2022-03-22 16:11:31 "},"dataset/design_dataset/s3_6_calculated_measure.en.html":{"url":"dataset/design_dataset/s3_6_calculated_measure.en.html","title":"Add, view, and edit calculated measures","keywords":"","body":"Add, view and edit calculated measure Click the + Calculated Measure button to add calculated measures. Note： On this page you can set the format string. The drop-down box at the format string can be selected either by drop-down or manually. The expression at the expression needs to fill in the MDX query Click Calculated Measure Name to view the properties of the calculated measure After clicking the Edit button, you could edit the properties of the calculated measure. You can set the folder to which the calculated measure belongs here. If you need multi-level folders, please use \\ to separate them. Note: Multi-level folders only take effect in Excel. At the same time, you can set whether the calculated measure is visible in the client application. Next Define translation Powered by Gitbook.            Last Modified： 2022-03-25 15:13:56 "},"dataset/design_dataset/s3_6_s1_non_empty_behavior.en.html":{"url":"dataset/design_dataset/s3_6_s1_non_empty_behavior.en.html","title":"Non-empty behavior","keywords":"","body":"Non-empty behavior Non-empty behavior includes a set of base measure names which will be used to parse MDX queries. If the set is empty, MDX will perform the evaluation to evaluate the measure value. If there is any base measure name and all base measure values are empty on a cell, the calculated measure value of the cell will be treated as empty without further evaluation. Why set Non-empty behavior? Non-empty behavior is an optimization specified by the user. Using this function can improve the performance of NON EMPTY queries that include calculated measures. How to set Non-empty behavior? To set the Non-empty behavior for a calculated measure, you need to follow three steps: In the define semantics step, find the calculated measure which you want to set Non-empty behavior and click edit. In the calculated measure form, click the Non-empty behavior select box, then select one or more base measures which may have empty values. Click OK to save the calculated measure. You can see your selected base measures in the non-empty behavior field of the table. Finally, save the dataset. Notice In order to reach the best performance of cells evaluation, only one member should be designated as far as possible, and no more than five members are recommended. If the Kylin model has been changed, the base measures referenced by Non-empty behavior in the dataset may be deleted. In this case, the dataset status will be set to error, but Excel can still connect to the dataset. You can still use the calculated measure as normal, since the deleted base measure in non-empty behavior list will be treated as invalid. (The current version of MDX will not explicitly show an error tip on a calculated measure whose non-empty behavior list contains any deleted base measure. We will report an error in the future version.) Powered by Gitbook.            Last Modified： 2022-03-22 17:02:04 "},"dataset/design_dataset/s3_6_s2_template.en.html":{"url":"dataset/design_dataset/s3_6_s2_template.en.html","title":"Use template","keywords":"","body":"Use template Using template means we can use the template to generate a calculated measure expression quickly. This feature can help us to create calculated measures faster. MDX will generate the build-in and widely-used templates automatically, you can create your customize templates by yourself. Why use template Reduce the complexity of editing calculated measure: It helps the persion, who is not familiar with MDX query, defines the calculated measures. Reduce the possibility of writing error expression: Because MDX syntax is complex and the expression is hard to write, the user will make the mistake easily. Using correct templates will prevent the mistake happened. Improve the efficiency of editing calculated measure: You can use the pre-defined templates to create many widely-used calculated measures easily, which expression are similar. Preview the frequently used expressions: Template can be defined with description and translation by yourself. you can click the template list and preview the description when you are editing the calculated measures. How to use template Edit calculated measure and click Use Templates button. Open Calculated Measure Template dialog, select one template. Select all required parameters on Parameters tab. [Optional]Click Expression tab and check the result of template. Click OK and fill the result in Expression field. The build-in templates MDX has the build-in and widely-used templates, this is the list of templates. ├── Default Template │ │ ├── Mathematical Operations │ │ ├── Addition: Calculate the sum of two values. │ │ ├── Subtraction: Calculate the difference between two values. │ │ ├── Multiplication: Calculate the product of two values. │ │ ├── Division: Calculate the ratio of a value to another one. │ │ │ ├── Time Intelligence │ │ ├── Year-to-date Total: Calculate the total of the measure or calculated measure, │ │ │ starting from the beginning of the current year. │ │ ├── Month-to-date Total: Calculate the total of the measure or calculated measure, │ │ │ starting from the beginning of the current month. │ │ ├── Year-over-year Change: Calculate the year-over-year change of the measure or │ │ │ calculated measure. │ │ ├── Month-over-month Change: Calculate the month-over-month change of the measure │ │ │ or calculated measure. Add the custom templates MDX allow you to create the customize template by yourself. You should edit the indicators.json, which is located in MDX software package, to create templates. The path of the JSON file is the same as the insight.properties file's. The file defines the template JSON structure. You should add your new template JSON at the end of list JSON property, which is an array. Quick start with custom templates The picture is the demo custom template which is added into the indicators.json file. The template will be listed in dialog immediately. Click here to see the demo JSON Notice: `${0}` means Measure_A, `${1}` means Measure_B in the `template` field { \"name\": \"Your custom Addition\", \"template\": \"${0} + ${1}\", \"folder\": \"Mathematical Operations\", \"category\": \"calculateMeasure\", \"buildin\": false, \"description\": \"Calculate the sum of two values.\", \"params\": [ { \"name\": \"Measure_A\", \"accept\": [ \"measure\", \"calculateMeasure\" ], \"placeholder\": \"${Measure_A}\" }, { \"name\": \"Measure_B\", \"accept\": [ \"measure\", \"calculateMeasure\" ], \"placeholder\": \"${Measure_B}\" } ] } More details about custom template JSON When you add the templates, please split each template JSON by comma. The last template JSON doesn't need the comma at the end. { \"pageNum\": 0, \"pageSize\": 0, \"total\": 0, \"list\": [ ... // The other templates' JSON { \"name\": \"Month-over-month Change\", // The last templates' JSON \"template\": \"Template expression\", \"buildin\": true, \"params\": [...] }, // 1. Add the comma here { \"name\": \"New template name\", // 2. Add your new template JSON here \"template\": \"New template expression\", ... } // 3. Don't keep the comma after your new last template JSON ] } The calculated meausre template is based on template JSON. More details about template is below: Notice: [Translatable] means the field can be translated by translation in JSON. If the translation field is not defined, it will use the default value. { \"name\": \"The template's name [Translatable]\", \"template\": \"The template's expression: '\\n' means wrap text. '${N}' means the nth of params.\", \"folder\": \"The template's folder: Split by'\\\\' to create multilayer folder [Translatable]\", \"category\": \"calculateMeasure\", // Default by \"calculateMeasure\" \"buildin\": false, // \"buildin\" means that is buildin or not. \"description\": \"The template's description [Translatable]\", // Param list \"params\": [ { \"name\": \"The param's name\", \"accept\": [ // The param's accept type. \"column\", \"namedSet\", \"measure\", \"calculateMeasure\" \"hierarchy\", \"hierarchyLevel\" ], \"placeholder\": \"The param's placeholder\" } ], // The above fields are [required], the below fields are [optional]. // Translation list \"translation\": { // Chinese translation \"zh\": { \"name\": \"模板的名称\", \"folder\": \"模板所属文件夹\", \"description\": \"模板的描述\", \"params.0.name\": \"参数的名称\", \"params.0.placeholder\": \"参数在表达式中占位符\" }, // English translation \"en\": { \"name\": \"Template's name\", \"folder\": \"Template's folder\", \"description\": \"Template's description\", \"params.0.name\": \"Parameter's name\", \"params.0.placeholder\": \"Parameter's placeholder\" } } } For future For now, defining a template JSON is not easy and it requires you know about JSON knowledge. However, it is friendly for the future of MDX. Because of the JSON structure, MDX system can fit in with a diversity of situations, even if you would like to define translation in template dialog by yourself. Maybe it will have an Web UI to replace the configuration for template JSON in the future. Powered by Gitbook.            Last Modified： 2022-03-16 16:21:11 "},"dataset/design_dataset/s3_6_s3_semi_additive_measure.en.html":{"url":"dataset/design_dataset/s3_6_s3_semi_additive_measure.en.html","title":"semi-additive measure","keywords":"","body":"semi-additive measure Semi-additive measures are very common in various data analysis scenarios, like account balance or inventory analysis. Take account balance as an example, you can analyze account balance based on the account transactions history, SUM() is used when aggregated by default, but for aggregating multiple records under the same account, we need to use last record value along the time dimension. Click the + Calculated Measure button to add calculated measures, you can add semi-additive additive measure. Powered by Gitbook.            Last Modified： 2022-03-16 16:21:11 "},"dataset/design_dataset/s3_7_measure_group.en.html":{"url":"dataset/design_dataset/s3_7_measure_group.en.html","title":"View and edit measure group","keywords":"","body":"View and edit measure group In datasets, measures are grouped according to Cubes in Kylin, and measure groups are used to associate dimensions and measures with each other. Note: The Cube in Kylin forms a measure group in MDX For calculated measures is a separate measure group Support for moving calculated measures into different measure value groups You can edit the measure group name here. Powered by Gitbook.            Last Modified： 2022-03-25 11:17:20 "},"dataset/design_dataset/s3_8_batch_deletion.en.html":{"url":"dataset/design_dataset/s3_8_batch_deletion.en.html","title":"Batch deletion of named sets/hierarchies/calculated measures","keywords":"","body":"Batch deletion of named sets/hierarchies/calculated measures When a dataset change occurs, such as replacing a model with a new model with a different name, if the named set/calculation measure in the dataset uses the dimension/measure/calculation measure in the replaced model, it will cause the named set/calculation measure in the dataset to become invalid. Another example: Delete the dimension of the model in Kylin, and the hierarchy created by using that dimension will become invalid. In this case, the number of failed namesets/hierarchies/computational metrics may be very large, and batch deletion operations can be used to delete the invalid content. The following example deletes both the invalid named set and the calculated metrics - Models and datasets: The model InternetSales_clone_Test and the model ResellerSales_clone_Test to form the data set MyTestDataset. It contains the calculation metric cm1 which references the measure from InternetSales_clone_Test, the calculation metric cm2 which references the measure from ResellerSales_clone_Test, and the named set N1 which references the dimension/measure from InternetSales_clone_Test. Change operation: Replace the model InternetSales_clone_Test in the dataset with another model Calculate measure and named set invalidation: Calculate metric cm1 and named set N1 invalidation: Batch delete operation: Click on this process at the top, select the calculated measure and named set you want to delete in the window, and click OK Confirm again to delete Delete successful Save dataset Powered by Gitbook.            Last Modified： 2022-03-25 15:16:09 "},"dataset/design_dataset/s4_translate.en.html":{"url":"dataset/design_dataset/s4_translate.en.html","title":"Define translation","keywords":"","body":"Translations Introduction In MDX for Kylin, you can embed multiple translation of a caption to provide culture-specific strings based on the localed identifier (LCID). Analysis application clients (such as Excel, Tableau) can pass the Language Code Identifier (LCID) when connecting to MDX for Kylin to obtain the language setting, and display the names of the objects in the corresponding lanaugage. This feature helps international teams to consume the same dataset without the need to repeatedly defining the dataset for localization purposes. Note There are three language supported: Chinese, English(US), and English(UK). The objects that can be set are names of the dimension table, dimension, measure, calculated measure, and hierarchy. If a dimension is defined with a translation, then it will also be applied in the hierarchy containing the dimension. If the language in the analysis application client is not defined in the dataset translation, the dataset will use the default language. When using Excel, Excel will pass the LCID as language settings in Excel. For Tableau users, the language settings of the Windows system will be applied, so you can change the translations of the dataset displayed in Tableau by changing the language setting of the Windows system. When creating a new calculated measure, please reference the measure in the original name, instead of the translation in the MDX expression. How to set translation When editing a dataset, go to translation, click the globe icon to add a language. Choose a language in the new column and click confirm. In this new group of translation, the user can input the translation of table names, dimensions or measures. Examples Define two language settings for a dataset, including Chinese and English (US). Open in Excel with Chinese language settings, the Chinese translation will apply: Open in Excel with English language setting, the English translation will apply: Note: you can change language settings of Excel through Options - Language Next Define Dimension Usage Powered by Gitbook.            Last Modified： 2022-03-22 16:16:49 "},"dataset/design_dataset/s5_dimension_usage.en.html":{"url":"dataset/design_dataset/s5_dimension_usage.en.html","title":"Define dimension usage","keywords":"","body":"Define Dimension Usage This page will list all the dimension tables and models in this dataset. You can define relationships between dimension tables and measures within models. For other kinds of relationships, you can edit the relationship type by clicking the Edit button. There are 2 possible dimension usage options: Regular: The dimension table is directly linked to the model. Many to Many：Kylin can not support many-to-many currently. Next Save Powered by Gitbook.            Last Modified： 2022-03-25 15:20:11 "},"dataset/design_dataset/save.en.html":{"url":"dataset/design_dataset/save.en.html","title":"Save","keywords":"","body":"Save and Create Once you've done this, click Save to complete the design of the dataset, then you can view it in the dataset list. Next YTD, QTD, MTD Instructions Powered by Gitbook.            Last Modified： 2022-03-16 16:21:11 "},"dataset/design_dataset/s8_xtd.en.html":{"url":"dataset/design_dataset/s8_xtd.en.html","title":"YTD, QTD, MTD Instructions","keywords":"","body":"YTD, QTD, MTD instructions Define a time dimension table type as time. Create a Hierarchy with the year, month, and day. Name this Hierarchy as Date-Hierarchy. Note: You should set the corresponding date attribute for each level. E.g., for year dimension, you should set it as the Year attribute. Create a CM with the following formula: YTD : SUM(YTD([DATE_DIM].[Date-Hierarchy].CurrentMember), [Measures].[XXX]) MTD : SUM(MTD([DATE_DIM].[Date-Hierarchy].CurrentMember), [Measures].[XXX]) Powered by Gitbook.            Last Modified： 2022-03-16 16:21:11 "},"dataset/access_list.en.html":{"url":"dataset/access_list.en.html","title":"Configure Access List","keywords":"","body":"Configure Access List After created the dataset, users can configure the access control of it. Users can set the access lists for a User, Group or a Role at object-level. The object that user can set the access list are Dimension, Measure, Calculated Measure and Named Set. On the dataset list, click the access icon on the right side and enter the access control configuration page. Select one of the tab pages for the dimension, measure, calculated measure or named set and click the + Grant button. A pop-up window appears. Select the user or group or role for editing access list at the top of the pop-up window. Switch between the model and the table in the navigation bar on the left side of the pop-up window. On the right side, you can see the dimensions in the table or the measures / calculated measures / named set in the model. Click on the dimension, measure, or calculation of the Eye icon in the front. When there is a slash on the mark, the corresponding dimension / measure / calculated measure / named set will not be accessible by the user, group or role. Click on the Eye icon again so you can remove the restriction. Click the Submit button. The saved access list will appear in the table below. Users can click the Delete button on the right side of the table to remove the visibility limit or click the Edit button to edit the access list again. To learn more about Object-level Security, please check Object-level Security Powered by Gitbook.            Last Modified： 2022-03-25 15:21:30 "},"dataset/import_export.en.html":{"url":"dataset/import_export.en.html","title":"Datasets Import and Export","keywords":"","body":"Datasets import and export Export Dataset Import Dataset Export Dataset Export a single dataset Open the dataset page, in the action column of a single dataset, click the ellipsis - > Export to export the ZIP file corresponding to the dataset. Export multiple datasets Open the dataset page, click Export Dataset, check the datasets you want to export in the list (you can fuzzy search the dataset name first), and click Export to generate the ZIP file corresponding to the datasets. Import Dataset Open the dataset page, click Import data set, select the ZIP file of the dataset, and click Parse: When the analysis is successful, a window will pop up, select the Action type and whether to import permissions, click Import to complete the import. Explanation for Add New/Replace/Not Import Add New When there is no dataset with the same name as the source dataset in the target project, the default is Add New operation, and the default drop-down option for the Action column is Add New. Replace When there is a dataset with the same name as the source dataset in the target project, the default is an Replace operation, and the default drop-down option for the Action column is Replace. Not Import In any case, the user can choose Not Import. Information about the dataset when importing The system will display corresponding information on the right according to different operations. Add New Display the model name in the new dataset and the relationship between the models. Replace The source data set and the target data set are exactly the same The definitions of the two data sets are exactly the same: model name, correlation between models, named set, calculation measure, dimension table/dimension/measure under the model, translation (accurate to the translation content of each object in each translation language) and dimension usage are consistent. The source and target datasets are not exactly the same The system will display the added objects (such as: model, measure, calculation measure) of the source data set relative to the target data set, and will also display the deleted objects (such as: model, measure, calculation measure). In addition, when the translation or dimension usage is inconsistent, the system will make a text prompt, but will not list the detailed differences. Not Import Remarks Supports exporting/importing datasets across environments (e.g. from development to production) and across projects Support for importing JSON dataset files exported in older versions Powered by Gitbook.            Last Modified： 2022-03-16 16:21:11 "},"dataset/rename_dataset.en.html":{"url":"dataset/rename_dataset.en.html","title":"Rename Dataset","keywords":"","body":"Rename Dataset Open the dataset page, in the Action column of the individual dataset, click the ellipsis - > Rename: Enter a new name that conforms to the naming rules, and click OK: Complete renaming: Powered by Gitbook.            Last Modified： 2022-03-22 17:17:04 "},"dataset/mdx_list.en.html":{"url":"dataset/mdx_list.en.html","title":"MDX Function List","keywords":"","body":"MDX Function List These are the functions implemented in the current MDX for Kylin release. Name Description&Usage () Brace operator constructs a Tuple. : ([ ,...]) ([Date].[Day].&[1917-02-09],[Product].[Color].&[Blue]) {} Brace operator constructs a Set. : {[ ,...]} : {[ ,...]} Example 1：{[Customer].[BirthDate].&[1917-02-09]}Example 2：{[Customer].[BirthDate].[BirthDate] .Members}Example 3：{([Customer].[BirthDate].&[1917-02-09],[Product].[Color].&[Blue])} * Multiplies two numbers. : * [Measures].[Count]*5 * Returns the cross product of two sets. : * : * : * : * Example 1：{[Customer].[BirthDate].[BirthDate] .Members} *{[Customer].[Education].[Education].Members}Example 2：{[Customer].[BirthDate].&[1917-02-19]}*{[Customer].[Education].[Education] .Members}Example 3：{[Customer].[BirthDate].[BirthDate] .Members} * {[Customer].[Education].&[Bachelors]}Example 4：{[Customer].[BirthDate].&[1917-02-19]}*{[Customer].[Education].&[Bachelors]} + Adds two numbers : + [Measures].[Count]+2 - Subtracts two numbers. : - [Measures].[Count]-2 - Returns the negative of a number. : - -[Measures].[Count] / Divides two numbers. : / Example 1：2/1Example 2：[Measures].[Count]/5 Returns whether an expression is less than another. : : Example 1：[Measures].[A] Example 2：'kylin' Returns whether an expression is less than or equal to another. : : Example 1：[Measures].[A] Example 2：'kylin' <> Returns whether two expressions are not equal. : <> : <> Example 1：[Measures].[A] <> 10000Example 2：'kylin' <> 'kylingence' = Returns whether two expressions are equal. : = : = Example 1：1 = 2Example 2：'kylin' = 'kylingence' > Returns whether an expression is greater than another. : > : > Example 1：1 > 2Example 2：'kylin' > 'kylingence' >= Returns whether an expression is greater than or equal to another. : >= : >= Example 1：1 > 2Example 2：'kylin' > 'kylingence' AND Returns the conjunction of two conditions. : AND ([Measures].[Count]>10000) AND (1=2) Abs Returns a value of the same type that is passed to it specifying the absolute value of a number. : Abs() Abs(200.1-300) Acos Returns the arccosine, or inverse cosine, of a number. The arccosine is the angle whose cosine is Arg1. The returned angle is given in radians in the range 0 (zero) to pi. : Acos() Acos(0.540302)+acos (-1.000000) Acosh Returns the inverse hyperbolic cosine of a number. Number must be greater than or equal to 1. The inverse hyperbolic cosine is the value whose hyperbolic cosine is Arg1, so Acosh(Cosh(number)) equals Arg1. : Acosh() Acosh(1)+Acosh(10) Aggregate Returns a calculated value using the appropriate aggregate function, based on the context of the query. : Aggregate() : Aggregate(, ) Example 1：Aggregate({[Date].[CalendarYear].&[2014],[Date].[CalendarYear].&[2013]})Example 2：Aggregate({[Date].[CalendarYear].&[2014],[Date].[CalendarYear].&[2013]},[Measures].[Count]) AllMembers Returns a set that contains all members ,including calculated members,of the specified object. : .AllMembers: .AllMembers: .AllMembers Example 1：[Date].[CalendarSemester].[CalendarSemester] .AllmembersExample 2：[Date].[Due Fiscal Date-Hierarchy].AllmembersExample 3：[Date].[Due Fiscal Date-Hierarchy].[FiscalYear].Allmembers Asc Returns an Integer representing the character code corresponding to the first letter in a string. : Asc() Asc(\"kylingence\") AscB See Asc. : AscB() AscB(\"kylingence\") AscW See Asc. : AscW() AscW(\"kylingence\") Ascendants Returns the set of the ascendants of a specified member. : Ascendants() Ascendants([Date].[Due Fiscal Date-Hierarchy].[FiscalYear].&[2013].&[1] Asin Returns the arcsine, or inverse sine, of a number. The arcsine is the angle whose sine is Arg1. The returned angle is given in radians in the range -pi/2 to pi/2. : Asin() Asin(-0.5) Asinh Returns the inverse hyperbolic sine of a number. The inverse hyperbolic sine is the value whose hyperbolic sine is Arg1, so Asinh(Sinh(number)) equals Arg1. : Asinh() Asinh(-5) Atan2 Returns the arctangent, or inverse tangent, of the specified x- and y-coordinates. The arctangent is the angle from the x-axis to a line containing the origin (0, 0) and a point with coordinates (x_num, y_num). The angle is given in radians between -pi and pi, excluding -pi : Atan2(, ) Atan2 (-7,7) Atanh Returns the inverse hyperbolic tangent of a number. Number must be between -1 and 1 (excluding -1 and 1). : Atanh() Atanh(0.76159416) Atn Returns a Double specifying the arctangent of a number. : Atn() Atn (90) Avg Returns the average value of a numeric expression evaluated over a set. : Avg() Avg(, ) Example 1：Avg({[Date].[CalendarQuarter].[CalendarQuarter].members})Example 2：Avg({[Date].[CalendarQuarter].[CalendarQuarter].members},[Measures].[Count]) BottomPercent The BottomPercent function calculates the sum of the specified numeric expression evaluated over a specified set. The function then returns the elements with the lowest values whose cumulative percentage of the total summed value is at least the specified percentage. This function returns the smallest subset of a set whose cumulative total is at least the specified percentage. : BottomPercent(, , ) BottomPercent({[Product].[Color].[Color].members},60,[Measures].[Count]) BottomSum Sorts a set and returns the bottom N elements whose cumulative total is at least a specified value. : BottomSum(, , )BottomSum({[Product].[Color].[Color].members},5220,[Measures].[Count]) CBool Returns an expression that has been converted to a Variant of subtype Boolean. : CBool() CBool(100) CDate Returns an expression that has been converted to a Variant of subtype Date. : CDate() CDate(\"2020-07-25 17:44:10\") CDbl Returns an expression that has been converted to a Variant of subtype Double. : CDbl() CDbl(234.456784) CInt Returns an expression that has been converted to a Variant of subtype Integer. : CInt() CInt(234.121231231) Cache Evaluates and returns its sole argument, applying statement-level.cachingCache(>)Cache([Measures].[Count]) Caption Returns the caption of an object. : .Caption: .Caption: .Caption: .Caption Example 1：[Customer].[EmailAddress].CaptionExample 2：[Date].[Due Calendar Date-Hierarchy].CaptionExample 3：[Date].[Due Calendar Date-Hierarchy].[CalendarYear].CaptionExample 4：[Product].[Class].&[M].caption Cast Converts values to another type. : Cast( AS ) Cast(1+2 AS STRING) Children Returns the children of a member. : .Children [Date].[Due Calendar Date-Hierarchy].[CalendarYear].&[2010].children Chr Returns a String containing the character associated with the specified character code. : Chr()chr(48) ChrB See Chr. : ChrB() ChrB(48) ChrW See Chr. : ChrW() ChrW(48) ClosingPeriod Returns the last descendant of a member at a level. : ClosingPeriod() : ClosingPeriod() : ClosingPeriod(, ) : ClosingPeriod() Example 1：[Customer].[person-Hierarchy].[Education].closingperiodExample 2：ClosingPeriod([Date].[Due Fiscal Date-Hierarchy].[FiscalYear])Example 3：ClosingPeriod([ Date].[Due Fiscal Date-Hierarchy].[FiscalYear] ,[Date].[Due Fiscal Date-Hierarchy].[FiscalYear].&[2010])Example 4：ClosingPeriod([Date].[Due Fiscal Date-Hierarchy].[FiscalYear].&[2010]) CoalesceEmpty Coalesces an empty cell value to a different value. All of the expressions must be of the same type (number or string).CoalesceEmpty([,...]) CoalesceEmpty(88) Correlation Returns the correlation of two series evaluated over a set. : Correlation(, ) : Correlation(, , ) Example 1：Correlation({[Customer].[Education].&[Bachelors],[Customer].[Education].&[High School]},[Measures].[Count])Example 2：Correlation({[Customer].[Education].&[Bachelors],[Customer].[Education].&[High School]},[Measures].[SalesAmout],[Measures].[Count]) Cos Returns a Double specifying the cosine of an angle. : Cos() Cos(60*Pi()/180) Cosh Returns the hyperbolic cosine of a number. : Cosh() Cosh(4) Count Returns the number of tuples in a set, empty cells included unless the optional EXCLUDEEMPTY flag is used. : Count() : Count(, ) Example 1：Count({[Product].[Color].[Color].members})Example 2：Count({[Product].[Color].[Color].members},EXCLUDEEMPTY) Count Returns the number of tuples in a set including empty cells. : .Count [Product].[Class].[Class].members.Count Covariance Returns the covariance of two series evaluated over a set (biased). : Covariance(, ) : Covariance(, , ) Example 1：Covariance([Product].[Class].[Class].Members, [Measures].[Product Standard Cost])Example 2：Covariance([Product].[Class].[Class].Members, [Measures].[Product Standard Cost], [Measures].[Freight]) CovarianceN Returns the covariance of two series evaluated over a set (unbiased). : CovarianceN(, ) : CovarianceN(, , ) Example 1：Covariancen([Product].[Class].[Class].Members, [Measures].[Product Standard Cost]) Example 2：Covariancen([Product].[Class].[Class].Members, [Measures].[Product Standard Cost], [Measures].[Freight]) Crossjoin Returns the cross product of two sets. : Crossjoin(, ) Crossjoin([Product].[Color].[Color].members,[Product].[Size].[Size].members) CurrentDateMember Returns the exact member within the specified dimension corresponding to the current date, in the format specified by the format parameter. If there is no such date, returns the NULL member. Format strings are the same as used by the MDX Format function, namely the Visual Basic format strings. : CurrentDateMember(, )CurrentDateMember([Date].[Calendar-Hierarchy],'yyyymmdd') CurrentDateMember Returns the closest or exact member within the specified dimension corresponding to the current date, in the format specified by the format parameter. Format strings are the same as used by the MDX Format function, namely the Visual Basic format strings. : CurrentDateMember(, , )CurrentDateMember([Date].[Order Fiscal Date-Hierarchy],\"20050402\",BEFORE) CurrentDateString Returns the current date formatted as specified by the format parameter. : CurrentDateString() CurrentDateString('yyyymmdd') CurrentMember Returns the current member along a dimension during an iteration. : .CurrentMember [Product].[Class].CurrentMember CurrentMember Returns the current member along a hierarchy during an iteration. : .CurrentMember [Date].[Order Fiscal Date-Hierarchy].CurrentMember DDB Returns a Double specifying the depreciation of an asset for a specific time period using the double-declining balance method or some other method you specify. : DDB(, , , , )Parameter1:The initial cost of the asset.Parameter2:The value at the end of the depreciation. This value can be 0.Parameter3:The number of periods over which the asset is being depreciated Parameter4:The period for which you want to calculate the depreciation. Period must use the same units as life.Parameter5:The rate at which the balance declines. If factor is omitted, it is assumed to be 2 (the double-declining balance method). Example 1：DDB(24000,3000,10,2)Example 2：DDB(24000,3000,10,2,1.5) DataMember Returns the system-generated data member that is associated with a nonleaf member of a dimension. : .DataMember [Customer].[CustomerKey].&[11001].DataMember Date Returns a Variant (Date) containing the current system date. : Date() Date() DateAdd Returns a Variant (Date) containing a date to which a specified time interval has been added. : DateAdd(, , ) Example 1：DateAdd(\"h\",1,date())Example 2：DateAdd(\"h\",1,[DUEDATE].[DateKey].&[2011-11-23]) DateDiff Returns a Variant (Long) specifying the number of time intervals between two specified dates. : DateDiff(, , , , )String Type：yyyy,q,m,y,d,ww,w,hh,n,s,ms,mcs,nsParameter4:A constant that specifies the first day of the week. If not specified, Sunday is assumed.Parameter5:A constant that specifies the first week of the year. If not specified, the first week is assumed to be the week in which January 1 occurs. Example 1：DateDiff(\"yyyy\",Date(),Date())Example 2：DateDiff(\"yyyy\",[Date].[DateKey].&[2011-11-23],[Date].[DateKey].&[2012-11-24])Example 3：DateDiff(\"yyyy\",Date(),Date(),1)Example 4：DateDiff(\"yyyy\",Date(),Date(),1,1) DatePart Returns a Variant (Integer) containing the specified part of a given date. : DatePart(, , , )Parameter3:A constant that specifies the first day of the week. If not specified, Sunday is assumed.Parameter4:A constant that specifies the first week of the year. If not specified, the first week is assumed to be the week in which January 1 occurs. Example 1：DatePart(\"yyyy\",[Date].[DateKey].&[2011-11-23])Example 2：DatePart(\"yyyy\",[Date].[DateKey].&[2011-11-23],1)Example 3：DatePart(\"yyyy\",[Date].[DateKey].&[2011-11-23],1,1) DateSerial Returns a Variant (Date) for a specified year, month, and day. : DateSerial(, , ) DateSerial(2020,3,5) DateValue Returns a Variant (Date). : DateValue() DateValue(CDate('2020-08-27')) Day Returns a Variant (Integer) specifying a whole number between 1 and 31, inclusive, representing the day of the month. : Day() Day(CDate('2010-09-23')) DefaultMember Returns the default member of an object. : .DefaultMember: .DefaultMember Example 1：[Product].[Class].DefaultMemberExample 2：[Date].[Order Fiscal Date-Hierarchy].DefaultMember Degrees Converts radians to degrees. : Degrees() Degrees(0.5*Pi()) Descendants Returns the set of descendants of a member at a specified level,optionally including or excluding descendants in other levels. : Descendants() : Descendants(, ) : Descendants(, ,) : Descendants(, ) : Descendants(, , ) : Descendants(, , ) Example 1：Descendants([Date].[Due Calendar Date-Hierarchy].[CalendarYear].&[2010])Example 2：Descendants([Date].[Due Calendar Date-Hierarchy].[CalendarYear].&[2010], [Date].[Due Calendar Date-Hierarchy].[DateKey])Example 3：Descendants([Date].[Due Calendar Date-Hierarchy].[CalendarYear].&[2010],[Date].[Due Calendar Date-Hierarchy].[CalendarYear],SELF) Dimension Returns the dimension that contains a specified object. : .Dimension: .Dimension: .Dimension: .Dimension Example 1：[Date].[CalendarYear].[CalendarYear].DimensionExample 2：[Date].[Due Calendar Date-Hierarchy].DimensionExample 3：[Date].[Due Fiscal Date-Hierarchy].[FiscalYear].DimensionExample 4：[Date].[CalendarYear].&[2010].Dimension Dimensions Returns the dimension whose zero-based position within the cube is specified by a numeric expression. : Dimensions() Dimensions(2) Dimensions Returns the dimension whose name is specified by a string. : Dimensions() Dimensions('[Customer].[AddressLine]') Distinct Eliminates duplicate tuples from a set. : Distinct() Distinct({[Date].[FiscalYear].&[2005],[Date].[FiscalYear].&[2005],[Date].[FiscalYear].&[2006]}) DrilldownLevel Drills down the members of a set, at a specified level, to one level below. Alternatively, drills down on a specified dimension in the set.According to the multi-level hierarchical data structure,you can explicitly choose a level at which to drill down. There are two mutually exclusive ways to specify the level. The first approach is to set the level_expression argument using an MDX expression that returns the level, An alternative approach is to specify the index argument, using a numeric expression that specifies the level by number. : DrilldownLevel() : DrilldownLevel(, ) : DrilldownLevel(, , ): DrilldownLevel(): DrilldownLevel(, ): DrilldownLevel(, , )Expression2:Set Level_expressionExpression3:Set Index Example 1：DrillDownLevel([Date].[Due Calendar Date-Hierarchy].[CalendarQuarter].Members)Example 2：DrilldownLevel([Date].[Due Calendar Date-Hierarchy].[CalendarQuarter].Members,[Date].[Due Calendar Date-Hierarchy].[EnglishMonthName])Example 3：DrilldownLevel([Date].[Due Calendar Date-Hierarchy].[CalendarYear].Members,,1) DrilldownMember Drills down the members in a set that are present in a second specified set.If RECURSIVE is specified, the function continues to recursively compare the members of the result set against the second set, retrieving the children for each member in the result set that is also present in the second set until no more members from the result set can be found in the second set. : DrilldownMember(, ) DrilldownMember(, , )Symbol Type：RECURSIVE Example 1：DrillDownMember([Date].[Due Fiscal Date-Hierarchy].Members,[Date].[Due Calendar Date-Hierarchy].Members)Example 2：DrilldownMember([Date].[Due Fiscal Date-Hierarchy].Members,[Date].[Due Calendar Date-Hierarchy].Members,RECURSIVE) Except Finds the difference between two sets, optionally retaining duplicates.If ALL is specified, the function retains duplicates found in the first set; duplicates found in the second set will still be removed. The members are returned in the order they appear in the first set. : Except(, ) : Except(, , )Symbol Type：ALL Except({[Date].[CalendarYear].&[2005],[Date].[CalendarYear].&[2006]},{[Date].[CalendarYear].&[2005]}) Exclude Restrict the level of detail of a measure,For example, the expression is Exclude( [Product], [Measures].[Qty] ), which means that the calculation of [Measures].[Qty] will not be affected by the filter conditions of the dimensions in the dimension table [Product]. : Exclude( [ | , ...] )Exclude([Date].[DueFiscalDate-Hierarchy],[Measures].[Count]) Exists Returns the the set of tuples of the first set that exist with one or more tuples of the second set. : Exists(, ) Exists({[Customer].[Education].&[Bachelors]},{[Customer].[Education].&[Bachelors],[Customer].[Education].&[High School]}) Exp Returns a Double specifying e (the base of natural logarithms) raised to a power. Exp() [Measures].[Count]*exp(1) Extract Returns a set of tuples from extracted dimension elements. The opposite of Crossjoin. : Extract(, [, ...]) Extract( [Customer].[Education].[Education].Members * {[Date].[CalendarYear].&[2011],[Date].[CalendarYear].&[2013]}, [Customer].[Education] ) FV Returns a Double specifying the future value of an annuity based on periodic, fixed payments and a fixed interest rate. : FV(, , , , )Parameter1:The interest rate per period.Parameter2:The total number of payment periods in an annuity.Parameter3:The payment made each period; it cannot change over the life of the annuity. Typically, pmt contains principal and interest but no other fees or taxes. If pmt is omitted, you must include the pv argument. Example 1：FV(0.12,4,10000)Example 2：FV(0.01,48,1000,1)Example 3：FV(0.01,48,1000,1,1) Filter Returns the set resulting from filtering a set based on a search condition. : Filter(,) Filter([Customer].[CustomerKey].[CustomerKey].Members,[Measures].[Count]>6) FirstChild Returns the first child of a member. : .FirstChild [Date].[Due Calendar Date-Hierarchy].[CalendarYear].&[2013].FirstChild FirstQ Returns the 1st quartile value of a numeric expression evaluated over a set. : FirstQ() : FirstQ(, ) FirstQ([Date].[CalendarYear].[CalendarYear].Members,[Measures].[SalesAmout]) FirstSibling Returns the first child of the parent of a member. : .FirstSibling [Date].[CalendarYear].&[2009].FirstSibling Fix Returns the integer portion of a number. If negative, returns the negative number greater than or equal to the number. : Fix() [Measures].[Count]*fix(1.3) Fixed Restrict the level of detail of a measure,For example, the expression is Fixed( [Product], [Measures].[Qty] ), which means that the calculation of [Measures].[Qty] will not be affected by the filter conditions of the dimensions in the dimension table [Product]. : Fixed( [ | , ...] ) Fixed([Product].[Class].[Class],[Measures].[Count]) Format Formats a number or date to a string. : Format(, ) : Format(, ) : Format(, ) format([Measures].[ Count],\"#,##0.00\") FormatCurrency Returns an expression formatted as a currency value using the currency symbol defined in the system control panel. : FormatCurrency(, , , , )Parameter1:Expression to be formatted.Parameter2:Numeric value indicating how many places to the right of the decimal are displayed. Default value is –1Parameter3:Tristate constant that indicates whether or not a leading zero is displayed for fractional values. See Settings section for values.Parameter4:Tristate constant that indicates whether or not to place negative values within parentheses. See Settings section for values.Parameter5:Tristate constant that indicates whether or not numbers are grouped using the group delimiter specified in the computer's regional settings. See Settings section for values.-2 = TristateUseDefault - Use the setting from the computer's regional settings.-1 = TristateTrue - True0 = TristateFalse - False Example 1：FormatCurrency([Measures].[Unitprice])Example 2：FormatCurrency([Measures].[Unitprice],2)Example 3：FormatCurrency([Measures].[Unitprice],2,-1)Example 4：FormatCurrency([Measures].[Unitprice],2,-1,-2)Example 5：FormatCurrency([Measures].[Unitprice],2,-1,-2,-1) FormatDateTime Returns an expression formatted as a date or time. : FormatDateTime(, ) Example 1：FormatDateTime(Date())Example 2：FormatDateTime(Date(),2) FormatNumber Returns an expression formatted as a number. : FormatNumber(, , , , )Parameter1:Expression to be formatted.Parameter2:Numeric value indicating how many places to the right of the decimal are displayed. Default value is –1Parameter3:Tristate constant that indicates whether or not a leading zero is displayed for fractional values. See Settings section for values.Parameter4:Tristate constant that indicates whether or not to place negative values within parentheses. See Settings section for values.Parameter5:Tristate constant that indicates whether or not numbers are grouped using the group delimiter specified in the computer's regional settings. See Settings section for values.-2 = TristateUseDefault - Use the setting from the computer's regional settings.-1 = TristateTrue - True0 = TristateFalse - False Example 1：FormatNumber([Measures].[Freight])Example 2：FormatNumber([Measures].[Freight],2)Example 3：FormatNumber([Measures].[Unitprice],2,-1)Example 4：FormatNumber([Measures].[Unitprice],2,-1,-2)Example 5：FormatNumber([Measures].[Unitprice],2,-1,-2,-1) FormatPercent Returns an expression formatted as a percentage (multipled by 100) with a trailing % character. : FormatPercent(, , , , )Parameter1:Expression to be formatted.Parameter2:Numeric value indicating how many places to the right of the decimal are displayed. Default value is –1Parameter3:Tristate constant that indicates whether or not a leading zero is displayed for fractional values. See Settings section for values.Parameter4:Tristate constant that indicates whether or not to place negative values within parentheses. See Settings section for values.Parameter5:Tristate constant that indicates whether or not numbers are grouped using the group delimiter specified in the computer's regional settings. See Settings section for values.-2 = TristateUseDefault - Use the setting from the computer's regional settings.-1 = TristateTrue - True0 = TristateFalse - False Example 1：FormatPercent([Measures].[Count]/60398)Example 2：FormatPercent([Measures].[Count]/60398,2)Example 3：FormatPercent([Measures].[Count]/61000,2,-1)Example 4：FormatPercent([Measures].[Count]/61000,2,-1,-2)Example 5：FormatPercent([Measures].[Count]/61000,2,-1,-2,-1) Generate Applies a set to each member of another set and joins the resulting sets by union.If ALL is specified, the function retains duplicates in the resulting set. : Generate(, ): Generate(, , )Symbol Type：ALL Generate( [Date].[CalendarYear].[CalendarYear].Members , TopCount( [Date].[CalendarYear].CurrentMember * [Product].[ProductLine].[ProductLine].Members ,3, [Measures].[SalesAmout)) Generate Applies a set to a string expression and joins resulting sets by string concatenation. : Generate(, ): Generate(, , ) Example 1：Generate([Date].[CalendarYear].[CalendarYear].Members,\"AND\") Example 2：Generate( [Date].[CalendarYear].[CalendarYear].Members, [Date].[CalendarYear].CurrentMember.Name,\"AND\") Head Returns the first specified number of elements in a set. : Head(): Head(, ) Example 1：Head([Customer].[CustomerKey].[CustomerKey].Members)Example 2：Head([Customer].[CustomerKey].[CustomerKey].Members,3) Hex Returns a String representing the hexadecimal value of a number. : Hex() Hex([Measures].[Count]) Hierarchize Orders the members of a set in a hierarchy.If POST is specified, the Hierarchize function sorts the members in a level using a post-natural order. In other words, child members precede their parents. : Hierarchize(): Hierarchize(, )Symbol Type：POST Hierarchize({[Customer].[Education].&[High School],[Customer].[Education].&[Bachelors]}) Hierarchy Returns an object's hierarchy. : .Hierarchy: .Hierarchy Example 1：[Date].[Due Fiscal Date-Hierarchy].[FiscalYear].HierarchyExample 2：[Date].[Due Fiscal Date-Hierarchy].[FiscalYear].&[2010].Hierarchy Hour Returns a Variant (Integer) specifying a whole number between 0 and 23, inclusive, representing the hour of the day. : Hour()Hour(Cdate('2020-08-12 09:30:45')) IIf Returns one of two objects determined by a logical test. : IIf(, , ): IIf(, , ): IIf(, , ): IIf(, , ): IIf(, , : IIf(, , ): IIf(, , ): IIf(, , ): IIf(, , ) Example 1：IIF([Measures].[Count]>80000, ([Customer].[Education].&[Bachelors].[Date].[CalendarYear].&[2011]), ([Customer].[Education].&[High School].[Date].[CalendarYear].&[2011]))Example 2：IIF([Measures].[Count]>80000,[Customer].[CustomerKey],[Customer].[FirstName])Example 3：IIF([Measures].[Count]>80000,[Date].[Due Fiscal Date-Hierarchy],[Customer].[person-Hierarchy])Example 4：IIF([Measures].[Count]>80000, [Date].[Due Fiscal Date-Hierarchy].[FISCALYEAR], [Date].[Due Fiscal Date-Hierarchy].[DateKey])Example 5：IIF([Measures].[Count]>80000,[Measures].[SalesAmout]10000)Example 6：IIF([Measures].[Count]>80000, [Customer].[Education].[Bachelors], [Customer].[Education].&[High School])Example 7：IIF([Measures].[Count]>80000,[Measures].[Unitprice]/3,[Measures].[Unitprice]/4)Example 8：IIF([Measures].[Count]>80000, {[Customer].[Education].&[Bachelors]}, {[Customer].[Education].&[Bachelors],[Customer].[Education].&[High School]})Example 9：IIF([Measures].[SalesAmout]>10000, \"Sales Are High\", \"Sales Are Low\") IPmt Returns a Double specifying the interest payment for a given period of an annuity based on periodic, fixed payments and a fixed interest rate. : IPmt(, , , , , )Parameter1:The interest rate per period.Parameter2:The period for which you want to find the interest .Parameter3:The total number of payment periods in an annuity.Parameter4:The present value.Parameter5:The future value.If fv is omitted, it is assumed to be 0 (the future value of a loan, for example, is 0).Parameter6:The number 0 or 1 and indicates when payments are due. If type is omitted, it is assumed to be 0. Example 1：IPmt(0.12,1,3,80000)Example 2：IPmt(0.01,1,36,80000,50000)Example 3：IPmt(0.01,1,36,80000,50000,1) IS Returns whether two objects are the same : IS : IS : IS : IS : IS Example 1：[Customer].[Education].&[Bachelors] IS [Customer].[Education].&[Bachelors]Example 2：[Date].[Due Fiscal Date-Hierarchy].[FiscalYear] IS [Date].[Due Fiscal Date-Hierarchy].[DateKey]Example 3：[Date].[Due Fiscal Date-Hierarchy] IS [Date].[Due Calendar Date-Hierarchy]Example 4：[Customer].[BirthDate] IS [Customer].[BirthDate]Example 5：([Customer].[BirthDate],[Customer].[AddressLine]) IS ([Customer].[BirthDate],[Customer].[AddressLine]) IS EMPTY Determines if an expression evaluates to the empty cell value. :IS EMPTY : IS EMPTY Example 1：[Customer].[Education].&[Primary School] Is EmptyExample 2：([Customer].[AddressLine],[Date].[CalendarQuarter]) IS EMPTY IS NULL Returns whether an object is null. Currently always returns FALSE, returns TRUE only if the given Member Key cannot be cast to the type of Level Key. : IS NULL : IS NULL : IS NULL : IS NULL Example 1：[Customer].[Education].&[Primary School] IS NULLExample 2：[Date].[Due Calendar Date-Hierarchy].[CalendarYear] IS NULLExample 3：[Customer].[person-Hierarchy] IS NULLExample 4：[Customer].[Education].[Education] IS NULL InStr Returns the position of the first occurrence of one string within another. Implements very basic form of InStr : InStr(, )InStr(\"kylingence\",\"e\") InStrRev Returns the position of an occurrence of one string within another, from the end of string. : InStrRev(, , , )Parameter1:The string expression to be searched.Parameter2:The string expression that is to be searched for.Parameter3:A numeric expression that sets the starting position for each search. If this value is omitted, the search begins at the first character position. If start is null, the function return value is undefined.Parameter4:An integer value. This argument is always ignored. It is defined for compatibility with other Instr functions in other languages. Example 1：InStrRev(\"kylingence\",\"e\")Example 2：InStrRev(\"kylingence\",\"e\",2)Example 3：InStrRev(\"kylingence\",\"e\",2,1) Int Returns the integer portion of a number. If negative, returns the negative number less than or equal to the number. : Int() Int(1.3) Intersect Returns the intersection of two input sets, optionally retaining duplicates.The optional ALL flag keeps duplicates. The two specified sets must have the same dimensions : Intersect(, , ): Intersect(, )Symbol:ALL Example 1：Intersect({[Customer].[Education].&[Bachelors],[Customer].[Education].&[High School]}, {[Customer].[Education].&[Bachelors]},All)Example 2：Intersect({[Customer].[Education].&[Bachelors],[Customer].[Education].&[High School]}, {[Customer].[Education].&[Bachelors]}) IsDate Returns a Boolean value indicating whether an expression can be converted to a date. : IsDate() IsDate(Date()) IsEmpty Determines if an expression evaluates to the empty cell value. : IsEmpty(): IsEmpty() Example 1：IsEmpty(\"\")Example 2：IsEmpty(2) Item Returns a member from the tuple specified in . The member to be returned is specified by the zero-based position of the member in the set in . : .Item() ([Customer].[Education].&[Bachelors],[Date].[CalendarYear].&[2010]).Item(0) Item Returns a tuple from the set specified in . The tuple to be returned is specified by the zero-based position of the tuple in the set in . : .Item(){[Customer].[BirthDate].[BirthDate].Members}.Item(1) Item Returns a tuple from the set specified in . The tuple to be returned is specified by the member name (or names) in . .Item([, ...]) {[Customer].[Education].[Education].Members}.Item(\"Bachelors\") LCase Returns a String that has been converted to lowercase. : LCase() LCase(\"KYLINGENCE\") LTrim Returns a Variant (String) containing a copy of a specified string without leading spaces. : LTrim() LTrim(\" kylin gence \") Lag Returns a member further along the specified member's dimension. : .Lag() [Customer].[Education].[High School].Lag(1) LastChild Returns the last child of a member. : .LastChild [Date].[Due Calendar Date-Hierarchy].[CalendarYear].&[2013].LastChild LastSibling Returns the last child of the parent of a member. : .LastSibling [Date].[CalendarYear].&[2010].LastSibling Lead Returns a member further along the specified member's dimension. : .Lead() [Customer].[Education].&[High School].Lead(1) Left Returns a specified number of characters from the left side of a string. : Left(, ) Left(\"kylingence\",2) Len Returns the number of characters in a string. : Len()Len(\"kylingence\") Level Returns a member's level. : .Level [Date].[Due Fiscal Date-Hierarchy].[FiscalYear].&[2010].Level Levels Returns the level whose position in a hierarchy is specified by a numeric expression. : .Levels()[Date].[Due Fiscal Date-Hierarchy].levels(1) Levels Returns the level whose name is specified by a string expression. : .Levels(): Levels() Example 1：[Date].[Due Fiscal Date-Hierarchy].Levels(\"DateKey\")Example 2：Levels('[Customer].[person-Hierarchy].[Education]') LinRegIntercept Calculates the linear regression of a set and returns the value of b in the regression line y = ax + b. : LinRegIntercept(, ): LinRegIntercept(, , )Parameter1:A valid Multidimensional Expressions (MDX) expression that returns a set.Parameter2:A valid numeric expression that is typically a Multidimensional Expressions (MDX) expression of cell coordinates that return a number that represents values for the y-axis.Parameter3:A valid numeric expression that is typically a Multidimensional Expressions (MDX) expression of cell coordinates that return a number that represents values for the x-axis. LinRegIntercept(LastPeriods(3,[Date].[CalendarYear].&[2014]),[Measures].[InternetSales Count],[Measures].[Reseller Count]) LinRegPoint Calculates the linear regression of a set and returns the value of y in the regression line y = ax + b. : LinRegPoint(, , ): LinRegPoint(, , , )Parameter1:A valid numeric expression that is typically a Multidimensional Expressions (MDX) expression of cell coordinates that return a number that represents values for the slicer axis.Parameter2:A valid Multidimensional Expressions (MDX) expression that returns a set.Parameter3:A valid numeric expression that is typically a Multidimensional Expressions (MDX) expression of cell coordinates that return a number that represents values for the y-axis.Parameter4:A valid numeric expression that is typically a Multidimensional Expressions (MDX) expression of cell coordinates that return a number that represents values for the x-axis. LinRegPoint([Measures].[Count],LastPeriods(3,[Date].[CalendarYear].&[2014]),[Measures].[InternetSales Count],[Measures].[Reseller Count]) LinRegR2 Calculates the linear regression of a set and returns R2 (the coefficient of determination). : LinRegR2(, ): LinRegR2(, , )Parameter1:A valid Multidimensional Expressions (MDX) expression that returns a set.Parameter2:A valid numeric expression that is typically a Multidimensional Expressions (MDX) expression of cell coordinates that return a number that represents values for the y-axis.Parameter3:A valid numeric expression that is typically a Multidimensional Expressions (MDX) expression of cell coordinates that return a number that represents values for the x-axis. LinRegR2(LastPeriods(3,[Date].[CalendarYear].&[2014]),[Measures].[InternetSales Count],[Measures].[Reseller Count]) LinRegSlope Calculates the linear regression of a set and returns the value of a in the regression line y = ax + b. : LinRegSlope(, ): LinRegSlope(, , )Parameter1:A valid Multidimensional Expressions (MDX) expression that returns a set.Parameter2:A valid numeric expression that is typically a Multidimensional Expressions (MDX) expression of cell coordinates that return a number that represents values for the y-axis.Parameter3:A valid numeric expression that is typically a Multidimensional Expressions (MDX) expression of cell coordinates that return a number that represents values for the x-axis. LinRegSlope(LastPeriods(3,[Date].[CalendarYear].&[2014]),[Measures].[InternetSales Count],[Measures].[Reseller Count]) LinRegVariance Calculates the linear regression of a set and returns the variance associated with the regression line y = ax + b. : LinRegVariance(, ): LinRegVariance(, , )Parameter1:A valid Multidimensional Expressions (MDX) expression that returns a set.Parameter2:A valid numeric expression that is typically a Multidimensional Expressions (MDX) expression of cell coordinates that return a number that represents values for the y-axis.Parameter3:A valid numeric expression that is typically a Multidimensional Expressions (MDX) expression of cell coordinates that return a number that represents values for the x-axis. LinRegVariance(LastPeriods(3,[Date].[CalendarYear].&[2014]),[Measures].[InternetSales Count],[Measures].[Reseller Count]) Log Returns a Double specifying the natural logarithm of a number. : Log() Log(Exp(2)) Log10 Returns the base-10 logarithm of a number. : Log10() Log10(100) Max Returns the maximum value of a numeric expression evaluated over a set. : Max(): Max(, ) Example 1：max({[Date].[CalendarYear].[CalendarYear].Members})Example 2：max({[Date].[CalendarYear].[CalendarYear].Members},[Measures].[Count]) Median Returns the median value of a numeric expression evaluated over a set. Median(): Median(, ) Example 1：Median({[Date].[CalendarYear].[CalendarYear].Members})Example 2：Median({[Date].[CalendarYear].[CalendarYear].Members},[Measures].[Count]) Members Returns the set of members in an object. : .Members: .Members: .Members Example 1：[Date].[CalendarYear].[CalendarYear].MembersExample 2：[Customer].[person-Hierarchy].MembersExample 3：[Date].[Due Fiscal Date-Hierarchy].[FiscalYear].Members Mid Returns a specified number of characters from a string. : Mid(, , )Parameter1:string expression from which characters are returned.Parameter2:Character position in string at which the part to be taken begins. If start is greater than the number of characters in string, Mid returns a zero-length string (\"\").Parameter3:Number of characters to return. If omitted or if there are fewer than length characters in the text (including the character at start, all characters from the start position to the end of the string are returned. Example 1：Mid(\"kylingence\",3)Example 2：Mid(\"kylingence\",2,4) Min Returns the minimum value of a numeric expression evaluated over a set. : Min(): Min(,) min([Date].[CalendarYear].[CalendarYear].Members,[Measures].[Count]) Minute Returns a Variant (Integer) specifying a whole number between 0 and 59, inclusive, representing the minute of the hour. : Minute() Minute(CDate('2019-05-23 20:49:28')) Month Returns a Variant (Integer) specifying a whole number between 1 and 12, inclusive, representing the month of the year. : Month() Month(CDate('2012-03-24 18:39:28')) Mtd A shortcut function for the PeriodsToDate function that specifies the level to be Month.: Mtd() : Mtd() MTD([Date].[Calendar-Hierarchy].currentmember) NOT Returns the negation of a condition. : NOT NOT [Measures].[Count]>80000 Name Returns the name of an object. : .Name: .Name: .Name: .Name Example 1：[Customer].[Education].[Education].NameExample 2：[Customer].[person-Hierarchy].nameExample 3：[Date].[Due Fiscal Date-Hierarchy].[FiscalYear].nameExample 4：[Date].[Due Fiscal Date-Hierarchy].[FiscalYear].[2010].name NextMember Returns the next member in the level that contains a specified member. : .NextMember [Customer].[Education].[High School].NextMember NonEmptyCrossJoin Returns the cross product of two sets, excluding empty tuples and tuples without associated fact table data. : NonEmptyCrossJoin(, ) NonEmptyCrossJoin([Customer].[LastName].[LastName].Members, [Customer].[GENDER].[GENDER].Members) Now Returns a Variant (Date) specifying the current date and time according your computer's system date and time. : Now() Now() OR Returns the disjunction of two conditions. : OR [Measures].[Count]>80000 OR [Measures].[SalesAmout]>30000000 Oct Returns a Variant (String) representing the octal value of a number. : Oct() Oct([Measures].[Count]) OpeningPeriod Returns the first descendant of a member at a level. : OpeningPeriod() OpeningPeriod(): OpeningPeriod(,) Example 1：OpeningPeriod([Date].[Due Fiscal Date-Hierarchy].[FiscalYear])Example 2：OpeningPeriod([Date].[Due Fiscal Date-Hierarchy].[FiscalYear],[Date].[Due Fiscal Date-Hierarchy].[FiscalYear].&[2010])Example 3：[Date].[Due Fiscal Date-Hierarchy].[FiscalYear].openingperiod Order Arranges members of a set, optionally preserving or breaking the hierarchy.If ASC or DESC is specified, the Order function first arranges the members according to their position in the hierarchy, and then orders each level. If BASC or BDESC is specified, the Order function arranges members in the set without regard to the hierarchy. In no flag is specified, ASC is the default. : Order(, , ): Order(, ) Example 1：Order([Date].[CalendarYear].[CalendarYear].members, [Measures].[Count], DESC) Example 2：Order([Date].[Due Calendar Date-Hierarchy].[CalendarYear].members, [Measures].[Count]) Ordinal Returns the zero-based ordinal value associated with a level. : .Ordinal [Date].[CalendarYear].[CalendarYear].Ordinal PPmt Returns a Double specifying the principal payment for a given period of an annuity based on periodic, fixed payments and a fixed interest rate. : PPmt(, ,, , ,)Parameter1:The interest rate per period.Parameter2:Specifies the period and must be in the range 1 to nper.Parameter3:The total number of payment periods in an annuity.Parameter4:The present value — the total amount that a series of future payments is worth now.Parameter6:The number 0 or 1 and indicates when payments are due. If type is omitted, it is assumed to be 0. Example 1：PPmt(0.1, 1, 30, 100000)Example 2：PPmt(0.1, 15, 30, 100000, 0)Example 3：PPmt(0.1, 1, 30, 100000, 0, CBool(0)) PV Returns a Double specifying the present value of an annuity based on periodic, fixed payments to be paid in the future and a fixed interest rate. : PV(, , , , ) PV(0,3,2,7,CBool(1)) ParallelPeriod Returns a member from a prior period in the same relative position as a specified member. : ParallelPeriod(): ParallelPeriod(): ParallelPeriod(, ): ParallelPeriod(, ,) Example 1：ParallelPeriod([Date].[Calendar-Hierarchy].[CalendarYear])Example 2：ParallelPeriod([Date].[Calendar-Hierarchy].[CalendarQuarter], 1)Example 3：ParallelPeriod([Date].[Calendar-Hierarchy].[CalendarYear],1,[Date].[Calendar-Hierarchy].currentMember Parameter Returns default value of parameter. : Parameter(, , , ) : Parameter(, , ) : Parameter(, , , ) : Parameter(, , ) : Parameter(, , , ) : Parameter(, ,) Parent Returns the parent of a member. : .Parent [Date].[Due Fiscal Date-Hierarchy].[FiscalYear].&[2013].&[1].&[1].Parent Percentile Returns the value of the tuple that is at a given percentile of a set. : Percentile(, , )Parameter1:The array or range of data that defines relative standing.Parameter2:The Value of the query.Parameter3:The percentile value in the range 0..1, inclusive. Percentile([Date].[CalendarQuarter].[CalendarQuarter].members, [Measures].[Count], 1) PeriodsToDate Returns a set of periods (members) from a specified level starting with the first period and ending with a specified member. : PeriodsToDate(): PeriodsToDate(): PeriodsToDate(, ) Example 1：PeriodsToDate([Date].[Calendar-Hierarchy].[CalendarQuarter])Example 2：PeriodsToDate([Date].[Calendar-Hierarchy].[CalendarYear],[Date].[Calendar-Hierarchy].[MONTHNUMBEROFYEAR].&[34]) Pi Returns the number 3.14159265358979, the mathematical constant pi, accurate to 15 digits. : Pi() Pi() Pmt Returns a Double specifying the payment for an annuity based on periodic, fixed payments and a fixed interest rate. : Pmt(, ,, , ): Pmt(, ,, , )Parameter1:The interest rate for the loan.Parameter2:The total number of payments for the loan.Parameter3:The present value, or the total amount that a series of future payments is worth now; also known as the principal.Parameter4:The future value, or a cash balance you want to attain after the last payment is made. If fv is omitted, it is assumed to be 0 (zero), that is, the future value of a loan is 0.Parameter5:The number 0 (zero) or 1 and indicates when payments are due. Pmt(0, 3, 2, 7, CBool(1)) Power Returns the result of a number raised to a power. : Power(, ) Power(4, 0.5) PrevMember Returns the previous member in the level that contains a specified member. : .PrevMember [Date].[CalendarYear].&[2012].PrevMember Properties Returns the value of a member property. .Properties() [Date].[CalendarYear].[CalendarYear].&[2007].Properties('Caption') Qtd A shortcut function for the PeriodsToDate function that specifies the level to be Quarter.: Qtd() : Qtd() QTD([Date].[Calendar-Hierarchy].currentmember) RTrim Returns a Variant (String) containing a copy of a specified string without trailing spaces. : RTrim() RTrim('abc ') Radians Converts degrees to radians. : Radians() Radians(180) Rank Returns the one-based rank of a tuple in a set. : Rank(, ): Rank(, , ): Rank(, ) Rank(, , ) Example 1：Rank(([Date].[CalendarYear].&[2007],[Customer].[LastName].&[Adams]), [Date].[CalendarYear].[CalendarYear].members* [Customer].[LastName].[LastName].members)Example 2：Rank(([Date].[CalendarYear].&[2007],[Customer].[LastName].&[Adams]), [Date].[CalendarYear].[CalendarYear].members* [Customer].[LastName].[LastName].members, [Measures].[Count])Example 3：Rank([Date].[CalendarYear].&[2007], [Date].[CalendarYear].[CalendarYear].members)Example 4：Rank([Date].[CalendarYear].&[2007], [Date].[CalendarYear].[CalendarYear].members, [Measures].[Count]) Rate Returns a Double specifying the interest rate per period for an annuity. : Rate(, , , , , )Parameter1:The total number of payment periods in an annuity.Parameter2:The payment made each period and cannot change over the life of the annuity. Parameter3:The present value — the total amount that a series of future payments is worth now.Parameter4:The future value, or a cash balance you want to attain after the last payment is made.Parameter5:The number 0 or 1 and indicates when payments are due.Parameter6:Your guess for what the rate will be. Example 1：Rate(12, 500, 3000)Example 2：Rate(12, 500, 3000, 300000)Example 3：Rate(12, 500, 3000, 300000, CBool(0))Example 4：Rate(12, 500, 3000, 300000, CBool(0), 1) Replace Returns a string in which a specified substring has been replaced with another substring a specified number of times. : Replace(, , , , , )Parameter1:Meta String.Parameter2:Searched substring.Parameter3:Replaced substring.Parameter4:The search start position, if omitted, it is assumed to be 1.Parameter5:The number of substring replacements to be performed. If omitted, it is assumed to be -1, which means that all replacements are performed.Parameter6:The comparison type when calculating substrings. Replace('kylingence', gence', 'mdx', 1, 1, 1) Right Returns a Variant (String) containing a specified number of characters from the right side of a string. : Right(, ) Right('kylingence', 2) Round Returns a number rounded to a specified number of decimal places. : Round(, ): Round() Example 1：Round(1.123)Example 2：Round(1.123, 2) SLN Returns a Double specifying the straight-line depreciation of an asset for a single period. : SLN(, ,)Parameter1:The initial cost of the asset.Parameter2:The value at the end of the depreciation (sometimes called the salvage value of the asset).Parameter3:The number of periods over which the asset is depreciated (sometimes called the useful life of the asset). SLN(100, 10, 5) SYD Returns a Double specifying the sum-of-years' digits depreciation of an asset for a specified period. : SYD(, , , )Parameter1:The initial cost of the asset.Parameter2:The value at the end of the depreciation (sometimes called the salvage value of the asset).Parameter3:The number of periods over which the asset is depreciated (sometimes called the useful life of the asset).Parameter4:The period and must use the same units as life. SYD(1000, 100, 5, 5) Second Returns a Variant (Integer) specifying a whole number between 0 and 59, inclusive, representing the second of the minute. : Second()Second(CDate('2013-02-23 16:39:28')) SetToStr Constructs a string from a set. : SetToStr() SetToStr([Date].[CalendarYear].Children) Sgn Returns a Variant (Integer) indicating the sign of a number. : Sgn() Sgn(3.11111) Siblings Returns the siblings of a specified member, including the member itself. .Siblings [Date].[CalendarYear].[CalendarYear].&[2007].Siblings Sin Returns a Double specifying the sine of an angle. : Sin() Sin(60*Pi()/180) Sinh Returns the hyperbolic sine of a number. : Sinh()Sinh(-2) Space Returns a Variant (String) consisting of the specified number of spaces. : Space() \"kylingence\"||Space(3)||\"MDX\" Sqr Returns a Double specifying the square root of a number. : Sqr() Sqr(4) SqrtPi Returns the square root of (number * pi). : SqrtPi()SqrtPi(4) Stddev Alias for Stdev. : Stddev() Stddev(, ) Example 1：StdDev({[Date].[CalendarYear].&[2010],[Date].[CalendarYear].&[2011],[Date].[CalendarYear].&[2012]})Example 2：StdDev({[Date].[CalendarYear].&[2010],[Date].[CalendarYear].&[2011],[Date].[CalendarYear].&[2012]},[Measures].[Count]) StddevP Alias for StdevP. : StddevP()StddevP(,) Example 1：StddevP({[Date].[CalendarYear].&[2010],[Date].[CalendarYear].&[2011],[Date].[CalendarYear].&[2012]})Example 2：StddevP({[Date].[CalendarYear].&[2010],[Date].[CalendarYear].&[2011],[Date].[CalendarYear].&[2012]},[Measures].[Count]) Stdev Returns the standard deviation of a numeric expression evaluated over a set (unbiased). : Stdev() Stdev(, ) Example 1：Stdev({[Date].[CalendarYear].&[2010],[Date].[CalendarYear].&[2011],[Date].[CalendarYear].&[2012]})Example 2：Stdev({[Date].[CalendarYear].&[2010],[Date].[CalendarYear].&[2011],[Date].[CalendarYear].&[2012]},[Measures].[Count]) StdevP Returns the standard deviation of a numeric expression evaluated over a set (biased). : StdevP()StdevP(, ) Example 1：StdevP({[Date].[CalendarYear].&[2010],[Date].[CalendarYear].&[2011],[Date].[CalendarYear].&[2012]})Example 2：StdevP({[Date].[CalendarYear].&[2010],[Date].[CalendarYear].&[2011],[Date].[CalendarYear].&[2012]},[Measures].[Count]) Str Returns a Variant (String) representation of a number. : Str() Str(34) StrComp Returns a Variant (Integer) indicating the result of a string comparison. : StrComp(, , )Parameter3:Specifies the type of string comparison. If the compare argument is Null, an error occurs. If compare is omitted, the Option Compare setting determines the type of comparison. Example 1：StrComp(\"abcd\",\"ABCD\")Example 2：StrComp(\"abcd\",\"ABCD\",0)StrComp(\"abcde\",\"ABCD\",1) StrReverse Returns a string in which the character order of a specified string is reversed. : StrReverse() StrReverse(\"abcde\") StrToMember Returns a member from a unique name String in MDX format. : StrToMember() StrToMember('[Customer].[Education].&[Bachelors]') StrToSet Constructs a set from a string expression. : StrToSet([, ...])StrToSet(\"[Product].[Color].&[Red],[Product].[Color].&[Silver]\",[Product].[Color]) StrToTuple Constructs a tuple from a string. : StrToTuple() StrToTuple(\"([Product].[Color].&[Red],[Product].[Class].&[H ])\",[Product].[Color],[Product].[Class]) String : String(, ) String(3,\"h\") Subset Returns a subset of elements from a set. : Subset(, ) Subset(, , )Parameter1:A valid numeric expression that specifies the position of the first tuple to be returned.Parameter2:A valid numeric expression that specifies the number of tuples to be returned. Example 1：SubSet({[Date].[CalendarYear].&[2010],[Date].[CalendarYear].&[2011],[Date].[CalendarYear].&[2012]},2)Example 2：SubSet({[Date].[CalendarYear].&[2010], [Date].[CalendarYear].&[2011], [Date].[CalendarYear].&[2012]},1,3) Sum Returns the sum of a numeric expression evaluated over a set. : Sum() Sum(, ) Sum([Date].[DateKey].CurrentMember,[Measures].[Count]) Tail Returns a subset from the end of a set. : Tail(): Tail(, ) Example 1：Tail({[Date].[CalendarYear].&[2010], [Date].[CalendarYear].&[2011], [Date].[CalendarYear].&[2012], [Date].[CalendarYear].&[2013]})Example 2：Tail({[Date].[CalendarYear].&[2010], [Date].[CalendarYear].&[2011], [Date].[CalendarYear].&[2012], [Date].[CalendarYear].&[2013]},2) Tan Returns a Double specifying the tangent of an angle. : Tan() Tan(45*Pi()/180) Tanh Returns the hyperbolic tangent of a number. : Tanh() Tanh(-2) ThirdQ Returns the 3rd quartile value of a numeric expression evaluated over a set. : ThirdQ() ThirdQ(, ) Example 1：ThirdQ({[Date].[CalendarYear].&[2010],[Date].[CalendarYear].&[2011],[Date].[CalendarYear].&[2012]})Example 2：ThirdQ({[Date].[CalendarYear].&[2010], [Date].[CalendarYear].&[2011], [Date].[CalendarYear].&[2012], [Date].[CalendarYear].&[2013] },[Measures].[Count]) Time Returns a Variant (Date) indicating the current system time. : Time() Time() TimeSerial Returns a Variant (Date) containing the time for a specific hour,minute, and second. : TimeSerial(, , )Parameter1:Hour.Parameter2:MinuteParameter3:Second TimeSerial(16,34,17) TimeValue Returns a Variant (Date) containing the time. : TimeValue()TimeValue(CDate('2020-09-02 18:20')) Timer Returns a Single representing the number of seconds elapsed since midnight. : Timer() Timer() ToggleDrillState The ToggleDrillState function toggles the drill state of each member of the second set that is present in the first set. The first set can contain tuples with any dimensionality, but the second set must contain members of a single dimension. The ToggleDrillState function is a combination of the DrillupMember and DrilldownMember functions. If the member, m, of the second set is present in the first set, and that member is drilled down (that is, has a descendant immediately following it), then DrillupMember(Set_Expression1, {m}) is applied to the member or tuple in the first set. : ToggleDrillState(, ) ToggleDrillState(, , ) Example 1：ToggleDrillState({[Customer].[Education].[Education].Members},{[Customer].[Education].&[Bachelors],[Customer].[Education].&[High School]}) TopCount Returns a specified number of items from the top of a set, optionally ordering the set first. : TopCount(, , ): TopCount(, ) Example 1：TopCount({[Customer].[Education].[Education].Members},3,[Measures].[Count])Example 2：TopCount({[Customer].[Education].[Education].Members},3) TopPercent Sorts a set and returns the top N elements whose cumulative total is at least a specified percentage. : TopPercent(, , ) TopPercent({[Product].[Color].[Color].Members},60,[Measures].[Count]) TopSum Sorts a set and returns the top N elements whose cumulative total is at least a specified value. : TopSum(, , ) TopSum({[Customer].[Education].[Education].Members},30000,[Measures].[Count]) Trim Returns a Variant (String) containing a copy of a specified string without leading and trailing spaces. : Trim() Trim(\" delete space \") TupleToStr Constructs a string from a tuple. : TupleToStr() TupleToStr(([Customer].[Education].&[Bachelors],[Date].[CalendarYear].&[2011])) TypeName Returns a String that provides information about a variable. : TypeName() TypeName(2) UCase Returns a string that has been converted to uppercase. : UCase() ucase(\"Kylingence\") Union Returns the union of two sets, optionally retaining duplicates,using the ALL flag keeps duplicates in the joined set. : Union(, ): Union(, , )Symbol:All Example 1：Union({[Date].[CalendarYear].&[2010],[Date].[CalendarYear].&[2013]},{[Date].[CalendarYear].&[2010],[Date].[CalendarYear].&[2012]})Example 2：Union({[Date].[CalendarYear].&[2010],[Date].[CalendarYear].&[2013]},{[Date].[CalendarYear].&[2010],[Date].[CalendarYear].&[2012]},All) UniqueName Returns the unique name. : .UniqueName: .UniqueName: .UniqueName: .UniqueName Example 1：[Customer].[Education].[Education].UniqueNameExample 2：[Customer].[person-Hierarchy].UniqueNameExample 3：[Customer].[person-Hierarchy].[Education].uniquenameExample 4：[Customer].[Education].&[Bachelors].UniqueName Unorder Removes any enforced ordering from a specified set. : Unorder() Unorder(order([Customer].[Education].[Education].Members,[Measures].[Count])) Val Returns the numbers contained in a string as a numeric value of appropriate type. : Val() Val(\"34\") ValidMeasure Returns a valid measure in a virtual cube by forcing inapplicable dimensions to their top level. : ValidMeasure()ValidMeasure(([Customer].[Education].&[Bachelors],[Date].[CalendarYear].&[2012])) Value Returns the value of a measure. .Value [Date].[CalendarYear].&[2010].Value Var Returns the variance of a numeric expression evaluated over a set (unbiased). : Var(): Var(, ) Example 1：Var({[Date].[CalendarYear].&[2010], [Date].[CalendarYear].&[2011], [Date].[CalendarYear].&[2012] })Example 2：Var({[Date].[CalendarYear].&[2010], [Date].[CalendarYear].&[2011], [Date].[CalendarYear].&[2012] },2) VarP Returns the variance of a numeric expression evaluated over a set (biased). : VarP(): VarP(, ) Example 1：VarP({[Date].[CalendarYear].&[2010], [Date].[CalendarYear].&[2011], [Date].[CalendarYear].&[2012] })Example 2：VarP({[Date].[CalendarYear].&[2010], [Date].[CalendarYear].&[2011], [Date].[CalendarYear].&[2012] },2) Variance Alias for Var. : Variance(): Variance(, ) Example 1：Variance({[Date].[CalendarYear].&[2010], [Date].[CalendarYear].&[2011], [Date].[CalendarYear].&[2012] })Example 2：Variance({[Date].[CalendarYear].&[2010], [Date].[CalendarYear].&[2011], [Date].[CalendarYear].&[2012] },3) VarianceP Alias for VarP. : VarianceP(): VarianceP(, ) Example 1：VarianceP({[Date].[CalendarYear].&[2010], [Date].[CalendarYear].&[2011], [Date].[CalendarYear].&[2012] })Example 2：VarianceP({[Date].[CalendarYear].&[2010], [Date].[CalendarYear].&[2011], [Date].[CalendarYear].&[2012] },3) VisualTotals Dynamically totals child members specified in a set using a pattern for the total label in the result set. : VisualTotals(): VisualTotals(, ) Example 1：VisualTotals({[Customer].[Education].&[Bachelors],[Customer].[Education].&[High School], [Customer].[Education].&[Partial High School]})Example 2：VisualTotals({[Customer].[Education].&[Bachelors],[Customer].[Education].&[High School], [Customer].[Education].&[Partial High School]},'* -Visualtotals') Weekday Returns a Variant (Integer) containing a whole number representing the day of the week. : Weekday(, ) Example 1：Weekday(Date())Example 2：Weekday(Date(),3) WeekdayName Returns a string indicating the specified day of the week. : WeekdayName(, , ) WeekdayName(3,[Measures].[Count] Wtd A shortcut function for the PeriodsToDate function that specifies the level to be Week.: Wtd(): Wtd() WTD([Date].[Calendar-Hierarchy].currentmember) XOR Returns whether two conditions are mutually exclusive. : XOR [Measures].[Count]>80000 Xor [Measures].[SalesAmout] Year Returns a Variant (Integer) containing a whole number representing the year. : Year() Year(CDate(\"2020-09-03\")) Ytd A shortcut function for the PeriodsToDate function that specifies the level to be Year.: Ytd(): Ytd() YTD([Date].[Calendar-Hierarchy].currentmember) _CaseMatch Evaluates various expressions, and returns the corresponding expression for the first which matches a particular value.。Case When Then [...] [Else ] EndCASE sum([Date].[DateKey].CurrentMember,[Measures].[Count]) WHEN 0 THEN 'NONE'WHEN 1 THEN 'SMALL'ELSE 'LARGE'END _CaseTest Evaluates various conditions, and returns the corresponding expression for the first which evaluates to true.Case When Then [...] [Else ] EndCASE WHEN [Measures].[Count]THEN 'TRUE'ELSE 'VERY LARGE'END || Concatenates two strings. : || 'kylin'||'gence' Powered by Gitbook.            Last Modified： 2022-03-20 16:37:32 "},"dataset/metadata_synchronization.en.html":{"url":"dataset/metadata_synchronization.en.html","title":"Metadata Synchronization","keywords":"","body":"Metadata Synchronization Metadata synchronization principle Metadata synchronization types Metadata synchronization frequency Metadata failure retrial mechanism Metadata synchronization principle Metadata synchronization is to get the relevant information from Kylin through HTTP call, and compare it with the existing metadata information in mdx. If there is any change, the metadata in mdx will be repaired according to the change of Kylin. Metadata synchronization types Metadata synchronization information includes the following types: User list synchronization User group list synchronization Cube list synchronization Project list synchronization Segment list synchronization Cube metadata list synchronization Metadata synchronization frequency For the above metadata types, the changes of items No.1 to No.4 are less difficult, more frequent and less expensive for users. They can be synchronized every 20 seconds and cannot be changed. The synchronization frequency of item No.5 and No.6 are low. The default value is 300 seconds, that is, 5 minutes synchronization. The benchmark value is 20 seconds. The default configuration value is 15, that is 15 times of 20 seconds, which means 300 seconds. The configuration items are as follows: insight.dataset.verify.interval.count=15 Note ： When the synchronization task is massive, it may take longer than the configuration defined. Metadata failure retrial mechanism Metadata synchronization task may stop because of user information change in Kylin. At this time, the metadata synchronization task will fail and try again with a frequency of 20 seconds. If the current synchronization user information or kylin returns to normal, the synchronization task returns to normal. Powered by Gitbook.            Last Modified： 2022-03-20 16:39:15 "},"mdx_query/query_syntax.en.html":{"url":"mdx_query/query_syntax.en.html","title":"Query Syntax","keywords":"","body":"Query syntax The MDX syntax currently supported by MDX for Kylin is a subset of the standard MDX, which is different from the latest standard in some details. This paper introduces the syntax structure supported by MDX for Kylin. Select statement Syntax structure described by BNF: [ WITH [ , ...n ] ] SELECT [ * | ( [ , ,...n ] ) ] FROM [ ] [ ] ::= ( MEMBER ) | ( SET ) ::= [ NON EMPTY ] Set_Expression [ ] ON Integer_Expression | AXIS(Integer) | COLUMNS | ROWS | PAGES | SECTIONS | CHAPTERS ::= Cube_Name | [NON VISUAL] (SELECT [ * | ( [ , ,...n ] ) ] FROM ) ::= WHERE Tuple_Expression ::= [ CELL ] PROPERTIES Cell_Property_Name [ , Cell_Property_Name,...n ] ::= [DIMENSION] PROPERTIES (Dimension_Property_Name [,Dimension_Property_Name,...n ] ) | (Level_Property_Name [, Level_Property_Name,...n ] ) | (Member_Property_Name [, Member_Property_Name,...n ] ) Syntax restrictions SELECT_WITH_CLAUSE At present, MDX only supports member and set, and the calculated measure and named set need to be defined in the dataset. SELECT_QUERY_AXIS_CLAUSE MDX only enables execution optimization for queries on a specific axis when up to two axes are used. SELECT_SUBCUBE_CLAUSE Specify the query cube. Currently, it supports Cube_Name and has limited support for subqueries. SELECT_SLICER_AXIS_CLAUSE The expression must contain members in dimension and hierarchy, not members referenced in SELECT_QUERY_AXIS_CLAUSE expression. Syntax parameters Parameter Description Set_Expression Returns a valid multidimensional expression of a set Integer_Expression An integer between 0 and 127 Cube_Name Provides a valid string for the cube name Tuple_Expression Returns a valid multidimensional expression for tuple Cell_Property_Name A valid string representing the cell property Dimension_Property_Name A valid string representing the dimension property Level_Property_Name A valid string representing the level property Member_Property_Name A valid string representing the member property Powered by Gitbook.            Last Modified： 2022-03-24 19:48:48 "},"mdx_query/query_history.en.html":{"url":"mdx_query/query_history.en.html","title":"Query History","keywords":"","body":"Query History All the queries that you executed in Kylin will be saved in query history, you can check it out in the left side navigation bar Query -> History. This page saves the basic information of queries, such as query time, SQL statement, query user, etc. This helps you to record query behaviors, which enables you to better manage and optimize the models. This chapter will presents you the content of query history page. View Query History Click the Query History button in the left navigator bar, you will see all the queries with basic information. Each line in the list is a query history record. The meaning of the columns are as follows: Start time: The time the query was submitted. Execution Time: The time taken to complete the query. If the query fails, it is displayed as blank. MDX Statement: MDX statement that was executed. Dataset Name: The dataset used for the query. Query Status: There are several states as follows： Success Failure Application: The type of BI that submitted the query. Query Node: The service nodes that handle the query. User: MDX for Kylin user who submitted the query. History Details When you click on the arrow icon on the left side of a query analysis, the details of the current MDX query will be expanded. The information is divided into two parts: query details and SQL statements. The query details show the basic information of MDX scripts and queries (such as: Session ID, query status, etc.), SQL statements show related SQL scripts. Note: Only the first 1000 rows of Query can be seen in the query details. You can click the copy button in the upper right corner of the query statement box to copy the complete statement. Query Details Click View in More Information to show more details: Meaning of relevant details: Query ID: MDX query execution ID Execution Time: the total time of the entire MDX query (including the total time of preprocessing, SQL queries, etc.) Use MDX Cache : query whether to hit MDX cache Use Other engine: whether to use other syntax execution engine Network Package: the total bytes of network throughput Timeout: whether timeout in the query of processing Time for Creating Multidimensional Dataset: the time for creating multidimensional dataset Time for Marshall Soap Message: the time for marshall soap message Dataset Name: the dataset for query to hit Use Gateway : Whether the client side initiating the query uses MDX for Kylin Gateway. SQL Statement Select the SQL statement of query list, and then click the Detail tab to view the detailed information of the SQL query statement. As shown below: Meaning of relevant details: Query ID : SQL query execution ID Number of result rows : Returns the number of rows in the result set Whether to use cache : query whether to hit cache System ID : internal increment number Powered by Gitbook.            Last Modified： 2022-03-24 17:19:56 "},"integration/excel_integration.en.html":{"url":"integration/excel_integration.en.html","title":"Integrate with Excel","keywords":"","body":"Integrate with Excel In this section, we will introduce you how to analyze data from MDX for Kylin using Excel. With this method, you will be able to query data in MDX for Kylin through MDX for Kylin without importing data to Excel. Prerequisite Excel connect to MDX for Kylin Learn More Prerequisite Install MDX for Kylin. Your Windows Excel version is 2007 or above. Excel connect to MDX for Kylin Choose Data -> Get Data -> From Database -> from Analysis Services Next, in the Server name you need to fill in the host information of MDX for Kylin, the sample is as follows: http://{host}:{port}/mdx/xmla/{project} MDX for Kylin default HTTP port is 7080. Change the project to the project you want to access in MDX for Kylin. Admin can find the port of MDX for Kylin under MDX for Kylin installation folder, in conf/insight.properties file, insight.semantic.port configuration. If the configuration insight.semantic.context-path is set, you should enter the following information in the server field: http://{host}:{port}/{context-path}/mdx/xmla/{project} Both host and port should be written as information of Kylin. For example: # context-path configuration as follow: insight.semantic.context-path=/ws/testworkspace/mdx # Address of Kylin http://10.10.10.200:7070/kylin # The server information to enter in Excel http://10.10.10.200:7070/ws/testworkspace/mdx/mdx/xmla/test_project Choose Use the following User Name and Password and fill the username and password of MDX for Kylin. Now you have successfully establish connection to MDX for Kylin, choose the dataset you want to analyze, click Next. Check Always attemp to use this file to refresh data and Save password in file Check Save password in file, this way you don't need to refill the password later. This setting will only be effective in this machine. Now you can analyze Kylin's dataset using Excel PivotTable. Learn more To learn more about the features MDX for Kylin supports in Excel, please read Supported Excel Functionality Powered by Gitbook.            Last Modified： 2022-03-25 11:17:56 "},"integration/excel_function_list.en.html":{"url":"integration/excel_function_list.en.html","title":"Supported Excel Function List","keywords":"","body":"Supported Excel Functionality Prerequisite Below functionality requires Excel 2010 and above Data Connection Function Support Status Operation Path Comment SSAS Entrance - Use username and password Support Data - Get Data - From Database - SSAS You need to check Save password in file and Always attempt to use file to refresh during the connection process, otherwise you may need to enter authentication information frequently to maintain the connection Existing Connection Support Data There are two ways to connect to the existing connection. Selecting Connections in this workbook will make the newly created PivotTable use the same connection. Selecting Connection files in this computer will create a new copy of the connection, new PivotTable will use the new copy connection. In addition, when the data is refreshed, the same connected PivotTable will be updated Insert PivotTable Support Insert - PivotTable -Choose Connection You can choose a connection entry other than SSAS, such as XMLA Connect Import Offline Cube File Not Support Drag and drop .cub file to Excel Excel support extracts data from multidimensional servers and generates .cub files for offline analysis Analyze in PivotTable Sync Semantic Model Function Support Status Operation Path Comment Measure group Support PivotTable By default, each model corresponds to a group, and the calculated measure is a single measure group Measure Folder Support PivotTable Dimension Table Support PivotTable Only one public dimension table will be displayed Named Set Support PivotTable Namedset Folder Support PivotTable The Named Set is displayed under the Set folder by default Hierarchy Support PivotTable Normal Dimension Support PivotTable Dimension Folder Support PivotTable Field Select & Search Function Support Status Operation Path Comment Filters Area Support PivotTable Support filtering normal dimension and hierarchy dimension Rows Area Support PivotTable Support choosing dimension, hierarchy and namedset Columns Area Support PivotTable Support choosing dimension, hierarchy and namedset. if user check the time dimension, it is placed on rows by default. Values Area Support PivotTable When there are more than two measures, values dimension will be generated by default on columns Field Search Support PivotTable Support searching measure, dimension and namedset Filter Function Function Support Status Operation Path Comment Filter Area Support Support to filter dimension and hierarchy; support single and multiple selection; support fuzzy select Columns & Rows Support Support to filter dimension and hierarchy; support single and multiple selection; support fuzzy select Keep/Hide selected items Support PivotTable right-click menu - Filter Belong to list filter and cannot coexist with value filter, label filter TopN Support PivotTable right-click menu - Filter Belong to value filter; multiple dimensions filter TopN cannot take effect; Hierarchy multiple Level filter TopN may lead to inaccurate data Value Filters Support PivotTable right-click menu - Filter Need to enable sub-query by configuring insight.mdx.mondrian.mdprop.mdx.subqueries, check Basic Configurations for details; value filter and label filter cannot be performed at the same time; for single character (not) equals, (not) greater than/less query results are incorrect; After filtering the hierarchy , it is not possible to expand; no total can be displayed after filtering Lable Filters Support PivotTable right-click menu - Filter Need to enable sub-query by configuring insight.mdx.mondrian.mdprop.mdx.subqueries, check Basic Configurations for details; value filter and label filter cannot take effect at the same time; for single character (not) equals, (not) greater than/less query results are incorrect; After filtering the hierarchy , it is not possible to expand; no total can be displayed after filtering Slicer Filter Support Analyze Belong to list filter Timeline Filter Not support Analyze Belong to list filter Excel copied fiel d filter Support Copy Field - Filter Copy a filter in PivotTable to a blank area and filter the field Sort Function Function Support Status Operation Path Comment Datasource Order Support PivotTable right-click menu - Sort Sort by sql result by default; Use Key Column and name column to change the sorting Manual Order Support PivotTable right-click menu - Move Custom sorting through move function Field Order Support PivotTable right-click menu - Sort Sort according to the selected field, other sorting methods cannot coexist Layout & Display Function Support Status Operation Path Comment Format Cells Support PivotTable right-click menu The string format such as currency sign can be set by editing the dataset, or it can be set in Excel Show Totals Support Design - Subtotals Columns with small cardinality placed on the left has better performance Show Subtotals Support Design - Subtotals Columns with small cardinality placed on the left has better performance Include filtered items In Totals Not support Design - Subtotals Support totals do not change according to the filter items Show +/- buttons Not support Analyze - Show +/- buttons will be generated in hierarchy by default; If there are multiple common dimensions, the +/- button will not be generated currently Show items with no data on rows Not support PivotTable right-click menu - PivotTable Option - Display The row will be hidden when all measures on are empty Show items with no data on columns Not support PivotTable right-click menu - PivotTable Option - Display The column will be hidden when all measures on are empty Show field headers Support Analyze - Show Show field list Support Analyze - Show Show Properties in tooltips Not support PivotTable right-click menu Show Properties in reports Not support PivotTable right-click menu Insert blank line after each Item Support Design - Blank Rows Expand Support PivotTable right-click menu Support expand one and expand all Collapse Support PivotTable right-click menu Support collapse one and collapse all Drill down Not support PivotTable right-click menu Currently, you can only drill down two levels at most, and you can drill down multiple levels after opening the subquery Drill up Not support PivotTable right-click menu Function is not perfect, see above Repeat all Item lables Support Design - Report Layout Show in compact form Support Design - Report Layout Show in outline form Support Design - Report Layout Show in tabular form Support Design - Report Layout Refresh Data Function Support Status Operation Path Comment Defer Layout Update Support PivotTable Only update data, exclude the structure. If the dataset structure is changed (dimensions/measures are missing), an error will be reported PivotTable right click refresh Support PivotTable right click Both update the data and structure. If the structure changes, the report will be adaptively changed, related dimensions/measures may be removed, or the entire report may be cleared Refresh Support Data Same as above, will update all reports of the same connection Refresh All Support Data Will update all connected reports Cube Formulas Function Support Status Operation Path Comment CubeMember Support Formula Returns a member or tuple from the cube. Use to validate that the member or tuple exists in the cube CubeValue Support Formula Returns an aggregated value from the cube CubeSet Not support Formula Defines a calculated set of members or tuples by sending a set expression to the cube on the server, which creates the set, and then returns that set to Microsoft Excel CubeSetCount Not support Formula Returns the number of items in a set CubeKPIMember Not support Formula Returns a key performance indicator (KPI) property and displays the KPI name in the cell. A KPI is a quantifiable measurement, such as monthly gross profit or quarterly employee turnover, that is used to monitor an organization's performance CubeMemberProperty Not support Formula Returns the value of a member property from the cube. Use to validate that a member name exists within the cube and to return the specified property for this member CubeRankedMember Support Formula Returns the nth, or ranked, member in a set. Use to return one or more elements in a set, such as the top sales performer or the top 10 students Advanced Functions Function Support Status Operation Path Comment ESC cancel query Support Type ESC during the query There may be problems in a cluster env Show Value As Support PivotTable right-click menu Similar to table calculation in Tableau Group/Ungroup Support PivotTable right-click menu Common in head-long tail scenario analysis, long tail is classified as other Drillthrough Not support PivotTable right-click menu Double-click the measure cell to drill into details Create Set Bases on Row Items Not support Analyze - Filed, Items & Sets Can be defined in MDX for Kylin data set interface Create Set Bases on MDX Not support Analyze - Filed, Items & Sets Can be defined in MDX for Kylin data set interface Create Calculate Measure Not support Analyze - OLAP Tools Can be defined in MDX for Kylin data set interface Create Calculate Member Not support Analyze - OLAP Tools Can be defined in MDX for Kylin data set interface What-If Analysis Not support Analyze - OLAP Tools Need to have data write-back function Offline OLAP Not support Analyze - OLAP Tools Report Making Function Support Status Operation Path Comment Inset Chart Support Insert - Charts Various types of charts can be selected for data visualization Filter linkage Support Right click Slicer - Report Connections After the filter setting is associated with multiple PivotTable, linkage analysis can be performed, which is often used in dashboards Report Sharing Function Support Status Operation Path Comment Change Data Source Support Analyze This operation will update the data and structure. If the structure changes, the report will be adaptively changed, related dimensions/measures may be removed, or the entire report may be cleared Sharing without change data source Support When creating the report, do not check Save password in file and Always try to refresh using file To connect from SSAS Entrance - Use Windows Authentication, it needs to be used with MDX for Kylin Gateway Powered by Gitbook.            Last Modified： 2022-03-25 14:45:55 "},"integration/tableau_integration.en.html":{"url":"integration/tableau_integration.en.html","title":"Integrate with Tableau","keywords":"","body":"Integrate with Tableau In this section, we will introduce you how to analyze data from MDX for Kylin using Tableau. With this method, you will be able to query data in MDX for Kylin through MDX for Kylin without importing data to Tableau. Prerequisite Tableau connect to MDX for Kylin Semantic Prerequisite Install MDX for Kylin Install Tableau's Microsoft Analysis Services driver, see Microsoft Analysis Services Drivers Recommended Download 2012 SP1 (Version 11.0.2100.60) Tableau connect to MDX for Kylin Semantic Choose Connect -> Microsoft Analysis Services Next, you need to fill in the address information of the connection MDX for Kylin Semantic in the Server name column, the sample is as follows: http://{host}:{port}/mdx/xmla/{project} MDX for Kylin Semantic default HTTP port is 7080. The username and password are your MDX for Kylin login username and password. If the configuration insight.semantic.context-path is set, you should enter the following information in the server field: http://{host}:{port}/{context-path}/mdx/xmla/{project} Both host and port should be written as information of Kylin. For example: # context-path configuration as follow: insight.semantic.context-path=/ws/testworkspace/mdx # Address of Kylin http://10.10.10.200:7070/kylin # The server information to enter in Tableau http://10.10.10.200:7070/ws/testworkspace/mdx/mdx/xmla/test_project ![Authentic](images/tableau/username_password.en.png) Now that project is connected to tableau, please a dataset. After selecting the dataset, Tableau can read the information about the dataset. Click on the workbook to start the analysis. Now you can analyze Kylin's Cube using Excel PivotTable. So far, the measures: top, percentile and correlation are not supported. Powered by Gitbook.            Last Modified： 2022-03-23 18:17:38 "},"integration/tableau_function_list.en.html":{"url":"integration/tableau_function_list.en.html","title":"Supported Tableau Function List","keywords":"","body":"Supported Tableau Functionality Prerequisite Below functionality requires Windows Tableau 10.x and above Data Connection Function Support Status Operation Path Use Windows Authentication Not Support Connect - To a Server - More - Microsoft Analysis Services - Use Windows Authentication Use a specific username and password Support Connect - To a Server - More - Microsoft Analysis Services - Use a specific username and password Sync Semantic Model Function Support Status Comment Dimension Table Support Hierarchy Support Dimension Support Measure Support Calculated Measure Support Measures and calculated meausres are shown in the mesure panel Named Set Support Folder Not Support Folders of dimensions and measures are not synchronized Field Select & Search Function Support Status Comment Filters Support Support filtering on dimension, hierarchy and measure Rows Support Support choosing dimension, hierarchy and measure Columns Support Support choosing dimension, hierarchy and measure Sheet area Support Field Search Support Support searching dimension, hierarchy and measure Filtering Function Support Status Comment Filter on dimension Support Support General, Condition, Top filter. Support single/multiple values filtering. Support searching value on filters Filter on hierarchy Support Support General, Condition, Top filter. Support single/multiple values filtering. Support searching value on filters Filter on measure/calculetd measure Support Sopport Range of laues, At least, At most, Special filtering Sorting Function Support Status Comment Sorting dimension/hierarchy Support Support sorting from an axis, header, field label, or toolbar, or manual sorting. Support sorting by Data source order, Alphabetic, Field, Manual, or Nested Sorting measure/calculetd measure Support Support sorting from an axis, header, field label, or toolbar, or manual sorting Layout & Display Function Support Status Operation Path Comment Format setting Support Right-click menu - Format Formating such as currency sign $ or￥can be set by editing the dataset, or it can be set in Tableau Show Totals Support Analysis - Totals Columns with small cardinality placed on the left has better performance Show Subtotals Support Analysis - Totals - Add All Subtotals Columns with small cardinality placed on the left has better performance Data Refresh Function Support Status Operation Path Comment Auto Update Worksheet Support Toolbar - Auto Update Worksheet Data Source - Refresh Support Data - the specified data source - Refresh Will update all worksheets using the same data source Dashboard Function Support Status Comment Filter Actions Support Dashboard - Actions - Add Action - Filter Highlight Actions Support Dashboard - Actions - Add Action - Highlight Go to URL Actions Support Dashboard - Actions - Add Action - Go to URL Go to Sheet Actions Support Dashboard - Actions - Add Action - Go to Sheet Powered by Gitbook.            Last Modified： 2022-03-16 16:21:11 "},"security/role.en.html":{"url":"security/role.en.html","title":"Role","keywords":"","body":"Role This chapter will introduce what a Role is, how the Role decides the permission in MDX for Kylin, and how you can assign roles to users. User Role Default Role Assign Users to Role Manage Role Dataset Role The original MDX for Kylin only provided user-level semantic information permission control. It provided role-level semantic information access control. The following information needs attention: When a user is not assigned any dataset role or is configured with a user-level whitelist, the user does not have access to any dataset. The user must have at least access to a metric or a calculated metric in the data set, otherwise the user cannot connect to the data set. Users should have permissions on the items, tables in Kylin, otherwise they cannot connect to the dataset. When a user is assigned multiple roles, the final authority is a collection of whitelists at each role level and user level. That is, if the access authority of user A in the dataset is dimension 1 and measure 1, the access authority of role A is dimension 2 and Measure 2, and user A belongs to role A, then the final access right of user A is dimension 1, dimension 2, measure 1, and measure 2. Default Role MDX for Kylin initially comes with a default role, namely the Admin, which has access to all semantic information of all data sets. Admin role assignments can be viewed on Enter Management Page-> Dataset Roles page. Assign Users to Role You may go to Enter Management Page-> Dataset Roles to assign users to role in batch. A user will gain the permission as per role. When a user has multiple roles, the user will gain the union of permissions from all the roles. Manage Role You may go to Security - ->Role to create, edit, clone and delete Role. When you change the permission of the role, you consequently change the permission the user having that role. Note: Default Role cannot be edited or deleted. Powered by Gitbook.            Last Modified： 2022-03-23 17:59:31 "},"security/object_level_security.en.html":{"url":"security/object_level_security.en.html","title":"Object-level Security","keywords":"","body":"Object-level Security Understand Object There are several concepts that exist in MDX for Kylin that are considered as an object, such as Dimension, Measure, Calculated Measure, Hierarchy, Named Set. Understand Object-level Security In MDX for Kylin, you can configure the Object-level security for every single object in MDX for Kylin. some of these objects such as Calculated Measure or Named Set only exist in MDX for Kylin. that’s why their access needs to be controlled separately in MDX for Kylin. And there are use cases that user needs to control the Measure to be NOT accessible to a group of users but the Calculated Measure that references the Measure that rely on the measures are accessible to the same group of users. Status of Object-level Security There are 3 status of the access control: Status Product Behavior Unspecified By default, when access is not configured, user cannot see and query the object and the dataset. This default behavior can be modified by configuring the setting as mentioned in the next section below. Accessible When set as accessible, user can view and query the object. Not accessible When set as not accessible, user cannot view and query the object. Apply Object-level Security at Different Level User's access to a dataset is decided by the access collection of all objects on that dataset. User need to have access to at least one measure or calculated measure on a dataset to access that dataset. Note: Since Tableau has a built-in measure of count(*) by default, so user can access the dataset with only one dimension granted. But we do not recommend to use MDX for Kylin in this way. A new setting is introduced to configure whether the dataset and object are accessible by default. Once this setting is set to true, all the newly created datasets will be accessible to all users by default. Setting insight.dataset.allow-access-by-default Usage When true, all datasets are accessible by all users by default. When false, all datasets are not accessible by all users by default. Default Value False Server restart needed? Yes The existing dataset access list will remain the same. If insight.dataset.allow-access-by-default is set to true , newly dataset will be accessible by all users by default. Any objects that should not be exposed to certain users or groups should be restricted by Admin. Apply Object-level Access by Role Object-level access can be applied by user or role. You can create a role and assign user the role, and then grant object-level access by role to batch process the permission control. To understand more about role, please read Role. When a user is assigned to multiple roles, the user access should be combined with all the access the user get from the user-level and role-level. For example, if the user is granted to access dimension 1 and measure 1 on a dataset, the role the user belongs to is granted to access dimension 2 and measure 2, the user belongs to this role. Then the user can access dimension 1, dimensions 2, measure1 and measure 2. Apply Object-level Access by Role Object-level access can be applied by group. MDX for Kylin will periodically sync the user and group from Kylin, and the user in each group. If external user identity system is integrated with Kylin, for example, Azure Active Directory (Azure AD), the user and group in MDX for Kylin will come from external user identity system. The objects user can acesss will be decided by combining all the access or restriction the user could get from him/herself and all groups he/she belongs to. For example, user A is in group U1. User A has been restricted access to dimension D1 and measure M1 on dataset DA1, group U1 has been restricted access to dimension D2and measure M2. User A can access DA1 with no access to D1,D2,M1,M2. Configure Object-level Access List To configure object-level access list, please edit the dataset and go to access list to configure access list for Dimension, Measure, Calculated Measure and Named Set. Please read the step by step guide at Configure Access List Understand Object Visibility You can also configure the visibility of the object in the Dimension, Measure, Calculated Measure, and Named Set editor. When the object is set to be Not Visible, all the user will not be able to access the object. And when configuring the access of the object for a user and role, the access is automatically restricted and cannot be modified. The Difference Between Object Visibility and Object-level Access List Although the visibility and object-level access list may looks similar at first glance, they are effective in a different level. When a object is set to be Not Visible, it is hidden to all users when query from client tool, as if the object does not exist on the dataset. The object-level access list configured by user or role. So it gives admin the flexibility to restrict the access to certain sensible data to certain user or group of users. Powered by Gitbook.            Last Modified： 2022-03-25 15:23:19 "},"operations/logging.en.html":{"url":"operations/logging.en.html","title":"System Log","keywords":"","body":"System Log After being successfully started, MDX for Kylin will create a directory named logs/. By default all logs generated during MDX for Kylin runtime will be stored in this directory. Log files Log files generated by MDX for Kylin is as follows: mdx.log The file is MDX access log generated by Semantic server, whose default logging level is INFO. semantic.log Semantic main log file, whose default logging level is INFO. semantic.out The standard output of Semantic will be redirected to this file. gateway.log Gateway main log file, whose default logging level is INFO. Log Configuration MDX for Kylin leverages log4j for logging configuration. Users can edit the log4j.properties file in the $MDX_HOME/conf/ directory to configure the logging behavior, such as the splitting rule and the single file size limit. For example: The default appender type of semantic.log and mdx.log files is org.apache.log4j.RollingFileAppender, which means creating a new file every time the old file reaches a designated size. To create a new file every day instead, you can set log4j.appender.file and/or log4j.appender.mdx to org.apache.log4j.DailyRollingFileAppender. log4j.appender.file.MaxFileSize and log4j.appender.mdx.MaxFileSize define the size limit mentioned above of any semantic.log file or mdx.log file respectively, default 268435456, i.e. 256MB. log4j.appender.file.MaxBackupIndex and log4j.appender.mdx.MaxBackupIndex define the max reserved amount of semantic.log files and of mdx.log files respectively, default 10. After modifications on the log4j.properties file, you should restart MDX for Kylin to apply your changes. Log debugging The MDX log contains the caller information of the query ID and API, which can be used to increase the debugging ability. Query ID, MDX query issued by Business Intelligence tools, will generate a unique query ID in MDX, you can trace the relevant information according to the query ID. The caller information of API can be used to locate the user. Powered by Gitbook.            Last Modified： 2022-03-23 17:47:53 "},"operations/diagnosis.en.html":{"url":"operations/diagnosis.en.html","title":"Diagnosis Package","keywords":"","body":"Diagnostic Package System Configuration Generate diagnostic package from web page Generate diagnostic package from shell Multi-node deployment configuration example MDX for Kylin configuration item Configuration requirements for Nginx routing rules Diagnostic Package Content Attention information System Configuration MDX for Kylin requires you to properly configure each node during installation. For details, see the manual Installing in Linux Environment Generate diagnostic package from web page The system diagnostic package contains diagnostic information for the entire MDX for Kylin instance. To generate a system diagnostic package requires the following operations Log in to MDX for Kylin with Kylin's administrator account Click the Enter Management button in the upper right corner Select time range, you can choose Today, Last 3 days, Last 7 days, Last 1 month, or custom time range Note: The time range selected must include the time period during which MDX for Kylin experienced the problem. Select server Note: If MDX for Kylin is deployed on multiple nodes, you need to determine the problem node and choose the correct server name when generating the system diagnostic package, otherwise the system diagnostic package may not contain information about the problem. You can then download the diagnostic package. Generate diagnostic package from shell You may also generate a system diagnostic package by executing script with following operations You can enter the following directory $MDX_HOME/semantic-mdx/scripts/, execute the following command ./diagnose_package_offline.sh Start time: 13 bit timestamp; End time: 13 bit timestamp MDX ip: MDX ip; MDX port: MDX port; whether dump mysql database: Enter y to indicate that you need to dump mysql metadata database, enter n to indicate that you don’t need it; Diagnostic package output path: The diagnostic package output path; The following example of script execution shows that the mdx instance of port 7080 of localhost node is packaged, the time range is 2021-03-07 - 2021-03-08, the MySQL database needs to be dump, and the diagnostic package output path is '/ usr / local/`: ./diagnose_package_offline.sh 1615046400000 1615132800000 localhost 7080 y /usr/local/ Multi-node deployment configuration example MDX for Kylin configuration item You need to add the configuration item insight.mdx.cluster.nodes=IP1:Port1,IP2:Port2 in the[MDX installation directory]/conf/insight.properties file of each MDX node, which will all in the cluster The IP and Port information of the MDX node is added to the configuration file. Configuration requirements for Nginx routing rules According to the custom header:x-Host and x-Port to forward the request to the specified node to ensure that multiple nodes can be notified on the page to generate a diagnostic package and download it. You need to add routing rules in the Nginx configuration file: For example, for two MDX for Kylin nodes of A and B on two machines, whose IP and Port are IP_A: Port_A andIP_B: Port_B, you need to add them in Nginx Add the following configuration to the configuration file: upstream nodes { server ip_A:port_A; server ip_B:port_B; } server { listen port_N; server_name ip_N; #charset utf-8;(Recommended Use) #Enable custom header underscores_in_headers on; location / { if ($http_x_host = '') { #Requests without custom headers can be sent to any node proxy_pass http://nodes; break; } #For requests containing custom headers, forward them to the specified node proxy_pass http://$http_x_host:$http_x_port; break; } } The forwarding logic at this time is shown in the following figure: Diagnostic Package Content The system diagnostic package contains following content： conf_{timestamp} directory indicators.json : MDX calculated measure template file, recording the template definitions of calculated measures insight.properties : MDX configuration file set-jvm.sh : MDX JVM parameter configuration file (which can also be modified in insight.properties file) startup.sh : MDX boot script logs_{timestamp} directory gc-{timestamp}.log : MDX JVM GC activity log mdx.log : MDX query log file，merging content from several MDX query log files in specified time period (Content is sorted by original log file last modified time, separated by \"Content above from file : \") semantic.log : MDX API call log file, merging content from several MDX API call log files in specified time period (For example, synchronizing information from Kylin, accessing dataset from web GUI) Project-{project}_Dataset-{dataset}.json : several files, json files of datasets which can be used to import dataset from web GUI (Requires MDX connecting to a proper Kylin) jstack.log : MDX process ID, core file, Java stack information of remote debugging service jmap.log : MDX process memory mapping information and heap space allocation top.log : The resource usage status of each process in the system mos_scripts.out : Distributed MDX startup logs information about the process of copying server Hadoop-related configuration files and replacing related conflicting jar packages mdx_env ：MDX running environment information file, including detail information from versions of MDX, JDK to System sync_info ：MDX synchronization task information file, including current connection user and current synchronization task status schema_{timestamp} directory {user}_{project}.xml : several files, the schema information of datasets (One dataset may appear to be inconsistent to different users due to visibility settings) dataset_{timestamp} directory Project-{project}_Dataset-{dataset}.json : several files, json files of datasets, which can be imported from the front-end interface (requires connection to the corresponding Kylin) spark_logs_{timestamp} directory app-{applicationId} directory events_{number}_app-{applicationId}_{startTime}_{endTime} : several files, Spark related logs Attention information In the multi-node deployment configuration example, Nginx is configured as an example configuration. The specific routing method and filtering range can be adjusted according to actual needs. If the versions of multiple MDX for Kylin nodes are inconsistent, there may be problems in reading js andcss files after Nginx forwarding, so you must ensure that the MDX for Kylin version of each node is consistent. Because the IP and Port information given in the configuration file is used when requesting the diagnostic package, please do not use localhost, which may cause Nginx forwarding failure and the request to fail. Each time a diagnostic package is newly generated, it will clear the diagnostic package generated 7 days ago. Powered by Gitbook.            Last Modified： 2022-03-23 17:51:47 "},"operations/error_code.en.html":{"url":"operations/error_code.en.html","title":"Error Code","keywords":"","body":"Error Code Error Naming Rules In order to make the error message more concise, clear and traceable, the error codes are divided according to the service module and business category, and the format is: MDX-AABBCCCC AA: Service modules, such as system service, semantic service, MDX service, etc. BB: Business categories under service module. CCCC: The specific reason for the error, such as the string length exceeds the limit, the query result is too long, etc. The specific service modules and business category list are as follows. Service Module Business Category 01 System Service 0102 System Config User 01 System Service 0104 Diagnose Package 01 System Service 0105 Sync Task 01 System Service 0106 User / Group / Role 01 System Service 0107 DB 01 System Service 0108 System Tool 02 Semantic Service 0201 Kylin API CALL 02 Semantic Service 0202 Dataset 03 MDX Service 0301 Schema 03 MDX Service 0302 XMLA 03 MDX Service 0303 Query 03 MDX Service 0304 Rewrite / Reject 04 Authority 0401 Authentication 04 Authority 0402 Authorization 04 Authority 0403 User Delegation Error Code List Error Code Error Message MDX-00000001 Internal error MDX-01020001 Sync user not configured MDX-01020002 Property parsing error MDX-01040001 Not generating diagnostic package on current node MDX-01040002 Dataset not found in diagnostic package generation MDX-01040003 Diagnostic package generation node error MDX-01040004 Dataset serializing error in diagnostic package generation MDX-01040005 Diagnostic package file not found MDX-01040006 Diagnostic package downloading error MDX-01050001 Invalid sync user information MDX-01050002 Illegal sync user information updating request MDX-01060001 Invalid role name MDX-01060002 Duplicate role name MDX-01060003 User error MDX-01060004 Role not exists MDX-01060005 User not exists MDX-01060006 Deleting role with users assigned MDX-01060007 Invalid role MDX-01060008 Cannot delete the ADMIN role MDX-01060009 Role ID and name not match MDX-01060010 Adding / Deleting more than 1 user to / from a role MDX-01070001 Dataset record insertion error MDX-01070002 MDX_QUERY record insertion error MDX-01070003 SQL_QUERY record insertion error MDX-01070004 Role record insertion error MDX-01070005 Role record deleting error MDX-01080001 User password encryption error MDX-01080002 User password decryption error MDX-01080005 set-jvm script reading error MDX-01080006 set-jvm script writing error MDX-01080007 MDX properties file reading error MDX-01080008 MDX properties file writing error MDX-01080009 MDX version format error MDX-02010002 Fetching Kylin tables description error MDX-02010003 Fetching Kylin models description error MDX-02010004 Fetching Kylin project list error MDX-02010005 Fetching Kylin user list error MDX-02010006 Fetching Kylin users by project error MDX-02010007 Fetching Kylin users by group error MDX-02010008 Fetching Kylin user authorities error MDX-02010009 Fetching Kylin project access information error MDX-02010010 HTTP request with empty URI MDX-02010011 Building URI instance error MDX-02010012 Kylin host / port not configured MDX-02010013 Kylin connection error MDX-02010014 Kylin HTTP request failed MDX-02010015 Reading Kylin HTTP response error MDX-02020002 Fetching dataset by project error MDX-02020003 Fetching dataset by ID error MDX-02020004 Duplicate dataset name in project MDX-02020006 Duplicate dimension table name MDX-02020007 Duplicate dimension table alias MDX-02020008 Duplicate measure alias MDX-02020009 Duplicate calculated measure name MDX-02020010 Duplicate namedset name MDX-02020011 Folder name format error MDX-02020012 Calculate measure validation error MDX-02020014 Illegal default member validation request MDX-02020015 Unsupported dataset type MDX-02020016 MDX server connection error MDX-02020017 Dataset connection error MDX-02020018 Invalid dimension usage MDX-02020019 Hierarchy contains column from another table MDX-02020020 Fetching dimension table by model error MDX-02020021 Fetching dimension by dimension table and model error MDX-02020022 Fetching measure by model error MDX-02020023 Fetching calculated measure error MDX-02020024 Fetching namedset error MDX-02020025 Invalid dataset found MDX-02020026 Kylin project error MDX-02020027 Invalid dataset list fetching request MDX-02020028 Invalid or expired dataset export token MDX-02020029 Dataset export compression error MDX-02020030 Invalid dataset import request MDX-02020031 Dataset import decompression error MDX-02020032 Invalid dataset Zip file MDX-02020033 No valid dataset in uploaded file MDX-03010003 Datasource file not found MDX-03010004 Creating datasource file error MDX-03010005 Creating schema directory error MDX-03010006 Creating schema file error MDX-03010007 Serializing schema file error MDX-03020002 Drillthrough only supports tabular data format MDX-03020003 Drillthrough error MDX-03020005 URL format of XML/A request error MDX-03030001 MDX dataset not found MDX-03030002 MDX object not found MDX-03030003 MDX member resolving error MDX-03030004 MDX statement parsing error MDX-03030014 Hierarchy in calculated member not found MDX-03030015 Wrong return type of axis expression MDX-03030016 Wrong return type of member expression MDX-03030017 Wrong return type of set expression MDX-03030018 Missing function argument MDX-03030019 Wrong function argument type MDX-03030020 Unknown MDX argument MDX-03030021 MDX member not found MDX-03030022 Wrong return type of default member expression MDX-03030023 Invalid member encountered MDX-03030024 No signature matching function found MDX-03030025 More than one signature matching function found MDX-03030031 Hierarchy appears on multiple axes MDX-03030032 Function arguments do not belong to the same hierarchy MDX-03030033 Function arguments do not belong to a time dimension table MDX-03030034 Invalid axis number MDX-03030035 Duplicate axis name MDX-03030037 Tuple contains members of the same hierarchy MDX-03030038 Argument type error of VisualTotals function MDX-03030042 Invalid data type cast target MDX-03030043 Function does not support NULL member argument MDX-03030045 Cannot use this function because no time dimension has been defined MDX-03030046 Did not explicitly specify the target hierarchy MDX-03030047 No accessible element in the hierarchy MDX-03030050 Drillthrough disabled MDX-03030051 Performing drillthrough over an unknown member MDX-03030054 Properties missing in connection string MDX-03030055 Hierarchy belong to a time dimension table not defined as time type MDX-03030056 Hierarchy not belong to a time dimension table defined as time type MDX-03030064 Calculated member belongs to an invalid dimension MDX-03030068 Duplicate calculated member name MDX-03030076 UDF class not found MDX-03030077 Illegal UDF class definition MDX-03030079 Duplicate UDF name MDX-03030080 Duplicate namedset name MDX-03030081 Invalid calculated measure or namedset expression in dataset MDX-03030087 Invalid aggregator MDX-03030090 Descendants function argument type error MDX-03030092 Cannot infer type of set elements MDX-03030094 Hierarchy definition contains no level MDX-03030095 Hierarchy definition contains levels with duplicate name MDX-03030103 Crossjoin result size exceeds limit MDX-03030104 Query result size exceeds limit MDX-03030105 Number of members to be read exceeds limit MDX-03030106 Number of measure values to be read exceeds limit MDX-03030107 Query canceled MDX-03030108 Query timeout MDX-03030109 Number of calculation iterations exceeds limit MDX-03030110 Hierarchy contains no member MDX-03030157 Native optimization cannot be applied to function MDX-03030158 Query resources recycling error MDX-03030159 Number of concurrent MDX queries exceeds limit MDX-03030160 Number of concurrent SQL queries from Mondrian engine exceeds limit MDX-03030162 Number of concurrent SQL queries from Sniper engine exceeds limit MDX-03030163 RolapSchema instance recycling error MDX-03030164 MondrianServer instance recycling error MDX-03030165 RolapConnection instance recycling error MDX-03030166 Aggregation query execution cancelled due to time out MDX-03030167 Aggregation query execution cancelled MDX-03030168 SniperResult construction cancelled MDX-03040003 MDX cluster nodes not configured MDX-03040004 Cannot rewrite expression MDX-03040005 Expression is not a function expression MDX-03040006 Expression is not a specified function expression MDX-03040007 Expression is not an identifier MDX-03040008 Invalid namedset Union function expression MDX-03040009 Invalid namedset Except function expression MDX-04010001 User login authentication error MDX-04010002 Invalid basic authentication information MDX-04010003 Invalid cookie authentication information MDX-04010004 Invalid gateway authentication information MDX-04010005 Authentication information missing MDX-04010006 User name / password error MDX-04010007 User locked MDX-04010008 Kylin authentication failed MDX-04010009 User disabled MDX-04020001 Not an ADMIN user MDX-04020002 Not an ADMIN user or project admin user MDX-04020003 User has no project access MDX-04020004 No dataset available MDX-04020005 All datasets in project are broken MDX-04020006 User has no access to any dataset in project MDX-04030001 User delegation feature not enabled MDX-04030002 Empty delegation user parameter MDX-04030003 Delegation user parameter too long MDX-04030004 Invalid delegation user parameter MDX-04030005 Delegation user permissions inadequate Powered by Gitbook.            Last Modified： 2022-03-25 15:25:35 "},"operations/configuration.en.html":{"url":"operations/configuration.en.html","title":"Task Configuration","keywords":"","body":"Task configuration Now MDX for Kylin will periodically synchronize data from its connected Kylin. You can use the system administrator account of Kylin to enter the administrator page to view the task status. Enter the parameter page, you can synchronize the running status of the task and the last time the task ran. If the task is stopped due to unexpected circumstances, such as Kylin is down, you can click the Restart Sync Task button to restart the Sync task. If you modify the user name or password of the system administrator in Kylin that is also performing synchronization tasks, you can click the Edit User Information button to change the user name and password. Powered by Gitbook.            Last Modified： 2022-03-25 11:20:27 "},"operations/metadata.en.html":{"url":"operations/metadata.en.html","title":"Metadata Import and Export","keywords":"","body":"Metadata import and export All metadata and query history of MDX instances are stored in the database, so backing up and restoring the database is a very important part of the daily operation and maintenance. MDX currently supports MySQL and PostgreSQL as metadata storage. Among them, MySQL recommends 5.7 and later versions, and PostgreSQL recommends 10.1 and later versions. Metadata export MySQL MySQL is exported through the mysqldump command. For security reasons, it is recommended to leave the -P option blank and enter the password in subsequent interactive input. mysqldump -h[insight.database.ip] -P[insight.database.port] -u[insight.database.username] -p[password] [insight.database.name] > backup.sql Example: mysqldump -hlocalhost -P3306 -uroot -proot insight > backup.sql PostgreSQL PostgreSQL is exported through the pg_dump command. Pay attention to entering the password in the interactive input that follows. pg_dump -h [insight.database.ip] -p [insight.database.port] -U [insight.database.username] -d [insight.database.name] -W -F c -b -v -f backup.bak Metadata import MySQL MySQL uses the mysql command to import the metadata that has been backed up. mysql -h[insight.database.ip] -P[insight.database.port] -u[insight.database.username] -p[password] [insight.database.name] If the specified database does not exist, first create the corresponding database through the MySQL client tool, or the command line. create database [insight.database.name]; PostgreSQL PostgreSQL uses the pg_restore command to import the backup files. pg_restore -h [insight.database.ip] -p [insight.database.port] -U [insight.database.username] -W -d [insight.database.name] -v backup.bak If the specified database does not exist, create the database through the createdb command first. createdb [insight.database.name] Appendix: Data Sheet Description Table Features calculate_measure Calculated measure definition common_dim_relation Dimension relationship definition custom_hierarchy User-defined hierarchy dataset Dataset dim_table_model_rel Model relationship definition mdx_info MDX information mdx_query MDX query history measure_group Measure group definition named_dim_col Dimension column definition named_dim_table Dimension table definition named_measure Measure definition named_set Named set definition role_info Dataset role information sql_query SQL query history user_info User information Powered by Gitbook.            Last Modified： 2022-03-25 14:45:55 "},"configuration/files.en.html":{"url":"configuration/files.en.html","title":"Configuration Files","keywords":"","body":"Configuration Files This section introduces configuration files in MDX for Kylin. File Name Description insight.properties This is the global configuration file, which contains almost all configuration properties about MDX for Kylin. log4j2.xml This is the log4j configuration file, which contains logging configurations. set-jvm.sh This file is the JVM configuration file of MDX for Kylin. Powered by Gitbook.            Last Modified： 2022-03-23 17:33:39 "},"configuration/properties.en.html":{"url":"configuration/properties.en.html","title":"Basic Configurations","keywords":"","body":"Basic Configurations The file insight.properties is located in the directory conf. This section details some configurations in the property file. After modifying configurations, you should restart the system to apply the changes. 1. Common configuration 2. Semantic Service module configuration 3. MDX module configuration 1. Common configuration Properties Description insight.kylin.host This parameter specifies the IP address or Hostname of the Kylin server to be connected,such as 127.0.0.1.The default islocalhost insight.kylin.port This parameter specifies the port of the Kylin server that needs to be connected, default is7070 insight.semantic.context-path This parameter specifies the context-path in MDX for Kylin, default is/ insight.kylin.ssl MDX for Kylin access Kylin is https enabled, default isfalse insight.database.type MDX for Kylin metadata database type, default ismysql insight.database.useSSL Does MDX for Kylin Metabase use SSL connection, default isfalse insight.database.ip The IP address or Hostname of the Metabase that MDX for Kylin needs to connect to, default islocalhost insight.database.port The port of MDX for Kylin Metabase that MDX for Kylin needs to connect to, default is3306 insight.database.name MDX for Kylin needs to connect to Metabase name, default isinsight insight.database.username MDX for Kylin needs to connect to the user name of the metabase, default isroot insight.database.password This configuration is used to generate diagnostic packets. This configuration item requires you to fill in the IP and Port information of all nodes in the MDX for Kylin cluster. If you configure multiple nodes, separate them with commas, such as insight.mdx.cluster.nodes=IP_1:Port_1,IP_2:Port_2 2. Semantic Service module configuration Properties Description insight.semantic.datasource-version This parameter specifies the version number of Kylin connected to the semantic service in MDX for Kylin. Only support 2 insight.semantic.port This parameter specifies the port of the semantic service in MDX for Kylin, default is7080 insight.semantic.meta.sync.project-page-size This parameter specifies the maximum number of projects that can be obtained in a single page when the semantic service in MDX for Kylin synchronizes projects , default is1000 insight.dataset.verify.interval.count This parameter specifies the time interval for the semantic service in MDX for Kylin to verify the data set, unit: 20 seconds, for example: 2 means 2 * 20 = 40 seconds. It takes effect only when insight.dataset.verify.enable is configured as true, default is15, which is 5 minutes insight.dataset.verify.enable This parameter specifies whether the semantic service in MDX for Kylin enables the data set synchronization verification function, default istrue insight.semantic.model.version.verify This parameter specifies whether the semantic service in MDX for Kylin enables metadata model version checking, default isfalse insight.semantic.startup.sync.enable This parameter specifies whether the semantic service in MDX for Kylin starts the synchronization task when the startup service is enabled, default istrue insight.semantic.segment.sync.enable This parameter specifies whether the semantic service in MDX for Kylin is enabled. Check Kylin's Segment changes, and clear MDX for Kylin cache according to Segment changes, default istrue insight.semantic.meta.sync.user-page-size This parameter specifies the size of each page when the semantic service in MDX for Kylin synchronizes user information from Kylin, default is100000 insight.semantic.cookie-age This parameter specifies the lifetime of the user cookie when accessing the semantic service Web UI in MDX for Kylin, default is86400, which is 86400 seconds insight.semantic.checkout.dataset.connect This parameter specifies whether to check the connection when MDX for Kylin data set is saved, default istrue insight.semantic.connect.timeout The connection timeout time of MDX for Kylin to Kylin, in milliseconds, default is5000 insight.semantic.socket.timeout MDX for Kylin connection socket timeout time for Kylin connection, unit is milliseconds, default is10000 insight.semantic.connection.request.timeout The connection request timeout time of MDX for Kylin to Kylin, the unit is milliseconds, default is8000 insight.semantic.max-http-header-size The maximum length of MDX for Kylin's http request header, the unit is kb, default is8192 insight.semantic.meta.keep.mdx-query.max.rows The maximum number of mdx query history records in the system，default is 1000000 insight.semantic.segment.sync.enable whether to synchronize the segment information of Kylin, default is true insight.kylin.only.normal.dim.enable MDX for Kylin only fetch normal dimension from Kylin when the join condition is many-to-many, default is false, current kylin not support many-to-many insight.semantic.zookeeper.enable Whether enable to register server info to ZooKeeper, default is false insight.semantic.zookeeper.address The address of ZooKeeper, default is localhost:2181 insight.semantic.zookeeper.node.path The node path in ZooKeeper, default is /mdx insight.semantic.zookeeper.session.timeout The session timeout with ZooKeeper, default is 30000 insight.semantic.reject.enable This parameter is used to specify whether to enable the interception strategy. After enabling, the query request that meets the interception strategy will be rejected. The default is false. 3. MDX module configuration Properties Description insight.mdx.servlet-path This parameter specifies the servlet path in MDX for Kylin, default is/mdx/xmla/ insight.mdx.gateway-path This parameter specifies the gateway servlet path in MDX for Kylin, default is/mdx/xmla_server/ insight.mdx.optimize-enabled This parameter specifies whether to enable statement optimization for mdx in MDX for Kylin, default istrue insight.mdx.calculate-total-need This parameter specifies whether mdx in MDX for Kylin calculates global summaries and subtotals, default istrue insight.mdx.schema.create-from-dataset This parameter specifies whether mdx in MDX for Kylin will create a schema from the dataset, default istrue insight.mdx.schema.refresh.disable This parameter specifies whether to disable refresh for mdx in MDX for Kylin, default isfalse insight.mdx.sql.orderby.enable This parameter specifies whether to enable SQL orderby in MDX for Kylin, default istrue insight.mdx.sql.calcite-engine-hint.enable This parameter specifies whether Kylin is forced to use the Calcite engine when MDX for Kylin is connected to Excel and queries containing similar to are performed. Answer, default isfalse insight.mdx.skip-axis-nonempty-check This parameter specifies whether to skip the null value check when calculating the axis in MDX for Kylin, default istrue insight.mdx.mondrian.olap.case.sensitive This parameter specifies whether the mdx statement in MDX for Kylin is case sensitive, default istrue insight.mdx.mondrian.rolap.maxQueryThreads This parameter specifies the maximum number of query threads for mdx in MDX for Kylin, default is50 insight.mdx.mondrian.query.sql.page.size This parameter specifies the maximum number of records obtained in a single page during mdx paging operation in MDX for Kylin, default is10000 insight.mdx.mondrian.rolap.generate.formatted.sql This parameter specifies whether mdx in MDX for Kylin should format the output sql statement, default isfalse insight.mdx.mondrian.rolap.star.disableCaching This parameter specifies whether to disable caching for mdx in MDX for Kylin, default isfalse insight.mdx.mondrian.rolap.ignoreInvalidMembers This parameter specifies whether mdx in MDX for Kylin ignores invalid members, default istrue insight.mdx.mondrian.rolap.ignoreInvalidMembersDuringQuery This parameter specifies whether mdx in MDX for Kylin ignores invalid members in queries, default istrue insight.mdx.mondrian.cache.expire-minute This parameter specifies that the mdx cache expiration time in MDX for Kylin is several minutes, default is720 insight.mdx.mondrian.olap.pure-axes-calculate.source.type This parameter specifies the dimensional data source type when calculating the mdx axis in MDX for Kylin. The optional parameters are: SNAPSHOT, PARTIAL_CUBE, ALL_CUBE, default isPARTIAL_CUBE insight.mdx.mondrian.olap.pure-axes-calculate.cardinality-gap This parameter specifies the maximum cardinality (exclusive) of dimension table that any SQL on a single dimension table in MDX for Kylin is forced to behavior like insight.mdx.mondrian.olap.pure-axes-calculate.source.type=SNAPSHOT, the special value -1 means always forced and 0 means not forced, default is -1 insight.mdx.mondrian.olap.pure-axes-calculate.total-cardinality-gap This parameter specifies the maximum cardinality (exclusive) of any total-axis SQL result that the SQL is forced to behavior like insight.mdx.mondrian.olap.pure-axes-calculate.source.type=SNAPSHOT, the special value -1 means always forced and 0 means not forced, default is 0 insight.mdx.mondrian.olap.support-non-default-all-member This parameter specifies whether mdx in MDX for Kylin supports non-default all members, default isfalse insight.mdx.mondrian.olap.cell.calc.join-dims This parameter specifies whether mdx in MDX for Kylin joins other dimension tables when calculating the cell, default istrue insight.mdx.mondrian.rolap.return-null-when-divide-zero This parameter specifies whether mdx in MDX for Kylin returns 0 when the divisor is 0, default istrue insight.mdx.mondrian.rolap.optimize-tuple-size-in-aggregate.enable This parameter specifies whether to enable tuple size optimization during mdx aggregation in MDX for Kylin, default isfalse insight.mdx.mondrian.rolap.calculate-cell-when-non-measure This parameter specifies whether to aggregate cell data when mdx in MDX for Kylin has no measurement, default isfalse insight.mdx.mondrian.sql.fetch-dim-from-snapshot This parameter specifies whether mdx in MDX for Kylin prefers to pull dimension data from snapshots, default istrue insight.mdx.mondrian.sql.enableOrderBy This parameter specifies whether to add collation when querying mdx sql in MDX for Kylin, default istrue insight.mdx.mondrian.jdbc.timezone This parameter specifies the time zone of the mdx jdbc query service in MDX for Kylin, default isGMT+8:00 insight.mdx.mondrian.schema.init-level-group-order-by-key This parameter specifies whether mdx in MDX for Kylin is to initialize the level by key value, default istrue insight.mdx.mondrian.query.filter-pushdown.enable This parameter specifies whether mdx in MDX for Kylin is enabled for filtering pushdown, default istrue insight.mdx.mondrian.query.filter-pushdown.in-clause-max-size This parameter specifies the maximum filtering pushdown number of mdx clauses in MDX for Kylin, default is20 insight.mdx.mondrian.query.sql.customize.enable This parameter specifies whether to enable customization of mdx in MDX for Kylin sql, default istrue insight.mdx.mondrian.query.sql.customize.class This parameter specifies the implementation class of mdx CustomizeSqlQuery in MDX for Kylin, default isio.kylin.mdx.web.mondrian.rolap.sql.KylinSqlQuery insight.mdx.mondrian.query.sql.max.size This parameter specifies the maximum number of query rows for mdx sql query in MDX for Kylin, default is50000 insight.mdx.mondrian.rolap.star.disableLocalSegmentCache This parameter specifies whether to enable local cache for the segments queried by mdx in MDX for Kylin, generate specific cache and find block cache SPI, default isfalse insight.mdx.mondrian.olap.triggers.enable This parameter specifies whether to notify Mondrian when the configuration properties of mdx in MDX for Kylin change?true insight.mdx.mondrian.rolap.nonempty This parameter specifies whether mdx in MDX for Kylin needs non-empty setting for each query axis, default isfalse insight.mdx.mondrian.rolap.compareSiblingsByOrderKey This parameter specifies whether mdx in MDX for Kylin checks sibling members and pulls members from the original expression for verification, default isfalse insight.mdx.mondrian.rolap.maxSqlThreads This parameter specifies the maximum number of Mondrian instances that mdx supports SQL in MDX for Kylin, default is100 insight.mdx.mondrian.rolap.maxCacheThreads This parameter specifies the maximum number of threads per Mondrian instance when mdx in MDX for Kylin supports caching, default is100 insight.mdx.mondrian.rolap.queryTimeout Set the timeout time of MDX query, in seconds, default is300 insight.mdx.mondrian.olap.NullMemberRepresentation This parameter specifies how to display the mdx in MDX for Kylin when the result is empty, default is#null insight.mdx.mondrian.visualtotal.solve.order This parameter specifies the mdx setting total order in MDX for Kylin, default is-1 insight.mdx.mondrian.cross-join.native.enable This parameter specifies whether to use Cross Join natively when MDX for Kylin sends queries, default istrue insight.mdx.mondrian.filter.row.limit This parameter specifies whether to add the Limit condition when MDX for Kylin is connected to Excel and perform Filter operation. The default is 0, which means that the Limit condition is not added. If it is 10, the SQL clause of limit 10 will be added to the query. Note: The parameters here must be written in positive integer, otherwise it will cause MDX query execution to report an error. Note: After setting this parameter, it may result in the inverse selection operation of the drop-down list in Excel Data incomplete, default is0 insight.mdx.mondrian.result.limit This parameter is used to specify the number of rows returned by the check SQL and the number of cells. If the limit is exceeded, an error will be returned directly. , default is100000 insight.mdx.mondrian.mdprop.mdx.subqueries This parameter is used to indicate the mdx support level for subqueries. MDX defaults to 2 and does not support subqueries. If you need MDX to support subqueries, you can set it to 31, which is a beta version. insight.mdx.mondrian.query.sql.model-priority-hint.enable This parameter enables whether to specify model priorities in SQL statements.If enabled, the model referenced by the dataset will be specified as the high priority model in the SQL statements. The default value is false. Please note that model priorities will take effect only if the querying measures are all from the same Kylin model. insight.mdx.xmla.support-rowset-visibilities This property is used to define whether to enable the support for HIERARCHY_VISIBILITY and MEASURE_VISIBILITY restrictions of XML/A Schema. The default value of this property is false. After this property has been enabled, previous Excel files with pivot tables must be fixed, otherwise Excel will not work properly with these files. insight.mdx.mondrian.query.limit This parameters is that maximum number of simultaneous queries the system will allow, default is 1000. Powered by Gitbook.            Last Modified： 2022-03-25 11:19:34 "},"configuration/jvm.en.html":{"url":"configuration/jvm.en.html","title":"JVM Configurations","keywords":"","body":"JVM Configurations You can configure the JVM in the configuration file $MDX_HOME/semantic-mdx/set-jvm.sh. The default configuration uses less memory, you can adjust it according to your actual situation. The default value of this configuration is as follows: jvm_xms=-Xms3g jvm_xmx=-Xmx16g You can change it to modify its configuration. jvm_xms=-Xms3g # Initial memory of JVM when MDX for Kylin starts. jvm_xmx=-Xmx16g # The maximum memory of JVM when MDX for Kylin starts. In addition, you can also modify it in $MDX_HOME/conf/insight.properties, which has a higher priority than the above set-jvm.sh file. An example is as follows insight.mdx.jvm.xms=-Xms3g insight.mdx.jvm.xmx=-Xmx16g When MDX for Kylin is started, the system will load the parameters defined in the configuration file $MDX_HOME/semantic-mdx/set-jvm.sh by default. If you modify the parameters, you need to restart MDX for Kylin to make the new parameter values take effect. Powered by Gitbook.            Last Modified： 2022-03-23 17:40:14 "},"rest/authentication.en.html":{"url":"rest/authentication.en.html","title":"Authentication API","keywords":"","body":"Authentication API All APIs in MDX for Kylin are based on Basic Authentication authentication mechanism. Basic Authentication is a simple access control mechanism, which encodes account and password information based on Base64. Adding these information as request headers to HTTP request commands, the back-end will decode the account and password information from the request header for authentication. Take the default account and password of MDX for Kylin, ADMIN:KYLIN, as an example, after encoding, the corresponding authentication information would be Basic QURNSU46S1lMSU4=, and the corresponding HTTP header information is Authorization: Basic QURNSU46S1lMSU4=. Powered by Gitbook.            Last Modified： 2022-03-23 17:29:02 "},"rest/dataset.en.html":{"url":"rest/dataset.en.html","title":"Dataset API","keywords":"","body":"Dataset API This section introduces the Rest APIs related to the dataset. Export Import Update Fetch List Export GET http://:/api/dataset Request Parameters project datasetType datasetName Request Headers Basic Auth authentication Content-Type: application/json Curl examples are as follows: curl -X GET \\ 'http://localhost:7080/api/dataset?project=learn_kylin&datasetType=mdx&datasetName=test' \\ -H 'Authorization: Basic QURNSU46S1lMSU4=' \\ -H 'Content-Type: application/json;charset=utf8' \\ -o export_dataset.json Command interpretation: call the interface, save the json data into the current directory's export_dataset.json Import POST http://:/api/dataset?createType=import Basic Auth authentication Content-Type: application/json createType:import fixed value HTTP Body is a json file of dataset Curl examples are as follows: curl -X POST \\ 'http://localhost:7080/api/dataset?createType=import' \\ -H 'Authorization: Basic QURNSU46S1lMSU4=' \\ -H 'Content-Type: application/json;charset=utf8' \\ -d \"@export_dataset.json\" Command explanation: Call the interface to import the data set, json is the export_dataset.json file in the current directory. Update PUT http://:/api/dataset Basic Auth authentication Content-Type: application/json HTTP Body is a json file of dataset Curl examples are as follows: curl -X PUT \\ 'http://localhost:7080/api/dataset' \\ -H 'Authorization: Basic QURNSU46S1lMSU4=' \\ -H 'Content-Type: application/json;charset=utf8' \\ -d \"@export_dataset.json\" Command explanation: Call the interface to import the data set, json is the export_dataset.json file in the current directory. Fetch List GET http://:/api/datasets/MDX/ Basic Auth authentication Content-Type: application/json Curl examples are as follows: curl -X GET \\ 'http://localhost:7080/api/datasets/MDX/learn_kylin' \\ -H 'Authorization: Basic QURNSU46S1lMSU4=' \\ -H 'Content-Type: application/json;charset=utf8' \\ -o dataset.json Powered by Gitbook.            Last Modified： 2022-03-23 17:30:07 "},"rest/role.en.html":{"url":"rest/role.en.html","title":"Dataset Role API","keywords":"","body":"Dataset Role API For the operations related to the role of the dataset, you can use the related APIs described in this section. Related operations include: Add roles Update roles Query roles Delete roles Add a single user to an existing role Deleting a single user from an existing role Querying the Role List Add roles This API is used to add dataset roles and add users to it. POST http://host:port/api/role Basic Auth Content-Type: application/json The HTTP Body is json and the content is as follows: { \"name\": \"[role name]\", \"contains\": [ { \"type\": \"user\", \"name\": \"[user name 1]\" }, { \"type\": \"user\", \"name\": \"[user name 2]\" } ], \"description\": \"[role description]\" } Curl example is as follows: curl -X POST \\ 'http://host:port/api/role' \\ -H 'Authorization: Basic QURNSU46S1lMSU4=' \\ -H 'Content-Type:application/json;charset=utf8' \\ -d '{\"name\":\"role_test\",\"contains\":[{\"type\":\"user\",\"name\":\"ADMIN\"}],\"description\":\"test\"}' Command explanation: Invoke the interface and add the role of the dataset containing the ADMIN user: role_test returned messages { \"status\": 0, \"data\": { \"role_id\": 2 } } Explanation of the returned information: status is 0 for success, role_id is the role id. Update roles This API is used to batch update user information in the dataset PUT http://host:port/api/role/{roleId} URL Path Variable roleId: The value is role id Basic Auth Content-Type: application/json The HTTP Body is json and the content is as follows: { \"name\": \"[role name]\", \"contains\": [ { \"type\": \"user\", \"name\": \"[user name 1]\" }, { \"type\": \"user\", \"name\": \"[user name 2]\" } ], \"description\": \"[role description]\" } Curl example is as follows: curl -X PUT \\ 'http://host:port/api/role/2' \\ -H 'Authorization: Basic QURNSU46S1lMSU4=' \\ -H 'Content-Type:application/json;charset=utf8' \\ -d '{\"name\":\"role_test\",\"contains\":[{\"type\":\"user\",\"name\":\"ADMIN\"}],\"description\":\"test_update\"}' Command explanation: Call the interface to fully update the role and description of the dataset named role_test. returned messages { \"status\": 0, \"data\": { \"role_id\": 2 } } Explanation of returned information: status is 0 for success, role_id is role id. Query roles GET http://host:port/api/role/ {roleId} URL Path Variable roleId: The value is role id Basic Auth Content-Type: application/json Curl example is as follows: curl -X GET \\ 'http://host:port/api/role/2' \\ -H 'Authorization: Basic QURNSU46S1lMSU4=' Command explanation: Call the interface to query the dataset role information with role id 2. returned messages { \"status\": 0, \"data\": { \"name\": \"role_test\", \"description\": \"test_update\", \"contains\": [ { \"type\": \"user\", \"name\": \"ADMIN\" } ] } } Explanation of returned information: status is 0 for success, and data contains role information for the dataset. Delete roles DELETE http://host:port/api/role/{roleId} URL Path Variable roleId: The value is role id Basic Auth Content-Type: application/json Curl example is as follows: curl -X DELETE \\ 'http://host:port/api/role/2' \\ -H 'Authorization: Basic QURNSU46S1lMSU4=' Command explanation: Call the interface to delete the role information of the dataset with role id 2. returned messages { \"status\": 0, \"data\": \"success\" } Explanation of the returned information: status is 0 for success, and data contains deletion success information. Add a single user to an existing role POST http://host:port/api/role/user/visibility/{roleId} URL Path Variable roleId: The value is role id Basic Auth Content-Type: application/json The HTTP Body is json and the content is as follows: { \"name\": \"[role name]\", \"contains\": [ { \"type\": \"user\", \"name\": \"[user name]\" } ], \"description\": \"\" } Curl example is as follows: curl -X POST \\ 'http://host:port/api/role/user/visibility/2' \\ -H 'Authorization: Basic QURNSU46S1lMSU4=' \\ -H 'Content-Type:application/json;charset=utf8' \\ -d '{\"name\":\"role_test\",\"contains\":[{\"type\":\"user\",\"name\":\"ANALYST\"}],\"description\":\"\"}' Command explanation: Call the interface and add a user ANALYST to the existing dataset role role_test. returned messages { \"status\": 0, \"data\": \"success\" } Explanation of the returned information: status is 0 for success, and data contains deletion success information. Deleting a single user from an existing role DELETE http://host:port/api/role/user/visibility/{roleId} URL Path Variable roleId: The value is role id Basic Auth Content-Type: application/json Curl example is as follows: curl -X DELETE \\ 'http://host:port/api/role/user/visibility/2' \\ -H 'Authorization: Basic QURNSU46S1lMSU4=' \\ -H 'Content-Type:application/json;charset=utf8' \\ -d '{\"name\":\"role_test\",\"contains\":[{\"type\":\"user\",\"name\":\"ANALYST\"}],\"description\":\"\"}' Command explanation: Call the interface to remove a user ANALYST from the existing dataset role role_test. returned messages { \"status\": 0, \"data\": \"success\" } Explanation of the returned information: status is 0 for success, and data contains deletion success information. Querying the Role List GET http://host:port/api/roles Basic Auth Content-Type:application/json URL Parameters pageNum- requiredInteger, the number of pages, the minimum is 0 pageSize- requiredInteger, size per page containsDesc- MandatoryBoolean, whether to include role description RoleName- OptionalString, fuzzy query string, not selected as normal full query, selected will perform fuzzy query based on the corresponding string Curl example is as follows: curl -X GET \\ 'http://host:port/api/roles?pageNum=0&pageSize=500&containsDesc=true' \\ -H 'Authorization: Basic QURNSU46S1lMSU4=' Command explanation: Call the interface and return the data set role list for the specified page. returned messages { \"status\": 0, \"data\": { \"pageNum\": 0, \"pageSize\": 500, \"list\": [ { \"id\": 3, \"name\": \"role_test\", \"description\": \"test_update\" }, { \"id\": 1, \"name\": \"Admin\", \"description\": \"This role is an admin role with all semantic information access to all datasets\" } ], \"total\": 2 } } Explanation of returned information: status is 0 for success, and data contains data set role list information. Powered by Gitbook.            Last Modified： 2022-03-23 17:31:59 "},"rest/query.en.html":{"url":"rest/query.en.html","title":"Query related API","keywords":"","body":"Query related API Related operations include: Clear MDX Query Cache Clear MDX Query Cache MDX for Kylin retains the cache of MDX queries. To set the cache resident time, see Configuration file description GET http://host:port/mdx/xmla//clearCache Request Parameters project Request Headers Basic Auth Content-Type: application/json Curl examples are as follows: curl -X GET \\ 'http://host:port/mdx/xmla/clearCache' \\ -H 'Authorization: Basic QURNSU46S1lMSU4=' curl -X GET \\ 'http://host:port/mdx/xmla//clearCache' \\ -H 'Authorization: Basic QURNSU46S1lMSU4=' Command explanation: Call the interface and clear all MDX query caches. returned messages \" Cache has been cleared.\" \"Cache has been cleared.\" Explanation of the returned message: The cache has been cleared. Powered by Gitbook.            Last Modified： 2022-03-23 17:32:41 "},"appendix/faq.en.html":{"url":"appendix/faq.en.html","title":"FAQ","keywords":"","body":"FAQ The following a list of frequently asked questions about MDX for Kylin. Q: An explanation of MDX for Kylin query cache A: MDX for Kylin will clear the cache in the following situations: MDX for Kylin will actively detect Kylin Segment changes. After discovering changes, MDX for Kylin will actively clear the cache. Dataset metadata changes. Any modification to the dataset will invalidate the query cache of the current dataset. Execute the clear MDX query cache command to clear the query cache. Reference manual The command is as follows: curl -X GET \\ 'http://host:port/mdx/xmla/clearCache' \\ -H 'Authorization: Basic QURNSU46S1lMSU4=' Note: After executing the clear cache command, the query cache of all MDX project will be refreshed; The MDX query cache automatically expires after 12 hours. The expiration time can be adjusted by setting parameter insight.mdx.mondrian.cache.expire-minute in profile $MDX_HOME/conf/insight.properties, with the parameter default value of 12 hours. Powered by Gitbook.            Last Modified： 2022-03-25 15:27:05 "},"appendix/knownlimitation.en.html":{"url":"appendix/knownlimitation.en.html","title":"Known Limitations","keywords":"","body":"Known Limitations The following records some known limitations of MDX for Kylin. Limitation 1: Unlike SQL Server Analysis Service, only the hierarchies can be expanded in Excel. The detailed operation is shown in the figure below. Limitation 2: When using hierarchies on row/column and adding filters on attributes that hierarchies rely on, the grand total and subtotals of calculated measures with currentMember function may be inaccurate. Limitation 3: The implementation of Aggregate function is incomplete. The value of calculated measures using Aggregate function will be affected by report filters or slicers. For example: calculated measures named Aggregate-CM_1-DateKey and Aggregate-CM_1-Due Calendar Date are both defined by an expression as \"Aggregate({[20120401], [20120402], [20120403], [20120404]}, [Measures].[InternetSales COUNT])\", and thus should have a fixed value 26. However, the filter on hierarchy with the value 20120403 affects the value of Aggregate-CM_1-DateKey, changing it to 7. Limitation 4: MDX for Kylin only supports IP hash as load balance policy. Other policies such as round robin might cause slow response or exception when canceling query in Excel. Limitation 5: MDX for Kylin not supports the related kylin to query the relationship of many-to-many. Powered by Gitbook.            Last Modified： 2022-03-25 15:27:38 "},"appendix/formatstring.en.html":{"url":"appendix/formatstring.en.html","title":"Predefined measure formats and measure format characters","keywords":"","body":"Predefined measure formats and measure format characters Predefined Measure Formats Format name    Description Unformatted No formatting. Number Can choose whether to take thousands of separators, negative format, can configure the number of digits after the decimal separator, at least one digit to the left of the decimal separator. Currency Can choose whether to take thousands of separators, negative format, can configure the number of digits after the decimal separator, currency symbol is based on system locale settings. Percentage Displays the number multiplied by 100 with a percent sign (%) appended to the right, can configure the number of digits after the decimal separator. Measure Format Expression A user-defined format expression for numbers can have anywhere from one to four sections separated by semicolons. Usage    Description One section The format expression applies to all values. Two sections The first section applies to positive values and zeros, the second to negative values. Three sections The first section applies to positive values, the second to negative values, and the third to zeros. The following example has two sections. The first section defines the format for positive values and zeros, and the second section defines the format for negative values. #,##0;(-#,##0) The following example has three sections. The first section defines the format for positive values, the second section defines the format for negative values, and displays \"Zero\" if the value is zero. $#,##0;(-$#,##0);\\Z\\e\\r\\o Measure Format Characters Character Description 0 Represents a digit placeholder that displays a digit or a zero (0).If the number has a digit in the position where the zero appears in the format string, the formatted value displays the digit. Otherwise, the formatted value displays a zero in that position.If the number has fewer digits than there are zeros (on either side of the decimal) in the format string, the formatted value displays leading or trailing zeros.If the number has more digits to the right of the decimal separator than there are zeros to the right of the decimal separator in the format expression, the formatted value rounds the number to as many decimal places as there are zeros.If the number has more digits to the left of the decimal separator than there are zeros to the left of the decimal separator in the format expression, the formatted value displays the additional digits without modification. # Represents a digit placeholder that displays a digit or nothing.If the expression has a digit in the position where the number sign (#) appears in the format string, the formatted value displays the digit. Otherwise, the formatted value displays nothing in that position.The number sign (#) placeholder works like the zero (0) digit placeholder except that leading and trailing zeros are not displayed if the number has the same or fewer digits than there are # characters on either side of the decimal separator in the format expression. . Represents a decimal placeholder that determines how many digits are displayed to the left and right of the decimal separator.If the format expression contains only number sign (#) characters to the left of the period (.), numbers smaller than 1 start with a decimal separator. To display a leading zero displayed with fractional numbers, use zero (0) as the first digit placeholder to the left of the decimal separator. % Represents a percentage placeholder. The expression is multiplied by 100. The percent character (%) is inserted in the position where the percentage appears in the format string. , Represents a thousand separator that separates thousands from hundreds within a number that has four or more places to the left of the decimal separator. E- E+ e- e+ Represents scientific format.If the format expression contains at least one digit placeholder (0 or #) to the right of E-, E+, e-, or e+, the formatted value displays in scientific format and E or e is inserted between the number and the number's exponent. The number of digit placeholders to the right determines the number of digits in the exponent. Use E- or e- to include a minus sign next to negative exponents. Use E+ or e+ to include a minus sign next to negative exponents and a plus sign next to positive exponents. + - $ ( ) Displays a literal character.Recommended usage：+：for positive number- or ( )：for negative number$：for currency symbol \\ Displays the next character in the format string.To display a character that has special meaning as a literal character, put a backslash () before the character. The backslash itself is not displayed. Using a backslash is the same as enclosing the next character in double quotation marks. To display a backslash, use two backslashes (\\). Examples of characters that cannot be displayed as literal characters include the following characters:# 0 % E e , . Powered by Gitbook.            Last Modified： 2022-03-16 16:21:11 "}}